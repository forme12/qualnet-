function FileData_Pairs(x)
{
x.t("heart","protocol");
x.t("states","initialization");
x.t("states","figure");
x.t("protocols","qualnet");
x.t("below","protocol");
x.t("2008","2012");
x.t("modeling","protocols");
x.t("shown","figure");
x.t("scalable","network");
x.t("create","events");
x.t("layer","provides");
x.t("layer","figure");
x.t("layer","above");
x.t("layer","protocol");
x.t("events","change");
x.t("events","processed");
x.t("events","figure");
x.t("performs","actions");
x.t("discussed","section");
x.t("creates","event");
x.t("shows","finite");
x.t("essentially","operate");
x.t("state","initialization");
x.t("state","machine");
x.t("state","actions");
x.t("state","perform");
x.t("state","occurs");
x.t("state","may");
x.t("state","transition");
x.t("state","event");
x.t("state","finalization");
x.t("state","protocol");
x.t("state","corresponding");
x.t("state","scheduling");
x.t("interface","layers");
x.t("change","state");
x.t("operates","layers");
x.t("external","input");
x.t("automatically","end");
x.t("consists","wait");
x.t("simulator","basics");
x.t("initialization","state");
x.t("machine","interface");
x.t("machine","representation");
x.t("machine","occurrence");
x.t("machine","two");
x.t("actions","corresponding");
x.t("actions","performed");
x.t("during","simulation");
x.t("network","technologies");
x.t("3.2","modeling");
x.t("processed","protocol");
x.t("wait","event");
x.t("corresponds","transition");
x.t("handler","states");
x.t("handler","state");
x.t("transitions","wait");
x.t("transitions","event");
x.t("finite","state");
x.t("perform","event");
x.t("dispatcher","consists");
x.t("dispatcher","protocol");
x.t("provides","service");
x.t("updating","protocol");
x.t("stack","protocols");
x.t("stack","shown");
x.t("input","configure");
x.t("request","service");
x.t("representation","protocol");
x.t("occurs","automatically");
x.t("occurs","protocol");
x.t("1.2","node");
x.t("occurrence","event");
x.t("2012","scalable");
x.t("adjacent","layer");
x.t("may","include");
x.t("reads","external");
x.t("basics","3.2");
x.t("section","1.2");
x.t("handling","create");
x.t("node","qualnet");
x.t("initial","state");
x.t("transition","finite");
x.t("transition","finalization");
x.t("end","simulation");
x.t("qualnet","heart");
x.t("qualnet","discussed");
x.t("qualnet","essentially");
x.t("qualnet","simulator");
x.t("qualnet","3.2");
x.t("qualnet","runs");
x.t("qualnet","besides");
x.t("event","layer");
x.t("event","state");
x.t("event","corresponds");
x.t("event","handler");
x.t("event","dispatcher");
x.t("event","occurs");
x.t("event","handling");
x.t("event","e.g");
x.t("event","protocol");
x.t("event","based");
x.t("event","returns");
x.t("event","occur");
x.t("e.g","event");
x.t("printed","2008");
x.t("collected","during");
x.t("layers","below");
x.t("layers","stack");
x.t("layers","event");
x.t("include","updating");
x.t("3-1","shows");
x.t("3-1","wait");
x.t("3-1","protocol");
x.t("figure","3-1");
x.t("figure","1-1");
x.t("runs","protocol");
x.t("services","layers");
x.t("data","request");
x.t("configure","initial");
x.t("besides","event");
x.t("finalization","state");
x.t("above","using");
x.t("protocol","performs");
x.t("protocol","creates");
x.t("protocol","state");
x.t("protocol","operates");
x.t("protocol","transitions");
x.t("protocol","finite");
x.t("protocol","stack");
x.t("protocol","occurs");
x.t("protocol","reads");
x.t("protocol","qualnet");
x.t("protocol","either");
x.t("protocol","model");
x.t("protocol","pass");
x.t("protocol","statistics");
x.t("protocol","waits");
x.t("two","states");
x.t("based","protocol");
x.t("operate","finite");
x.t("service","layer");
x.t("service","adjacent");
x.t("either","create");
x.t("model","event");
x.t("model","qualnet");
x.t("corresponding","event");
x.t("simulation","printed");
x.t("simulation","finalization");
x.t("using","services");
x.t("scheduling","events");
x.t("1-1","layer");
x.t("pass","data");
x.t("returns","wait");
x.t("statistics","collected");
x.t("waits","event");
x.t("occur","event");
x.t("performed","event");
}
