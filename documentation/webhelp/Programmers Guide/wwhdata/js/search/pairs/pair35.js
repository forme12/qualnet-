function FileData_Pairs(x)
{
x.t("interfaces","file");
x.t("interfaces","operating");
x.t("interfaces","including");
x.t("clock","time");
x.t("clock","reading");
x.t("registers","horizon");
x.t("partition_parseargv","file");
x.t("unlike","external_senddataapplayerudp");
x.t("senddata","functions");
x.t("passed","interface\u2019s");
x.t("altitude","delay");
x.t("altitude","z-coordinate");
x.t("altitude","azimuth");
x.t("included","configuration");
x.t("equal","typically");
x.t("properties","simulation");
x.t("parameter","provided");
x.t("parameter","size");
x.t("parameter","false");
x.t("parameter","true");
x.t("parameter","ignored");
x.t("parameter","omitted");
x.t("parameter","null");
x.t("parameter","amount");
x.t("parameter","connectsocket");
x.t("parameter","mapping");
x.t("parameter","used");
x.t("indicated","partition");
x.t("placed","valuesize");
x.t("placed","value");
x.t("exist","function");
x.t("external_changenodepositionorientationandvelocityattime","external_interface");
x.t("external_changenodepositionorientationandvelocityattime","function");
x.t("blocking","flag");
x.t("blocking","enabled");
x.t("blocking","true");
x.t("possible","send");
x.t("defines","structure");
x.t("defines","following");
x.t("defines","class");
x.t("defines","general");
x.t("receives","established");
x.t("receives","data");
x.t("/main/partition.cpp","include");
x.t("endtime","time");
x.t("endtime","parameters");
x.t("anything","just");
x.t("just","generic");
x.t("converted","proper");
x.t("converted","values");
x.t("terminating","null");
x.t("receivesize","parameter");
x.t("receivesize","number");
x.t("receivesize","bool");
x.t("2008","2012");
x.t("files","external.h");
x.t("wish","add");
x.t("fragmentoffset","fragment");
x.t("fragmentoffset","tostype");
x.t("within","proper");
x.t("implement","socket");
x.t("scalable","network");
x.t("description","wallclock");
x.t("external_setreceivedelay","external_interface");
x.t("external_setreceivedelay","function");
x.t("/include/external_util.h","defines");
x.t("/include/external_util.h","syntax");
x.t("sending","packets");
x.t("sending","node");
x.t("uint8","ttl");
x.t("ttl","time");
x.t("ttl","ttl_not_set");
x.t("ttl","char");
x.t("keysize","size");
x.t("keysize","char");
x.t("resolved","non-zero");
x.t("user-specified","time");
x.t("keep","track");
x.t("external_settimemanagementrealtime","external_interface");
x.t("external_settimemanagementrealtime","function");
x.t("callback","function");
x.t("source","time");
x.t("partition_getrealtimemode","function");
x.t("partition_getrealtimemode","partitiondata");
x.t("layer","function");
x.t("layer","using");
x.t("key","placed");
x.t("key","exist");
x.t("key","keysize");
x.t("key","bytes");
x.t("key","exists");
x.t("key","int");
x.t("key","may");
x.t("key","value");
x.t("key","maps");
x.t("key","pointer");
x.t("events","syntax");
x.t("activate","scheduling");
x.t("always","meters");
x.t("external_vararrayconcatstring","external_vararray");
x.t("external_vararrayconcatstring","function");
x.t("once","array");
x.t("variables","host");
x.t("wrapper","above");
x.t("void","external_changenodepositionorientationandvelocityattime");
x.t("void","external_setreceivedelay");
x.t("void","external_settimemanagementrealtime");
x.t("void","external_vararrayconcatstring");
x.t("void","external_sleep");
x.t("void","external_changenodeposition");
x.t("void","external_ntoh");
x.t("void","external_forwarddata");
x.t("void","external_senddatanetworklayer");
x.t("void","external_createmapping");
x.t("void","external_changerealtimelookahead");
x.t("void","partition_clientstateset");
x.t("void","external_socketinit");
x.t("void","external_vararrayfree");
x.t("void","partition_clientstatefind");
x.t("void","external_setsimulationendtime");
x.t("void","ptr");
x.t("void","external_deactivatenode");
x.t("void","external_changenodeorientation");
x.t("void","external_hton");
x.t("void","external_changenodevelocityattime");
x.t("void","external_vararrayaccomodatesize");
x.t("void","external_changenodepositionandorientation");
x.t("void","external_vararrayappenddata");
x.t("void","partition_setrealtimemode");
x.t("void","external_activatenode");
x.t("void","external_vararrayinit");
x.t("void","forwarddata");
x.t("void","external_remotforwarddata");
x.t("void","external_senddataapplayerudp");
x.t("void","external_senddataapplayertcp");
x.t("void","external_bootstrap");
x.t("void","clientstate");
x.t("external_queryexternaltime","external_interface");
x.t("external_queryexternaltime","function");
x.t("6.2.2","receives");
x.t("6.2.2","function");
x.t("6.2.2","prevents");
x.t("arguments","command");
x.t("arguments","function");
x.t("don\u2019t","fragment");
x.t("(output)","return");
x.t("(output)","valuesize");
x.t("node\u2019s","position");
x.t("flag","indicates");
x.t("listens","connections");
x.t("job","interface");
x.t("injecting","traffic");
x.t("current","time");
x.t("current","simulation");
x.t("execute","speed");
x.t("execute","first");
x.t("execute","real");
x.t("user","packet");
x.t("creates","mapping");
x.t("double","double");
x.t("double","clocktype");
x.t("double","speed");
x.t("double","c1speed");
x.t("double","short");
x.t("double","c2speed");
x.t("double","c3speed");
x.t("enabled","external_socketvalid");
x.t("enabled","threaded");
x.t("uses","real");
x.t("line","arguments");
x.t("line","simprops");
x.t("line","options");
x.t("line","argv");
x.t("nodeaddress","nodeaddress");
x.t("nodeaddress","char");
x.t("nodeaddress","destaddr");
x.t("nodeaddress","srcaddr");
x.t("pair","nodes.by");
x.t("field","header");
x.t("coordinate","altitude");
x.t("coordinate","units");
x.t("coordinate","distance");
x.t("coordinate","longitude");
x.t("coordinate","latitude");
x.t("coordinate","systems");
x.t("coordinate","values");
x.t("coordinate","system");
x.t("implemented","file");
x.t("until","data");
x.t("interface","endtime");
x.t("interface","key");
x.t("interface","time");
x.t("interface","list");
x.t("interface","found");
x.t("interface","api");
x.t("interface","external_querysimulationtime");
x.t("interface","specified");
x.t("interface","name");
x.t("interface","address");
x.t("interface","lookahead");
x.t("interface","delay");
x.t("interface","syntax");
x.t("interface","function");
x.t("interface","different");
x.t("interface","node");
x.t("interface","code");
x.t("interface","registration");
x.t("interface","return");
x.t("interface","developer");
x.t("interface","using");
x.t("interface","returns");
x.t("interface","update");
x.t("kernel","early");
x.t("early","simulation");
x.t("state","indicated");
x.t("state","state");
x.t("state","found");
x.t("state","information");
x.t("mode","false");
x.t("mode","syntax");
x.t("mode","function");
x.t("mode","listensocket");
x.t("provided","velocity");
x.t("provided","accurate");
x.t("necessary","syntax");
x.t("errors","occurred");
x.t("external_socketconnect","external_socket");
x.t("external_socketconnect","function");
x.t("external_socketsend","wrapper");
x.t("external_socketsend","external_socket");
x.t("external_socketsend","function");
x.t("categories","external");
x.t("clocktype","endtime");
x.t("clocktype","external_queryexternaltime");
x.t("clocktype","external_querysimulationtime");
x.t("clocktype","mobilityeventtime");
x.t("clocktype","lookahead");
x.t("clocktype","delay");
x.t("clocktype","external_queryrealtime");
x.t("clocktype","amount");
x.t("clocktype","deactivationeventtime");
x.t("clocktype","timestamp");
x.t("clocktype","external_querycputime");
x.t("forwarded","data");
x.t("exit","external_setsimulationendtime");
x.t("/include/partition.h","syntax");
x.t("payload","int");
x.t("payload","data");
x.t("payload","consist");
x.t("type","external_vararray");
x.t("type","length");
x.t("type","service");
x.t("change","third");
x.t("change","second");
x.t("change","first");
x.t("open","errors");
x.t("times","attempt");
x.t("external","interfaces");
x.t("external","source");
x.t("external","interface");
x.t("external","socket");
x.t("time","callback");
x.t("time","mode");
x.t("time","external");
x.t("time","during");
x.t("time","stamp");
x.t("time","according");
x.t("time","velocity");
x.t("time","horizon");
x.t("time","partition_clientstateset");
x.t("time","6.3.2");
x.t("time","delay");
x.t("time","function");
x.t("time","external_queryrealtime");
x.t("time","format");
x.t("time","sleep");
x.t("time","qualnet");
x.t("time","spent");
x.t("time","deactivation");
x.t("time","depending");
x.t("time","send");
x.t("time","live");
x.t("time","management");
x.t("time","used");
x.t("time","simulation");
x.t("time","external_querycputime");
x.t("calls","external_sleep");
x.t("calls","function");
x.t("calls","receive");
x.t("calls","individual");
x.t("external_getinterfacebyname","function");
x.t("external_getinterfacebyname","external_interfacelist");
x.t("packets","contents");
x.t("packets","application");
x.t("mappings","enabling/disabling");
x.t("trace","trace");
x.t("trace","trace_forward");
x.t("trace","protocol");
x.t("vector","always");
x.t("vector","node");
x.t("vector","expected");
x.t("external_default_var_array_size","parameters");
x.t("external_default_var_array_size","external_vararrayaccomodatesize");
x.t("external_socket","external_vararray");
x.t("external_socket","char");
x.t("external_socket","parameters");
x.t("external_socket","socket");
x.t("external_socket","bool");
x.t("external_socket","connectsocket");
x.t("external_socket","listensocket");
x.t("sockets","file");
x.t("sockets","6.3.1");
x.t("/include/wallclock.h","defines");
x.t("/include/wallclock.h","api");
x.t("unknown","option");
x.t("execution","mode");
x.t("connection","non-blocking");
x.t("connection","return");
x.t("connection","established");
x.t("connection","valid");
x.t("connection","successful");
x.t("connection","created");
x.t("rate","change");
x.t("i.e","socket");
x.t("i.e","several");
x.t("back","external");
x.t("simprops","partitiondata");
x.t("simprops","global");
x.t("checks","new");
x.t("checks","presence");
x.t("checks","whether");
x.t("checks","socket");
x.t("checks","configuration");
x.t("default","destination");
x.t("default","function");
x.t("mac","address");
x.t("speed","parameter");
x.t("speed","double");
x.t("speed","speed");
x.t("speed","m/s");
x.t("speed","values");
x.t("speed","meters/sec");
x.t("c1speed","double");
x.t("c1speed","rate");
x.t("mobility","event");
x.t("uninitialized","array");
x.t("increases","maximum");
x.t("assumes","previous");
x.t("new","command");
x.t("new","lookahead");
x.t("new","options");
x.t("new","minimum");
x.t("statename","void");
x.t("statename","name");
x.t("statename","parameters");
x.t("indication","whether");
x.t("indication","successful");
x.t("indication","run");
x.t("contents","packet");
x.t("updates","velocity");
x.t("updates","position");
x.t("/include","external_settimemanagementrealtime");
x.t("adversely","affect");
x.t("size","key");
x.t("size","external_default_var_array_size");
x.t("size","new");
x.t("size","size");
x.t("size","file");
x.t("size","parameters");
x.t("size","array");
x.t("size","error");
x.t("size","next");
x.t("size","syntax");
x.t("size","initial");
x.t("size","bool");
x.t("size","amount");
x.t("size","value");
x.t("size","data");
x.t("size","packet");
x.t("size","unsigned");
x.t("command","line");
x.t("orientations","external_senddataapplayerudp");
x.t("ttl_not_set","parameters");
x.t("fragments","bit");
x.t("block","parameter");
x.t("block","indication");
x.t("block","block");
x.t("block","false");
x.t("block","true");
x.t("block","defaults");
x.t("block","amount");
x.t("file","string");
x.t("file","syntax");
x.t("file","external_socket.h");
x.t("file","function");
x.t("file","qualnet_home");
x.t("clock\u2019s","value");
x.t("cpu","time");
x.t("list","interface");
x.t("list","external");
x.t("list","name");
x.t("list","char");
x.t("found","function");
x.t("found","null");
x.t("found","external_bootstrap");
x.t("initialization","process");
x.t("simulator","exit");
x.t("short","fragmentoffset");
x.t("short","identification");
x.t("short","elevation");
x.t("short","azimuth");
x.t("proper","range");
x.t("external_configstringpresent","function");
x.t("external_configstringpresent","nodeinput");
x.t("indicates","whether");
x.t("track","elapsed");
x.t("during","interface");
x.t("during","simulation");
x.t("stamp","forward");
x.t("external_forwarddataassignnodeid_on","parameters");
x.t("add","external_vararrayconcatstring");
x.t("add","new");
x.t("add","size");
x.t("udp","default");
x.t("udp","tcp");
x.t("udp","external_senddataapplayertcp");
x.t("dontfragment","indication");
x.t("dontfragment","bool");
x.t("180","external_changenodepositionorientationandvelocityattime");
x.t("180","speed");
x.t("180","c1speed");
x.t("180","external_changenodepositionandorientation");
x.t("interfacing","qualnet");
x.t("api","calls");
x.t("api","provides");
x.t("api","6.3");
x.t("api","reference");
x.t("api","utility");
x.t("resuming","wall");
x.t("guide","description");
x.t("network","layer");
x.t("network","technologies");
x.t("network","byte");
x.t("network","order");
x.t("tos","type");
x.t("tos","unsigned");
x.t("according","interface\u2019s");
x.t("check","return");
x.t("external_vararray","size");
x.t("external_vararray","array");
x.t("external_vararray","function");
x.t("external_vararray","least");
x.t("external_vararray","data");
x.t("external_vararray","allocates");
x.t("external_vararray","external_vararrayinit");
x.t("external_vararray","including");
x.t("initialized","earlier");
x.t("traffic","external");
x.t("external_sleep","clocktype");
x.t("external_sleep","function");
x.t("false","receivesize");
x.t("false","block");
x.t("false","external_datanotsent");
x.t("false","parameters");
x.t("false","non-blocking");
x.t("false","invalid");
x.t("false","otherwise");
x.t("tcp","senddata");
x.t("tcp","connection");
x.t("tcp","tcp");
x.t("tcp","creating");
x.t("apptype","app");
x.t("trace_forward","priority");
x.t("trace_forward","tostype");
x.t("resolves","mapping");
x.t("external_changenodeposition","external_interface");
x.t("external_changenodeposition","function");
x.t("depends","terrain");
x.t("units","terrain");
x.t("units","used");
x.t("units","position");
x.t("vice","versa");
x.t("external_ntoh","void");
x.t("external_ntoh","function");
x.t("accepts","socket");
x.t("external_datanotsent","returned");
x.t("iface","nodeaddress");
x.t("iface","clocktype");
x.t("iface","external");
x.t("iface","char");
x.t("iface","parameters");
x.t("iface","node");
x.t("external_querysimulationtime","external_interface");
x.t("external_querysimulationtime","function");
x.t("puts","qualnet");
x.t("specified","key");
x.t("specified","size");
x.t("specified","name");
x.t("specified","client\u2019s");
x.t("specified","length");
x.t("forwardsize","size");
x.t("forwardsize","int");
x.t("forwardsize","external_forwarddata_receiveropt");
x.t("true","parameters");
x.t("true","string");
x.t("true","function");
x.t("true","socket");
x.t("true","bool");
x.t("true","return");
x.t("true","call");
x.t("true","simulation");
x.t("defaults","ttl");
x.t("defaults","external_default_var_array_size");
x.t("defaults","trace_forward");
x.t("defaults","true");
x.t("defaults","app");
x.t("defaults","external_createmapping");
x.t("defaults","app_forward");
x.t("byte","ordering");
x.t("byte","order");
x.t("converts","data");
x.t("external_forwarddata","external_interface");
x.t("external_forwarddata","function");
x.t("external_forwarddata","except");
x.t("forward","forwardsize");
x.t("forward","partitionid");
x.t("forward","function");
x.t("forward","fwdreceiveropt");
x.t("name","included");
x.t("name","parameters");
x.t("name","function");
x.t("name","return");
x.t("name","interface's");
x.t("name","used");
x.t("creating","mappings");
x.t("creating","packet");
x.t("external_senddatanetworklayer","external_interface");
x.t("external_senddatanetworklayer","function");
x.t("range","converted");
x.t("range","coordinate");
x.t("range","proper");
x.t("range","azimuth/elevation");
x.t("range","syntax");
x.t("external_noerror","successful");
x.t("connects","listening");
x.t("performance","function");
x.t("searches","interface");
x.t("searches","specified");
x.t("char","key");
x.t("char","payload");
x.t("char","statename");
x.t("char","name");
x.t("char","address");
x.t("char","string");
x.t("char","value");
x.t("char","data");
x.t("char","protocol");
x.t("char","argv");
x.t("ends","current");
x.t("changed","azimuth/elevation");
x.t("changed","valid");
x.t("mobilityeventtime","double");
x.t("mobilityeventtime","absolute");
x.t("external_interface","external_getinterfacebyname");
x.t("external_interface","iface");
x.t("frequently","may");
x.t("const","char");
x.t("wishes","store");
x.t("bytes","receivesize");
x.t("bytes","(output)");
x.t("bytes","defaults");
x.t("bytes","value");
x.t("bytes","data");
x.t("bytes","received");
x.t("distance","units");
x.t("external_socketvalid","external_socket");
x.t("external_socketvalid","function");
x.t("listen","connectsocket");
x.t("listen","port");
x.t("listen","incoming");
x.t("provides","place");
x.t("provides","several");
x.t("system-specific","utility");
x.t("methods","pausing");
x.t("methods","additional");
x.t("partition.h","folder");
x.t("parameters","list");
x.t("parameters","iface");
x.t("parameters","amoun");
x.t("parameters","partition");
x.t("parameters","array");
x.t("parameters","argc");
x.t("parameters","socket");
x.t("parameters","ptr");
x.t("parameters","invalid");
x.t("parameters","partitiondata");
x.t("parameters","listensocket");
x.t("parameters","pointer");
x.t("parameters","nodeinput");
x.t("modifies","lookahead");
x.t("amoun","amount");
x.t("exists","function");
x.t("useful","socket");
x.t("programmer","first");
x.t("sends","packets");
x.t("sends","data");
x.t("sends","packet");
x.t("place","external");
x.t("app","app_forward");
x.t("app","application");
x.t("indicate","size");
x.t("generic","string");
x.t("generic","pointer");
x.t("frees","memory");
x.t("partition","wish");
x.t("partition","external");
x.t("partition","statename");
x.t("partition","function");
x.t("partition","return");
x.t("partition","bool");
x.t("partition","runasrealtime");
x.t("partition","pointer");
x.t("partition","returns");
x.t("destination","size");
x.t("destination","application");
x.t("address","sending");
x.t("address","mac");
x.t("address","generic");
x.t("address","int");
x.t("address","string");
x.t("address","receiving");
x.t("address","node");
x.t("address","destaddr");
x.t("address","connect");
x.t("morefragments","indication");
x.t("morefragments","unsigned");
x.t("originally","creating");
x.t("external_createmapping","external_interface");
x.t("external_createmapping","function");
x.t("external_createmapping","mapping");
x.t("final","functions");
x.t("automates","synchronizing");
x.t("external_changerealtimelookahead","external_interface");
x.t("external_changerealtimelookahead","function");
x.t("sets","minimum");
x.t("sets","end");
x.t("sets","replaces");
x.t("sets","simulation");
x.t("int","receivesize");
x.t("int","ttl");
x.t("int","keysize");
x.t("int","size");
x.t("int","forwardsize");
x.t("int","partitionid");
x.t("int","datasize");
x.t("int","argc");
x.t("int","valuesize");
x.t("int","port");
x.t("int","payloadsize");
x.t("int","maxattempts");
x.t("int","external_resolvemapping");
x.t("partitionid","clocktype");
x.t("partitionid","identifier");
x.t("examine","simulation");
x.t("traceprotocoltype","trace");
x.t("string","equal");
x.t("string","i.e");
x.t("string","check");
x.t("string","parameters");
x.t("string","string");
x.t("string","present");
x.t("string","syntax");
x.t("string","representation");
x.t("string","external_vararrayfree");
x.t("string","end");
x.t("string","value");
x.t("string","typically");
x.t("string","returns");
x.t("third","coordinate");
x.t("velocity","vector");
x.t("array","type");
x.t("array","size");
x.t("array","char");
x.t("array","bytes");
x.t("array","parameters");
x.t("array","string");
x.t("array","syntax");
x.t("array","variable");
x.t("array","send");
x.t("array","external_vararrayappenddata");
x.t("array","data");
x.t("array","6.3.3.2");
x.t("array","pointer");
x.t("array","operations");
x.t("array","unsigned");
x.t("array","increased");
x.t("attempt","connecting");
x.t("three","categories");
x.t("lookahead","new");
x.t("lookahead","parameters");
x.t("lookahead","value");
x.t("lookahead","far");
x.t("receiving","node");
x.t("moving","nodes");
x.t("second","external_changenodepositionorientationandvelocityattime");
x.t("second","coordinate");
x.t("second","speed");
x.t("second","external_configstringpresent");
x.t("second","syntax");
x.t("second","c2speed");
x.t("second","external_changenodevelocityattime");
x.t("second","c3speed");
x.t("azimuth/elevation","values");
x.t("earlier","call");
x.t("functions","implement");
x.t("functions","sending");
x.t("functions","injecting");
x.t("functions","implemented");
x.t("functions","external");
x.t("functions","sockets");
x.t("functions","file");
x.t("functions","interfacing");
x.t("functions","useful");
x.t("functions","sends");
x.t("functions","simplify");
x.t("functions","divided");
x.t("functions","functions");
x.t("functions","6.3");
x.t("functions","implements");
x.t("functions","defined");
x.t("functions","variable-sized");
x.t("functions","operations");
x.t("simplify","job");
x.t("divided","three");
x.t("horizon","function");
x.t("horizon","value");
x.t("store","receiving");
x.t("store","partition_clientstatefind");
x.t("partition_clientstateset","function");
x.t("partition_clientstateset","partitiondata");
x.t("overloaded","function");
x.t("begin","processing");
x.t("359","elevation");
x.t("present","false");
x.t("host-to-network","byte");
x.t("6.3.1","external");
x.t("error","indication");
x.t("error","simulator");
x.t("error","returned");
x.t("error","occurred");
x.t("blocks","until");
x.t("6.3","utility");
x.t("pausing","resuming");
x.t("ahead","real");
x.t("syntax","void");
x.t("syntax","clocktype");
x.t("syntax","external_interface");
x.t("syntax","int");
x.t("syntax","bool");
x.t("syntax","external_socketerrortype");
x.t("delay","mobility");
x.t("delay","external_forwarddata");
x.t("delay","parameters");
x.t("delay","delay");
x.t("delay","minimum");
x.t("delay","changing");
x.t("delay","forwarding");
x.t("delay","two");
x.t("client\u2019s","state");
x.t("6.3.2","functions");
x.t("mapped","value");
x.t("absolute","simulation");
x.t("z-coordinate","azimuth");
x.t("next","functions");
x.t("external_socketinit","external_socket");
x.t("external_socketinit","function");
x.t("representation","address");
x.t("allowed","run");
x.t("first","coordinate");
x.t("first","time");
x.t("first","functions");
x.t("first","call");
x.t("minimum","size");
x.t("minimum","delay");
x.t("external_forwarddata_receiveropt","fwdreceiveropt");
x.t("options","external");
x.t("options","otherwise");
x.t("executing","real");
x.t("headers","null");
x.t("resolve","external_activatenode");
x.t("6.3.3","operating");
x.t("external_vararrayfree","external_vararray");
x.t("external_vararrayfree","function");
x.t("connecting","error");
x.t("external.h","external_util.h");
x.t("number","arguments");
x.t("number","times");
x.t("number","bytes");
x.t("number","port");
x.t("app_forward","trace");
x.t("app_forward","traceprotocoltype");
x.t("app_forward","app_forward");
x.t("app_forward","simply");
x.t("datasize","parameter");
x.t("datasize","clocktype");
x.t("datasize","size");
x.t("processing","events");
x.t("external_dectivatenode","function");
x.t("stops","processing");
x.t("presence","string");
x.t("external_socket.h","defines");
x.t("initializes","array");
x.t("initializes","socket");
x.t("terminated","null");
x.t("non-blocking","mode");
x.t("non-blocking","defaults");
x.t("2012","scalable");
x.t("elapsed","real");
x.t("implements","methods");
x.t("implements","host-to-network");
x.t("implements","socket");
x.t("function","registers");
x.t("function","partition_parseargv");
x.t("function","receives");
x.t("function","listens");
x.t("function","creates");
x.t("function","uses");
x.t("function","interface");
x.t("function","checks");
x.t("function","default");
x.t("function","increases");
x.t("function","assumes");
x.t("function","updates");
x.t("function","cpu");
x.t("function","resolves");
x.t("function","puts");
x.t("function","converts");
x.t("function","connects");
x.t("function","searches");
x.t("function","modifies");
x.t("function","sends");
x.t("function","frees");
x.t("function","external_createmapping");
x.t("function","automates");
x.t("function","sets");
x.t("function","blocks");
x.t("function","syntax");
x.t("function","initializes");
x.t("function","function");
x.t("function","section");
x.t("function","changes");
x.t("function","closes");
x.t("function","works");
x.t("function","adds");
x.t("function","deactivates");
x.t("function","activates");
x.t("function","similar");
x.t("function","turns");
x.t("function","external_vararrayappenddata");
x.t("function","output");
x.t("function","defined");
x.t("function","called");
x.t("function","described");
x.t("function","packet");
x.t("function","returns");
x.t("function","versions");
x.t("function","differs");
x.t("length","time");
x.t("length","address");
x.t("partition_clientstatefind","function");
x.t("partition_clientstatefind","partitiondata");
x.t("c2speed","double");
x.t("c2speed","rate");
x.t("y-coordinate","third");
x.t("maximum","size");
x.t("specifies","lookahead");
x.t("external_queryrealtime","function");
x.t("external_queryrealtime","return");
x.t("receive","bytes");
x.t("receive","function");
x.t("may","anything");
x.t("may","type");
x.t("may","adversely");
x.t("may","block");
x.t("may","different");
x.t("processes","function");
x.t("whether","blocking");
x.t("whether","don\u2019t");
x.t("whether","fragments");
x.t("whether","store");
x.t("whether","multithreading");
x.t("whether","call");
x.t("whether","simulation");
x.t("different","partition");
x.t("different","address");
x.t("external_schedule_strict","clocktype");
x.t("longitude","third");
x.t("longitude","y-coordinate");
x.t("m/s","c1speed");
x.t("/include/external_socket.h","defines");
x.t("/include/external_socket.h","external_socketinit");
x.t("/include/external_socket.h","reverse");
x.t("/include/external_socket.h","contains");
x.t("consecutive","calls");
x.t("responsibility","external");
x.t("instead","syntax");
x.t("ignored","syntax");
x.t("section","6.2.2");
x.t("format","nanoseconds");
x.t("sleep","external_setreceivedelay");
x.t("sleep","specified");
x.t("argc","char");
x.t("argc","number");
x.t("external_setsimulationendtime","external_interface");
x.t("external_setsimulationendtime","function");
x.t("transport","headers");
x.t("transport","header");
x.t("changes","orientation");
x.t("changes","position");
x.t("x-coordinate","second");
x.t("socket","blocking");
x.t("socket","parameter");
x.t("socket","possible");
x.t("socket","receives");
x.t("socket","open");
x.t("socket","connection");
x.t("socket","api");
x.t("socket","accepts");
x.t("socket","char");
x.t("socket","listen");
x.t("socket","programmer");
x.t("socket","parameters");
x.t("socket","address");
x.t("socket","functions");
x.t("socket","syntax");
x.t("socket","non-blocking");
x.t("socket","function");
x.t("socket","socket");
x.t("socket","code");
x.t("socket","return");
x.t("socket","listening");
x.t("socket","valid");
x.t("socket","data");
x.t("socket","structure");
x.t("socket","pointer");
x.t("allocated","array");
x.t("returned","return");
x.t("returned","data");
x.t("closes","socket");
x.t("qualnet_home","/main/partition.cpp");
x.t("qualnet_home","/include/external_util.h");
x.t("qualnet_home","/include/partition.h");
x.t("qualnet_home","/include/wallclock.h");
x.t("qualnet_home","/include");
x.t("qualnet_home","/include/external_socket.h");
x.t("qualnet_home","/include/external.h");
x.t("node","user-specified");
x.t("node","activate");
x.t("node","void");
x.t("node","double");
x.t("node","forwarded");
x.t("node","clocktype");
x.t("node","orientations");
x.t("node","short");
x.t("node","mobilityeventtime");
x.t("node","address");
x.t("node","originally");
x.t("node","begin");
x.t("node","first");
x.t("node","stops");
x.t("node","function");
x.t("node","node");
x.t("node","externalscheduletype");
x.t("node","identification");
x.t("node","orientation");
x.t("node","forwarding");
x.t("node","data");
x.t("node","azimuth");
x.t("node","position");
x.t("node","srcaddr");
x.t("omitted","simulation");
x.t("simply","forwards");
x.t("important","actual");
x.t("externalscheduletype","scheduling");
x.t("works","coordinate");
x.t("works","using");
x.t("expected","distance");
x.t("ordering","final");
x.t("initial","size");
x.t("ptr","pointer");
x.t("ptr","unsigned");
x.t("assigned","newly");
x.t("reference","guide");
x.t("identifier","partition");
x.t("code","examine");
x.t("code","6.3.3.1");
x.t("end","parameter");
x.t("end","time");
x.t("end","array");
x.t("replaces","pointer");
x.t("client","wishes");
x.t("invalid","overloaded");
x.t("invalid","external_socketlisten");
x.t("registration","interface");
x.t("connected","syntax");
x.t("connected","socket");
x.t("external_socketrecv","external_socket");
x.t("external_socketrecv","function");
x.t("folder","qualnet_home");
x.t("return","value");
x.t("bool","blocking");
x.t("bool","partition_getrealtimemode");
x.t("bool","block");
x.t("bool","external_configstringpresent");
x.t("bool","dontfragment");
x.t("bool","external_socketvalid");
x.t("bool","morefragments");
x.t("bool","external_configstringisyes");
x.t("bool","runasrealtime");
x.t("bool","threaded");
x.t("external_configstringisyes","function");
x.t("external_configstringisyes","nodeinput");
x.t("adds","string");
x.t("adds","data");
x.t("operating","system-specific");
x.t("affect","performance");
x.t("option","error");
x.t("option","whether");
x.t("message","ttl");
x.t("header","fragmentoffset");
x.t("header","ttl");
x.t("header","payload");
x.t("header","dontfragment");
x.t("header","tos");
x.t("header","morefragments");
x.t("header","application");
x.t("header","protocol");
x.t("deactivates","node");
x.t("memory","array");
x.t("memory","allocated");
x.t("least","specified");
x.t("previous","data");
x.t("versa","external_hton");
x.t("listening","socket");
x.t("listening","connected");
x.t("qualnet","external");
x.t("qualnet","time");
x.t("qualnet","allowed");
x.t("qualnet","first");
x.t("qualnet","sleep");
x.t("qualnet","utility");
x.t("qualnet","real");
x.t("spent","sleeping");
x.t("greater","function");
x.t("actual","data");
x.t("identification","field");
x.t("identification","bool");
x.t("identification","identification");
x.t("external_deactivatenode","external_interface");
x.t("external_changenodeorientation","external_interface");
x.t("external_changenodeorientation","function");
x.t("-180","elevation");
x.t("event","execute");
x.t("variable","size");
x.t("/include/external.h","syntax");
x.t("null","partition_getrealtimemode");
x.t("null","payload");
x.t("null","found");
x.t("null","datasize");
x.t("null","character");
x.t("changing","node");
x.t("changing","position");
x.t("destaddr","address");
x.t("destaddr","unsigned");
x.t("deactivation","external_changenodeposition");
x.t("deactivation","external_dectivatenode");
x.t("elevation","double");
x.t("elevation","speed");
x.t("elevation","180");
x.t("elevation","parameters");
x.t("elevation","-180");
x.t("elevation","elevation");
x.t("external_hton","void");
x.t("external_hton","function");
x.t("occurred","block");
x.t("occurred","syntax");
x.t("less","specified");
x.t("wallclock","used");
x.t("wallclock","class");
x.t("amount","time");
x.t("amount","cpu");
x.t("amount","parameters");
x.t("amount","value");
x.t("amount","data");
x.t("partitiondata","const");
x.t("partitiondata","parameters");
x.t("partitiondata","partition");
x.t("partitiondata","partitiondata");
x.t("partitiondata","pointer");
x.t("include","checks");
x.t("include","appropriate");
x.t("runasrealtime","indication");
x.t("runasrealtime","parameters");
x.t("fragment","bit");
x.t("fragment","offset");
x.t("valuesize","parameter");
x.t("valuesize","size");
x.t("valuesize","parameters");
x.t("activates","node");
x.t("deactivationeventtime","time");
x.t("deactivationeventtime","parameters");
x.t("orientation","changed");
x.t("orientation","velocity");
x.t("orientation","node");
x.t("latitude","second");
x.t("latitude","x-coordinate");
x.t("configuration","file");
x.t("value","parameter");
x.t("value","placed");
x.t("value","key");
x.t("value","external_queryexternaltime");
x.t("value","(output)");
x.t("value","current");
x.t("value","interface");
x.t("value","time");
x.t("value","size");
x.t("value","file");
x.t("value","true");
x.t("value","external_noerror");
x.t("value","int");
x.t("value","lookahead");
x.t("value","first");
x.t("value","function");
x.t("value","may");
x.t("value","responsibility");
x.t("value","amount");
x.t("value","valuesize");
x.t("value","value");
x.t("value","internally");
x.t("value","real");
x.t("value","mapping");
x.t("value","pointer");
x.t("value","associated");
x.t("value","external_resolvemapping");
x.t("additional","external");
x.t("far","future");
x.t("external_remoteforwarddata","function");
x.t("similar","external_forwarddata");
x.t("running","real");
x.t("terrain","coordinate");
x.t("terrain","data");
x.t("external_changenodevelocityattime","external_interface");
x.t("external_changenodevelocityattime","function");
x.t("external_vararrayaccomodatesize","external_vararray");
x.t("external_vararrayaccomodatesize","function");
x.t("multithreading","enabled");
x.t("several","bytes");
x.t("several","utility");
x.t("developer","utility");
x.t("depending","platform");
x.t("send","block");
x.t("send","defaults");
x.t("send","interface\u2019s");
x.t("send","result");
x.t("send","packet");
x.t("send","immediately");
x.t("nodes.by","default");
x.t("external_changenodepositionandorientation","external_interface");
x.t("external_changenodepositionandorientation","function");
x.t("already","initialized");
x.t("forwarding","data");
x.t("process","threads");
x.t("deliver","data");
x.t("connections","socket");
x.t("connectsocket","parameters");
x.t("connectsocket","assigned");
x.t("connectsocket","pointer");
x.t("turns","time");
x.t("enabling/disabling","nodes");
x.t("live","field");
x.t("live","external_senddatanetworklayer");
x.t("live","external_senddataapplayertcp");
x.t("established","connection");
x.t("established","first");
x.t("valid","i.e");
x.t("valid","false");
x.t("valid","range");
x.t("systems","valid");
x.t("external_vararrayappenddata","external_vararray");
x.t("external_vararrayappenddata","function");
x.t("external_vararrayappenddata","used");
x.t("interface\u2019s","current");
x.t("interface\u2019s","time");
x.t("interface\u2019s","forward");
x.t("platform","used");
x.t("fwdreceiveropt","external_forwarddataassignnodeid_on");
x.t("fwdreceiveropt","option");
x.t("output","unknown");
x.t("partition_setrealtimemode","function");
x.t("partition_setrealtimemode","partitiondata");
x.t("nodes","network");
x.t("nodes","moving");
x.t("nodes","changing");
x.t("nodes","using");
x.t("external_activatenode","external_interface");
x.t("external_activatenode","function");
x.t("external_socketclose","external_socket");
x.t("external_socketclose","function");
x.t("external_util.h","partition.h");
x.t("internally","function");
x.t("data","coordinate");
x.t("data","external_getinterfacebyname");
x.t("data","back");
x.t("data","size");
x.t("data","block");
x.t("data","add");
x.t("data","network");
x.t("data","external_ntoh");
x.t("data","forward");
x.t("data","partition");
x.t("data","int");
x.t("data","array");
x.t("data","terminated");
x.t("data","processes");
x.t("data","receive");
x.t("data","end");
x.t("data","connected");
x.t("data","bool");
x.t("data","external_remoteforwarddata");
x.t("data","data");
x.t("data","host");
x.t("data","received");
x.t("data","application");
x.t("data","structure");
x.t("data","two");
x.t("data","forwarddata");
x.t("data","immediately");
x.t("data","timestamp");
x.t("data","created");
x.t("data","pointer");
x.t("data","6.3.3.3");
x.t("data","unsigned");
x.t("data","sent");
x.t("simulationproperties","simprops");
x.t("information","return");
x.t("information","clientstate");
x.t("host","network");
x.t("host","byte");
x.t("defined","files");
x.t("defined","interface");
x.t("defined","qualnet_home");
x.t("future","simulation");
x.t("nanoseconds","function");
x.t("received","block");
x.t("received","less");
x.t("received","data");
x.t("bit","header");
x.t("appropriate","transport");
x.t("newly","created");
x.t("result","block");
x.t("utility","functions");
x.t("locate","client\u2019s");
x.t("application","layer");
x.t("application","app_forward");
x.t("application","send");
x.t("application","data");
x.t("application","using");
x.t("case","function");
x.t("case","value");
x.t("values","converted");
x.t("values","within");
x.t("values","depends");
x.t("values","azimuth/elevation");
x.t("values","azimuth");
x.t("values","checked");
x.t("meters","per");
x.t("allocates","memory");
x.t("listensocket","int");
x.t("listensocket","already");
x.t("listensocket","port");
x.t("listensocket","used");
x.t("listensocket","pointer");
x.t("successful","2008");
x.t("successful","external_socketconnect");
x.t("successful","external_socketsend");
x.t("successful","error");
x.t("successful","socket");
x.t("successful","external_socketrecv");
x.t("successful","external_socketclose");
x.t("called","external_settimemanagementrealtime");
x.t("called","once");
x.t("called","pair");
x.t("called","kernel");
x.t("called","external_vararray");
x.t("called","frequently");
x.t("called","socket");
x.t("global","properties");
x.t("partitions","partitiondata");
x.t("structure","client");
x.t("structure","listensocket");
x.t("structure","called");
x.t("maps","valuesize");
x.t("described","syntax");
x.t("character","function");
x.t("character","case");
x.t("port","parameter");
x.t("port","external_socket");
x.t("port","listen");
x.t("port","parameters");
x.t("port","int");
x.t("port","number");
x.t("port","port");
x.t("port","connect");
x.t("above","overloaded");
x.t("two","consecutive");
x.t("two","nodes");
x.t("otherwise","6.3.3");
x.t("otherwise","function");
x.t("otherwise","external_configstringisyes");
x.t("otherwise","partition_setrealtimemode");
x.t("priority","message");
x.t("priority","priority");
x.t("priority","iptos_prec_routine");
x.t("protocol","field");
x.t("protocol","defaults");
x.t("protocol","protocol");
x.t("protocol","unsigned");
x.t("azimuth","short");
x.t("azimuth","359");
x.t("azimuth","elevation");
x.t("azimuth","azimuth");
x.t("external_vararrayinit","external_vararray");
x.t("external_vararrayinit","function");
x.t("prevents","receive");
x.t("forwarddata","int");
x.t("forwarddata","data");
x.t("external_interfacelist","list");
x.t("interface's","name");
x.t("offset","field");
x.t("correctly","using");
x.t("algorithm","deactivationeventtime");
x.t("c3speed","rate");
x.t("c3speed","parameters");
x.t("typically","used");
x.t("6.3.3.1","functions");
x.t("real","time");
x.t("real","wall");
x.t("call","block");
x.t("call","function");
x.t("call","may");
x.t("call","external_socketlisten");
x.t("call","subsequent");
x.t("external_remotforwarddata","external_interface");
x.t("created","user");
x.t("created","provides");
x.t("created","function");
x.t("created","socket");
x.t("argv","arguments");
x.t("argv","simulationproperties");
x.t("packet","passed");
x.t("packet","datasize");
x.t("packet","may");
x.t("packet","transport");
x.t("packet","important");
x.t("packet","two");
x.t("packet","pass");
x.t("packet","sent");
x.t("immediately","unlike");
x.t("immediately","default");
x.t("immediately","defaults");
x.t("immediately","syntax");
x.t("timestamp","uint8");
x.t("timestamp","time");
x.t("timestamp","apptype");
x.t("timestamp","parameters");
x.t("mapping","resolved");
x.t("mapping","key");
x.t("mapping","specified");
x.t("mapping","created");
x.t("non-zero","resolve");
x.t("non-zero","value");
x.t("accurate","provided");
x.t("6.3.3.2","host-to-network");
x.t("order","variables");
x.t("order","network");
x.t("order","vice");
x.t("order","functions");
x.t("order","syntax");
x.t("order","host");
x.t("reverse","byte");
x.t("incoming","connection");
x.t("used","keep");
x.t("used","node\u2019s");
x.t("used","during");
x.t("used","listen");
x.t("used","indicate");
x.t("used","first");
x.t("used","length");
x.t("used","instead");
x.t("used","qualnet");
x.t("used","terrain");
x.t("used","locate");
x.t("simulation","time");
x.t("simulation","execution");
x.t("simulation","command");
x.t("simulation","initialization");
x.t("simulation","ends");
x.t("simulation","allowed");
x.t("simulation","executing");
x.t("simulation","function");
x.t("simulation","end");
x.t("simulation","running");
x.t("simulation","partitions");
x.t("simulation","class");
x.t("management","specifies");
x.t("run","execute");
x.t("run","external_changerealtimelookahead");
x.t("run","ahead");
x.t("except","sends");
x.t("pointer","key");
x.t("pointer","uninitialized");
x.t("pointer","specified");
x.t("pointer","destination");
x.t("pointer","array");
x.t("pointer","client\u2019s");
x.t("pointer","function");
x.t("pointer","socket");
x.t("pointer","value");
x.t("pointer","data");
x.t("pointer","correctly");
x.t("external_senddataapplayerudp","external_interface");
x.t("external_senddataapplayerudp","function");
x.t("external_senddataapplayerudp","deliver");
x.t("iptos_prec_routine","uint8");
x.t("payloadsize","clocktype");
x.t("payloadsize","size");
x.t("service","field");
x.t("system","node");
x.t("system","per");
x.t("following","functions");
x.t("6.3.3.3","external");
x.t("individual","socket");
x.t("threaded","flag");
x.t("threaded","false");
x.t("class","methods");
x.t("class","implements");
x.t("class","wallclock");
x.t("using","coordinate");
x.t("using","udp");
x.t("using","tcp");
x.t("using","mapped");
x.t("using","interface\u2019s");
x.t("external_max_time","time");
x.t("general","qualnet");
x.t("scheduling","external_schedule_strict");
x.t("scheduling","algorithm");
x.t("scheduling","scheduling");
x.t("nodeinput","char");
x.t("nodeinput","configuration");
x.t("nodeinput","nodeinput");
x.t("variable-sized","array");
x.t("external_socketlisten","external_socket");
x.t("external_socketlisten","function");
x.t("external_socketlisten","port");
x.t("connect","port");
x.t("connect","maxattempts");
x.t("returns","current");
x.t("returns","time");
x.t("returns","true");
x.t("returns","null");
x.t("returns","amount");
x.t("returns","case");
x.t("returns","non-zero");
x.t("returns","pointer");
x.t("returns","external_max_time");
x.t("returns","subsequent");
x.t("returns","wall");
x.t("external_querycputime","external_interface");
x.t("external_querycputime","function");
x.t("subsequent","calls");
x.t("pass","send");
x.t("external_senddataapplayertcp","external_interface");
x.t("external_senddataapplayertcp","function");
x.t("external_senddataapplayertcp","delivers");
x.t("per","second");
x.t("wall","clock");
x.t("wall","clock\u2019s");
x.t("external_bootstrap","int");
x.t("external_bootstrap","function");
x.t("clientstate","parameters");
x.t("clientstate","pointer");
x.t("forwards","received");
x.t("tostype","tos");
x.t("tostype","priority");
x.t("associated","key");
x.t("associated","string");
x.t("operations","file");
x.t("operations","external_vararray");
x.t("operations","array");
x.t("maxattempts","parameters");
x.t("maxattempts","number");
x.t("synchronizing","qualnet");
x.t("including","terminating");
x.t("including","functions");
x.t("unsigned","short");
x.t("unsigned","char");
x.t("unsigned","int");
x.t("versions","function");
x.t("position","changed");
x.t("position","node");
x.t("position","external_changenodeorientation");
x.t("position","orientation");
x.t("position","per");
x.t("reading","wall");
x.t("sent","parameter");
x.t("sent","contents");
x.t("sent","block");
x.t("sent","syntax");
x.t("sent","include");
x.t("sent","immediately");
x.t("delivers","data");
x.t("external_resolvemapping","external_interface");
x.t("external_resolvemapping","function");
x.t("meters/sec","c1speed");
x.t("increased","necessary");
x.t("sleeping","greater");
x.t("threads","created");
x.t("update","function");
x.t("differs","udp");
x.t("srcaddr","nodeaddress");
x.t("srcaddr","address");
x.t("consist","payloadsize");
x.t("checked","proper");
x.t("contains","functions");
x.t("external_socketerrortype","external_socketconnect");
x.t("external_socketerrortype","external_socketsend");
x.t("external_socketerrortype","external_socketrecv");
x.t("external_socketerrortype","external_socketclose");
x.t("external_socketerrortype","external_socketlisten");
}
