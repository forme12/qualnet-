function FileData_Pairs(x)
{
x.t("accomplished","either");
x.t("example","sure");
x.t("example","communication");
x.t("example","wanted");
x.t("example","suppose");
x.t("example","application");
x.t("explication","app_udpsendnewdata");
x.t("4.11.2","communication");
x.t("applayercbrclient","shown");
x.t("applayercbrclient","implemented");
x.t("applayercbrclient","declare");
x.t("applayercbrclient","node");
x.t("applayercbrclient","data");
x.t("255","255");
x.t("255","used");
x.t("ip_p","switch");
x.t("tells","whether");
x.t("protocols","non-adjacent");
x.t("protocols","layer");
x.t("protocols","written");
x.t("protocols","follow");
x.t("protocols","case");
x.t("method","layer");
x.t("method","passing");
x.t("possible","protocols");
x.t("udp-based","application");
x.t("below","define");
x.t("below","enable");
x.t("below","struct");
x.t("newmsg","message_alloc");
x.t("newmsg","create");
x.t("newmsg","clientptr-");
x.t("newmsg","section");
x.t("newmsg","node");
x.t("newmsg","sizeof");
x.t("newmsg","milli_second");
x.t("newmsg","allocate");
x.t("newmsg","using");
x.t("udptoapprecv","info");
x.t("udptoapprecv","message_returninfo");
x.t("udptoapprecv","qualnet_home");
x.t("4.11.3","communication");
x.t("cross-node","communication");
x.t("else","node");
x.t("just","allocated");
x.t("just","applications");
x.t("non-adjacent","layers");
x.t("receives","packet");
x.t("previoushopaddress","networkdataip");
x.t("improved","runtime");
x.t("remoteaddress","info-");
x.t("2008","2012");
x.t("apptoudpsend","info");
x.t("apptoudpsend","message_returninfo");
x.t("message_alloc","node");
x.t("message_alloc","figure");
x.t("shown","below");
x.t("shown","figure");
x.t("scalable","network");
x.t("table","pass");
x.t("create","new");
x.t("create","info");
x.t("create","assign");
x.t("create","packet");
x.t("ttl","field");
x.t("ttl","ipdefttl");
x.t("ttl","figure");
x.t("ttl","tostype");
x.t("gap","application");
x.t("bypassing","transport");
x.t("bypassing","lower");
x.t("describes","communication");
x.t("static","void");
x.t("delivery","transport");
x.t("msg_app_fromnetwork","void");
x.t("msg_app_fromnetwork","event");
x.t("sending","cbr");
x.t("sending","message");
x.t("layer","protocols");
x.t("layer","shown");
x.t("layer","bypassing");
x.t("layer","cbr");
x.t("layer","implemented");
x.t("layer","interface");
x.t("layer","apis");
x.t("layer","udp");
x.t("layer","network");
x.t("layer","meaningful");
x.t("layer","desired");
x.t("layer","name");
x.t("layer","communication");
x.t("layer","4.11.2.2");
x.t("layer","sends");
x.t("layer","destination");
x.t("layer","write");
x.t("layer","suppose");
x.t("layer","first");
x.t("layer","communicate");
x.t("layer","function");
x.t("layer","different");
x.t("layer","section");
x.t("layer","transport");
x.t("layer","enable");
x.t("layer","application");
x.t("layer","case");
x.t("layer","procedure");
x.t("layer","protocol");
x.t("layer","message_send");
x.t("layer","therefore");
x.t("layer","modify");
x.t("required","modeled");
x.t("required","map");
x.t("instance","protocols");
x.t("instance","application");
x.t("source","node");
x.t("source","port");
x.t("disabling","optimizations");
x.t("ise","message_remotesend");
x.t("covers","general");
x.t("void","applayercbrclient");
x.t("void","sendtocbr");
x.t("void","app_udpsendnewdata");
x.t("void","deliverpacket");
x.t("void","transportudpsendtonetwork");
x.t("/main/app_util.cpp","prototypes");
x.t("ability","communicate");
x.t("recommend","using");
x.t("user","data");
x.t("user","specify");
x.t("current","cbr");
x.t("current","network");
x.t("current","node");
x.t("cbr","example");
x.t("cbr","4.11.3");
x.t("cbr","source");
x.t("cbr","calls");
x.t("cbr","traffic");
x.t("cbr","directly");
x.t("cbr","destination");
x.t("cbr","second");
x.t("cbr","functions");
x.t("cbr","message_setevent");
x.t("cbr","function");
x.t("cbr","define");
x.t("cbr","steps");
x.t("cbr","header");
x.t("cbr","send");
x.t("cbr","data");
x.t("cbr","application");
x.t("cbr","case");
x.t("cbr","call");
x.t("cbr","including");
x.t("cbr","server");
x.t("msg_app_fromtransport","msg_app_fromnetwork");
x.t("msg_app_fromtransport","info");
x.t("msg_app_fromtransport","allocate");
x.t("msg_app_fromtransport","send");
x.t("nodeid","destid");
x.t("millisecond","following");
x.t("implemented","app_util.cpp");
x.t("implemented","network_ip.cpp");
x.t("implemented","file");
x.t("implemented","transport_udp.cpp");
x.t("implemented","qualnet_home");
x.t("implemented","lower");
x.t("implemented","noted");
x.t("implemented","using");
x.t("shows","implementation");
x.t("nodeaddress","previoushopaddress");
x.t("nodeaddress","sourceaddress");
x.t("nodeaddress","sourceaddr");
x.t("nodeaddress","destaddr");
x.t("nodeaddress","destinationaddress");
x.t("nodeaddress","destid");
x.t("acndata","create");
x.t("acndata","acndata.actiontype");
x.t("(msg)","payload");
x.t("(msg)","sizeof");
x.t("(msg)","setipv4addressinfo");
x.t("(msg)","udphdr-");
x.t("(msg)","info-");
x.t("field","newmsg");
x.t("field","void");
x.t("field","message_infoalloc");
x.t("field","message");
x.t("field","send");
x.t("field","memcpy");
x.t("field","values");
x.t("field","used");
x.t("uses","function");
x.t("uses","event");
x.t("packet\u2019s","header");
x.t("handled","properly");
x.t("line","code");
x.t("ipproto_udp","false");
x.t("ipproto_udp","sendtoudp");
x.t("interface","cbr");
x.t("interface","pass");
x.t("modified","cbr");
x.t("statement","shown");
x.t("statement","app_cbr.cpp");
x.t("statement","qualnet_home");
x.t("statement","include");
x.t("cbrdata","data");
x.t("numbytessent","clientptr-");
x.t("misleading","statistical");
x.t("misleading","packet");
x.t("payload","int");
x.t("payload","payloadsize");
x.t("clocktype","delay");
x.t("type","msg_app_fromnetwork");
x.t("type","msg_app_fromtransport");
x.t("type","api.h");
x.t("type","msg_transport_fromappsend");
x.t("type","message");
x.t("type","case");
x.t("type","used");
x.t("type","recognized");
x.t("close","gap");
x.t("assert","destnode");
x.t("sample","bypass");
x.t("change","layer");
x.t("calls","example");
x.t("calls","method");
x.t("calls","api");
x.t("calls","bypass");
x.t("calls","protocol");
x.t("calls","used");
x.t("calls","model");
x.t("calls","message_send");
x.t("app_util.cpp","void");
x.t("no_comment","trace_printtrace");
x.t("/libraries/developer/src/app_cbr.cpp","function");
x.t("/libraries/developer/src/app_cbr.cpp","include");
x.t("4.2.5.6.2","cbr");
x.t("4.2.5.6.2","explanation");
x.t("packets","cbr");
x.t("however","handled");
x.t("however","direct");
x.t("network_ip.h","receives");
x.t("network_ip.h","file");
x.t("execution","assuming");
x.t("execution","including");
x.t("i.e","delay");
x.t("apis","example");
x.t("apis","implemented");
x.t("apis","listed");
x.t("apis","found");
x.t("apis","instead");
x.t("apis","order");
x.t("apis","used");
x.t("listed","below");
x.t("listed","table");
x.t("entail","application");
x.t("needed","enable");
x.t("default","value");
x.t("(ipprotocolnumber)","delivery");
x.t("app_cbr_server","msg_app_fromtransport");
x.t("app_cbr_server","event");
x.t("app_cbr_server","info-");
x.t("cbr_clientinit","function");
x.t("modeled","layers");
x.t("want","current");
x.t("want","maintain");
x.t("new","message");
x.t("new","event");
x.t("among","layers");
x.t("access","partition");
x.t("network_ip.cpp","shown");
x.t("network_ip.cpp","udp");
x.t("network_ip.cpp","app_udpsendnewheadervirtualdatawithpriority");
x.t("passes","packet");
x.t("short","sourceport");
x.t("short","destport");
x.t("short","message_returnpacketsize");
x.t("info","udptoapprecv");
x.t("info","apptoudpsend");
x.t("info","cbr");
x.t("info","field");
x.t("info","actiondata");
x.t("info","destination");
x.t("info","udp-");
x.t("info","iptoapprecv");
x.t("found","file");
x.t("file","network_ip.h");
x.t("file","partition.h");
x.t("file","app_cbr.cpp");
x.t("file","qualnet_home");
x.t("upper","layers");
x.t("api.h","described");
x.t("&destnode","destid");
x.t("parallel_setminimumlookaheadforinterface","node");
x.t("strict","adjacent");
x.t("udp","uses");
x.t("udp","udp");
x.t("udp","message_infoalloc");
x.t("udp","destination");
x.t("udp","transportdataudp");
x.t("udp","appends");
x.t("udp","communicate");
x.t("udp","function");
x.t("udp","may");
x.t("udp","transport");
x.t("udp","enable");
x.t("udp","header");
x.t("udp","figure");
x.t("udp","case");
x.t("udp","turn");
x.t("udp","using");
x.t("assign","info");
x.t("actions","performed");
x.t("/include/message.h","steps");
x.t("parallel","2008");
x.t("parallel","execution");
x.t("parallel","parallel_setprotocolisnoteotcapable");
x.t("api","function");
x.t("api","message_send");
x.t("network","layer");
x.t("network","technologies");
x.t("normally","udp-based");
x.t("normally","done");
x.t("localaddr","clientptr-");
x.t("tos","ipproto_cbr");
x.t("meaningful","name");
x.t("data.sourceport","setipv4addressinfo");
x.t("results","capability");
x.t("apptype","nodeaddress");
x.t("apptype","apptype");
x.t("apptype","info-");
x.t("message_infoalloc","node");
x.t("udpstatsenabled","true");
x.t("false","destination");
x.t("false","ipdefttl");
x.t("false","info-");
x.t("sure","destination");
x.t("sure","number");
x.t("ipheader-","ip_p");
x.t("supporting","ability");
x.t("traffic","source");
x.t("directly","cbr");
x.t("directly","network");
x.t("directly","write");
x.t("directly","communicate");
x.t("directly","may");
x.t("directly","replace");
x.t("directly","section");
x.t("directly","calling");
x.t("directly","send");
x.t("directly","application");
x.t("directly","across");
x.t("layer-specific","apis");
x.t("true","sure");
x.t("true","udp-");
x.t("desired","may");
x.t("declare","new");
x.t("eventtype","case");
x.t("sendtocbr","uses");
x.t("sendtocbr","network_ip.cpp");
x.t("sendtocbr","node");
x.t("sendtocbr","deliver");
x.t("sendtocbr","modify");
x.t("processor","current");
x.t("outgoinginterface","any_interface");
x.t("outgoinginterface","info-");
x.t("resulting","packet");
x.t("maintain","current");
x.t("name","misleading");
x.t("name","event");
x.t("communication","non-adjacent");
x.t("communication","among");
x.t("communication","udp");
x.t("communication","network");
x.t("communication","normally");
x.t("communication","communication");
x.t("communication","adjacent");
x.t("communication","whether");
x.t("communication","layers");
x.t("communication","application");
x.t("communication","occur");
x.t("char","payload");
x.t("char","ipprotocolnumber");
x.t("acndata.actiontype","send");
x.t("performance","continue");
x.t("performance","better");
x.t("(newmsg)","&data");
x.t("(udptoapprecv)","info");
x.t("direct","function");
x.t("dependent","layer");
x.t("4.11.2.1","describes");
x.t("4.11.2.1","static");
x.t("4.11.2.1","application");
x.t("dispatcher","function");
x.t("actiondata","acndata");
x.t("reduced","however");
x.t("4.11.2.2","describes");
x.t("4.11.2.2","network");
x.t("parameters","additionally");
x.t("ipheadertype","msg-");
x.t("ipheadertype","ipheader");
x.t("applayercbrserver","shown");
x.t("partition.h","comments");
x.t("partition.h","app_cbr.cpp");
x.t("exists","assert");
x.t("exists","processor");
x.t("4-220","shows");
x.t("4-220","communication");
x.t("sends","user");
x.t("sends","network");
x.t("sends","resulting");
x.t("sends","received");
x.t("sends","application");
x.t("determine","apis");
x.t("prototypes","message");
x.t("incominginterfaceindex","cbrdata");
x.t("incominginterfaceindex","incominginterfaceindex");
x.t("incominginterfaceindex","send");
x.t("incominginterfaceindex","data");
x.t("networkdata.networkvar","nodeaddress");
x.t("statistical","results");
x.t("continue","cbr");
x.t("destination","newmsg");
x.t("destination","layer");
x.t("destination","nodeid");
x.t("destination","node");
x.t("destination","enable");
x.t("destination","protocol");
x.t("4-221","implemented");
x.t("4-221","communication");
x.t("modification","virtualpayloadsize");
x.t("transport_udp.cpp","enable");
x.t("address","sourceaddr");
x.t("address","destaddr");
x.t("explained","section");
x.t("allows","capability");
x.t("stack","however");
x.t("stack","communicate");
x.t("stack","may");
x.t("optimizations","implemented");
x.t("partition","data");
x.t("map","destination");
x.t("int","incominginterfaceindex");
x.t("int","interfaceindex");
x.t("int","payloadsize");
x.t("traceprotocoltype","traceprotocol");
x.t("&info-","sourceaddr");
x.t("&info-","destaddr");
x.t("checksum","checksum");
x.t("checksum","calculated");
x.t("trace_transport_layer","packet_out");
x.t("philosophy","qualnet");
x.t("4-222","bypassing");
x.t("4-222","figure");
x.t("fields","header");
x.t("write","function");
x.t("sourceaddress","nodeaddress");
x.t("sourceaddress","destinationaddress");
x.t("sourceaddress","info-");
x.t("wanted","model");
x.t("local","ise");
x.t("segment","added");
x.t("sourceaddr","short");
x.t("sourceaddr","sourceaddress");
x.t("sourceaddr","sourceaddr");
x.t("sourceaddr","clientptr-");
x.t("sourceaddr","info-");
x.t("transportdataudp","udp");
x.t("transportdataudp","node-");
x.t("4-223","cbr");
x.t("4-223","normally");
x.t("4-223","function");
x.t("4-223","message");
x.t("4-223","application");
x.t("4-223","update");
x.t("second","switch");
x.t("addition","change");
x.t("addition","supporting");
x.t("lookahead","i.e");
x.t("developing","protocol");
x.t("functions","implemented");
x.t("functions","app_udpsendnewdata");
x.t("functions","deliverpacket");
x.t("transport_layer","transportprotocol_udp");
x.t("store","data");
x.t("4-224","network");
x.t("4-224","constant");
x.t("app_default_tos","info-");
x.t("transportdata.udp","transportudpheader");
x.t("itemsize","sizeof");
x.t("itemsize","figure");
x.t("itemsize","break");
x.t("sendtoudp","implemented");
x.t("sendtoudp","udp");
x.t("sendtoudp","node");
x.t("4-225","delivering");
x.t("4-225","function");
x.t("message_setevent","msg");
x.t("layering","approach");
x.t("app_udpsendnewdata","sends");
x.t("app_udpsendnewdata","comments");
x.t("app_udpsendnewdata","node");
x.t("delay","sending");
x.t("delay","millisecond");
x.t("delay","traceprotocoltype");
x.t("delay","message");
x.t("delay","figure");
x.t("delay","(nodeislocal)");
x.t("transportprotocol_udp","msg_transport_fromappsend");
x.t("appends","udp");
x.t("appends","header");
x.t("acndata.actioncomment","no_comment");
x.t("suppose","want");
x.t("explanation","virtualpayloadsize");
x.t("hold","data");
x.t("deliverpacket","sends");
x.t("deliverpacket","sendtoudp");
x.t("deliverpacket","reads");
x.t("deliverpacket","node");
x.t("deliverpacket","call");
x.t("deliverpacket","adding");
x.t("respectively","message_setlayer");
x.t("4-226","applayercbrclient");
x.t("4-226","explain");
x.t("4-226","code");
x.t("(apptoudpsend)","info");
x.t("ipdefttl","default");
x.t("ipdefttl","clientptr-");
x.t("ipdefttl","send");
x.t("simulator\u2019s","performance");
x.t("first","determine");
x.t("msg_app_timerexpired","switch");
x.t("fixed","delay");
x.t("minimum","lookahead");
x.t("minimum","delay");
x.t("written","deviate");
x.t("written","application");
x.t("communicate","possible");
x.t("communicate","non-adjacent");
x.t("communicate","instance");
x.t("communicate","listed");
x.t("communicate","network");
x.t("communicate","directly");
x.t("communicate","adjacent");
x.t("communicate","nodes");
x.t("communicate","application");
x.t("communicate","cbrt");
x.t("communicate","across");
x.t("traceprotocol","message");
x.t("traceprotocol","copy");
x.t("(short)","apptype");
x.t("number","destination");
x.t("number","used");
x.t("interfaceindex","nodeaddress");
x.t("interfaceindex","break");
x.t("networkdataip","networkdataip");
x.t("networkdataip","node-");
x.t("delivering","packets");
x.t("2012","scalable");
x.t("adjacent","layering");
x.t("adjacent","layers");
x.t("approach","protocols");
x.t("approach","used");
x.t("function","applayercbrclient");
x.t("function","message_alloc");
x.t("function","user");
x.t("function","calls");
x.t("function","sendtocbr");
x.t("function","applayercbrserver");
x.t("function","sendtoudp");
x.t("function","deliverpacket");
x.t("function","networkipreceivepacketfromtransportlayer");
x.t("function","message_addvirtualpayload");
x.t("function","ifdef");
x.t("function","transportudpsendtoapp");
x.t("function","memcpy");
x.t("function","call");
x.t("function","transportudpsendtonetwork");
x.t("function","used");
x.t("function","app_udpsendnewheadervirtualdatawithpriority");
x.t("3.3.2.1.1","example");
x.t("comments","added");
x.t("comments","figure");
x.t("udp-","udpstatsenabled");
x.t("udp-","statistics-");
x.t("length","unsigned");
x.t("better","direct");
x.t("design","philosophy");
x.t("clientptr-","remoteaddress");
x.t("clientptr-","numbytessent");
x.t("clientptr-","localaddr");
x.t("clientptr-","tos");
x.t("clientptr-","itemsize");
x.t("clientptr-","sourceport");
x.t("clientptr-","remoteaddr");
x.t("clientptr-","localaddress");
x.t("(iptoapprecv)","info");
x.t("message_remotesend","instead");
x.t("message_remotesend","destnode");
x.t("endif","parallel");
x.t("may","bypass");
x.t("may","result");
x.t("may","call");
x.t("may","message_send");
x.t("3.3.2.1.2","layer-specific");
x.t("whether","direct");
x.t("whether","destination");
x.t("define","identifier");
x.t("define","data");
x.t("define","ipproto_cbr");
x.t("reads","protocol");
x.t("different","protocols");
x.t("different","layers");
x.t("message_returninfo","(msg)");
x.t("networkipreceivepacketfromtransportlayer","shown");
x.t("networkipreceivepacketfromtransportlayer","cbr");
x.t("networkipreceivepacketfromtransportlayer","implemented");
x.t("networkipreceivepacketfromtransportlayer","node");
x.t("networkipreceivepacketfromtransportlayer","include");
x.t("networkipreceivepacketfromtransportlayer","figure");
x.t("networkipreceivepacketfromtransportlayer","appropriate");
x.t("networkipreceivepacketfromtransportlayer","transportudpsendtonetwork");
x.t("networkipreceivepacketfromtransportlayer","pass");
x.t("msg-","eventtype");
x.t("msg-","packet");
x.t("instead","transport");
x.t("instead","message_send");
x.t("replace","msg_app_fromtransport");
x.t("replace","call");
x.t("app_cbr.cpp","access");
x.t("app_cbr.cpp","include");
x.t("app_cbr.cpp","inserting");
x.t("section","covers");
x.t("section","4.2.5.6.2");
x.t("section","4.11.2.1");
x.t("section","4.11.2.2");
x.t("section","3.3.2.1.1");
x.t("section","3.3.2.1.2");
x.t("section","3.3.1.1");
x.t("section","3.3.1.2");
x.t("transport","layer");
x.t("transport","application");
x.t("msg_transport_fromappsend","msg");
x.t("msg_transport_fromappsend","allocate");
x.t("allocated","memcpy");
x.t("achieve","sending");
x.t("achieve","close");
x.t("achieve","modify");
x.t("trace_cbr","memcpy");
x.t("trace_cbr","copy");
x.t("restricted","just");
x.t("properly","result");
x.t("explain","purpose");
x.t("added","explication");
x.t("added","cbr_clientinit");
x.t("node","newmsg");
x.t("node","cbr");
x.t("node","apptype");
x.t("node","directly");
x.t("node","exists");
x.t("node","destination");
x.t("node","local");
x.t("node","transport_layer");
x.t("node","delay");
x.t("node","restricted");
x.t("node","achieve");
x.t("node","node");
x.t("node","identifier");
x.t("node","bool");
x.t("node","message");
x.t("node","destnode");
x.t("node","msg");
x.t("node","allocate");
x.t("node","getipv4address");
x.t("node","app_layer");
x.t("node","milliseconds");
x.t("node","pointer");
x.t("qualnet_home","/main/app_util.cpp");
x.t("qualnet_home","/libraries/developer/src/app_cbr.cpp");
x.t("qualnet_home","/include/message.h");
x.t("qualnet_home","/libraries/developer/src/network_ip.h");
x.t("qualnet_home","/include/api.h");
x.t("qualnet_home","/libraries/developer/src/transport_udp.cpp");
x.t("qualnet_home","/libraries/developer/src/network_ip.cpp");
x.t("calling","function");
x.t("calling","networkipreceivepacketfromtransportlayer");
x.t("important","copy");
x.t("switch","statement");
x.t("switch","(ipprotocolnumber)");
x.t("switch","msg-");
x.t("switch","timer-");
x.t("capability","bypassing");
x.t("capability","impact");
x.t("capability","bypass");
x.t("impact","parallel");
x.t("purpose","line");
x.t("follow","strict");
x.t("enable","cbr");
x.t("enable","parallel");
x.t("enable","directly");
x.t("enable","send");
x.t("enable","deliver");
x.t("steps","needed");
x.t("identifier","cbr");
x.t("identifier","node");
x.t("identifier","protocol");
x.t("code","void");
x.t("code","sample");
x.t("code","segment");
x.t("4.11","communication");
x.t("sizeof","(udptoapprecv)");
x.t("sizeof","(apptoudpsend)");
x.t("sizeof","(iptoapprecv)");
x.t("sizeof","(data)");
x.t("sizeof","(transportudpheader)");
x.t("thus","overhead");
x.t("bool","nodeislocal");
x.t("message","newmsg");
x.t("message","apis");
x.t("message","udp");
x.t("message","api");
x.t("message","directly");
x.t("message","communication");
x.t("message","destination");
x.t("message","hold");
x.t("message","message_remotesend");
x.t("message","networkipreceivepacketfromtransportlayer");
x.t("message","important");
x.t("message","variable");
x.t("message","message_addvirtualpayload");
x.t("message","msg");
x.t("message","send");
x.t("message","order");
x.t("message","updated");
x.t("memory","just");
x.t("memory","user");
x.t("memory","store");
x.t("memory","using");
x.t("header","source");
x.t("header","user");
x.t("header","passes");
x.t("header","identifier");
x.t("header","packet");
x.t("4-57","implemented");
x.t("lower","layers");
x.t("nodeislocal","tells");
x.t("nodeislocal","false");
x.t("nodeislocal","partition_returnnodepointer");
x.t("qualnet","protocols");
x.t("qualnet","allows");
x.t("qualnet","adjacent");
x.t("qualnet","4.11");
x.t("qualnet","thus");
x.t("deviate","communicate");
x.t("sourceport","nodeaddress");
x.t("sourceport","data.sourceport");
x.t("sourceport","address");
x.t("sourceport","clientptr-");
x.t("sourceport","sourceport");
x.t("sourceport","setipv4addressinfo");
x.t("sourceport","udphdr-");
x.t("sourceport","info-");
x.t("event","type");
x.t("event","dispatcher");
x.t("event","transport");
x.t("event","scheduling");
x.t("event","therefore");
x.t("trace_printtrace","node");
x.t("variable","newmsg");
x.t("variable","used");
x.t("3.3.1.1","using");
x.t("message_addvirtualpayload","node");
x.t("message_addvirtualpayload","figure");
x.t("destnode","newmsg");
x.t("destnode","nodeaddress");
x.t("destnode","null");
x.t("destnode","destid");
x.t("milli_second","else");
x.t("milli_second","clientptr-");
x.t("ifdef","parallel");
x.t("3.3.1.2","using");
x.t("destaddr","short");
x.t("destaddr","char");
x.t("destaddr","clientptr-");
x.t("destaddr","destaddr");
x.t("destaddr","destinationaddress");
x.t("destaddr","info-");
x.t("msg","apptoudpsend");
x.t("msg","message_alloc");
x.t("msg","msg_app_fromtransport");
x.t("msg","trace_transport_layer");
x.t("msg","int");
x.t("msg","transportdataudp");
x.t("msg","delay");
x.t("msg","switch");
x.t("msg","sizeof");
x.t("msg","figure");
x.t("msg","app_layer");
x.t("msg","priority");
x.t("msg","payloadsize");
x.t("msg","process_immediately");
x.t("msg","tostype");
x.t("msg","info-");
x.t("node-","networkdata.networkvar");
x.t("node-","transportdata.udp");
x.t("node-","partitiondata");
x.t("compared","using");
x.t("(data)","create");
x.t("(data)","layer");
x.t("(data)","trace_cbr");
x.t("(data)","send");
x.t("(data)","update");
x.t("null","create");
x.t("parallel_setprotocolisnoteotcapable","(node)");
x.t("layers","accomplished");
x.t("layers","4.11.2");
x.t("layers","network");
x.t("layers","communication");
x.t("layers","direct");
x.t("layers","stack");
x.t("layers","developing");
x.t("layers","appends");
x.t("layers","communicate");
x.t("layers","section");
x.t("layers","4.11");
x.t("layers","qualnet");
x.t("layers","although");
x.t("layers","note");
x.t("layers","protocol");
x.t("layers","using");
x.t("layers","across");
x.t("layers","even");
x.t("message_returnpacket","(msg)");
x.t("message_returnpacket","(newmsg)");
x.t("include","network_ip.h");
x.t("include","file");
x.t("include","partition.h");
x.t("destinationaddress","int");
x.t("destinationaddress","interfaceindex");
x.t("destinationaddress","unsigned");
x.t("destinationaddress","info-");
x.t("ipprotocolnumber","ipheader-");
x.t("ipprotocolnumber","unsigned");
x.t("partitiondata","&destnode");
x.t("allocate","memory");
x.t("setipv4addressinfo","&info-");
x.t("setipv4addressinfo","info-");
x.t("running","application");
x.t("value","ttl");
x.t("similar","data");
x.t("mapping_getnodeidfrominterfaceaddress","node");
x.t("figure","4-220");
x.t("figure","4-221");
x.t("figure","4-222");
x.t("figure","4-223");
x.t("figure","4-224");
x.t("figure","4-225");
x.t("figure","4-226");
x.t("figure","4-57");
x.t("figure","4-25");
x.t("figure","4-26");
x.t("implementation","functions");
x.t("send","user");
x.t("send","cbr");
x.t("send","acndata.actioncomment");
x.t("send","message");
x.t("send","data");
x.t("send","packet");
x.t("bypass","transport");
x.t("bypass","event");
x.t("bypass","layers");
x.t("bypass","protocol");
x.t("delays","required");
x.t("delays","message_send");
x.t("constant","ipdefttl");
x.t("constant","ipproto_cbr");
x.t("ipheader","ipheadertype");
x.t("trace_udp","udphdr");
x.t("packet_out","&acndata");
x.t("deliver","packets");
x.t("deliver","message");
x.t("deliver","packet");
x.t("/libraries/developer/src/network_ip.h","define");
x.t("remoteaddr","nodeislocal");
x.t("remoteaddr","any_interface");
x.t("(node)","parallel_setminimumlookaheadforinterface");
x.t("models","qualnet");
x.t("although","design");
x.t("although","qualnet");
x.t("transportudpsendtoapp","shown");
x.t("transportudpsendtoapp","functions");
x.t("nodes","instance");
x.t("nodes","addition");
x.t("nodes","4.11.1");
x.t("schedule","event");
x.t("app_layer","app_cbr_server");
x.t("getipv4address","clientptr-");
x.t("data","newmsg");
x.t("data","cbr");
x.t("data","udp");
x.t("data","network");
x.t("data","directly");
x.t("data","first");
x.t("data","adjacent");
x.t("data","calling");
x.t("data","memory");
x.t("data","message");
x.t("data","schedule");
x.t("data","received");
x.t("data","structure");
x.t("data","packet");
x.t("data","message_packetalloc");
x.t("data","iptoapprecv");
x.t("data","sent");
x.t("noted","simulator\u2019s");
x.t("overhead","reduced");
x.t("/include/api.h","shown");
x.t("information","memcpy");
x.t("memcpy","message_returnpacket");
x.t("memcpy","figure");
x.t("memcpy","&data");
x.t("received","application");
x.t("received","packet");
x.t("appropriate","parameters");
x.t("result","improved");
x.t("result","misleading");
x.t("assuming","minimum");
x.t("application","layer");
x.t("application","network");
x.t("application","sends");
x.t("application","deliverpacket");
x.t("application","replace");
x.t("application","layers");
x.t("application","running");
x.t("application","bypass");
x.t("application","data");
x.t("application","protocol");
x.t("application","relies");
x.t("application","using");
x.t("values","udp");
x.t("case","cbr");
x.t("case","ipproto_udp");
x.t("case","4.11.2.1");
x.t("case","msg_app_timerexpired");
x.t("case","communicate");
x.t("case","networkipreceivepacketfromtransportlayer");
x.t("case","app_timer_send_pkt");
x.t("case","ipproto_cbr");
x.t("statistics-","numpktfromapp");
x.t("numpktfromapp","message_addheader");
x.t("udphdr-","checksum");
x.t("udphdr-","length");
x.t("udphdr-","sourceport");
x.t("udphdr-","destport");
x.t("virtualpayloadsize","field");
x.t("app_timer_send_pkt","cbrdata");
x.t("runtime","performance");
x.t("partition_returnnodepointer","node-");
x.t("procedure","entail");
x.t("structure","udptoapprecv");
x.t("structure","required");
x.t("structure","used");
x.t("structure","iptoapprecv");
x.t("described","section");
x.t("port","information");
x.t("destid","udptoapprecv");
x.t("destid","newmsg");
x.t("destid","true");
x.t("destid","mapping_getnodeidfrominterfaceaddress");
x.t("protocol","udp-based");
x.t("protocol","cbr");
x.t("protocol","udp");
x.t("protocol","network");
x.t("protocol","stack");
x.t("protocol","number");
x.t("protocol","may");
x.t("protocol","node");
x.t("protocol","event");
x.t("protocol","models");
x.t("protocol","received");
x.t("protocol","application");
x.t("protocol","delivers");
x.t("priority","nodeaddress");
x.t("priority","ipproto_udp");
x.t("priority","ipheadertype");
x.t("priority","sourceaddress");
x.t("priority","app_default_tos");
x.t("note","message_send");
x.t("note","general");
x.t("&acndata","networkipreceivepacketfromtransportlayer");
x.t("done","function");
x.t("milliseconds","endif");
x.t("copy","cbr");
x.t("copy","user");
x.t("copy","application");
x.t("inserting","following");
x.t("cbrt","listed");
x.t("applications","cross-node");
x.t("relies","udp");
x.t("call","apis");
x.t("call","sendtocbr");
x.t("call","function");
x.t("call","networkipreceivepacketfromtransportlayer");
x.t("call","constant");
x.t("call","app_udpsendnewheadervirtualdatawithpriority");
x.t("packet","cbr");
x.t("packet","field");
x.t("packet","packet\u2019s");
x.t("packet","info");
x.t("packet","upper");
x.t("packet","udp");
x.t("packet","sends");
x.t("packet","destination");
x.t("packet","fields");
x.t("packet","event");
x.t("packet","ipprotocolnumber");
x.t("packet","application");
x.t("packet","using");
x.t("packet","sent");
x.t("(transportudpheader)","trace_udp");
x.t("order","achieve");
x.t("order","enable");
x.t("4-25","calls");
x.t("&data","sizeof");
x.t("&data","message_returnpacket");
x.t("used","example");
x.t("used","cbr");
x.t("used","info");
x.t("used","udp");
x.t("used","declare");
x.t("used","modification");
x.t("used","communicate");
x.t("used","transport");
x.t("used","compared");
x.t("used","delays");
x.t("used","send");
x.t("used","case");
x.t("used","protocol");
x.t("either","using");
x.t("payloadsize","create");
x.t("payloadsize","clocktype");
x.t("payloadsize","traceprotocol");
x.t("destport","app_cbr_server");
x.t("destport","int");
x.t("destport","(short)");
x.t("destport","udphdr-");
x.t("destport","info-");
x.t("transportudpsendtonetwork","shown");
x.t("transportudpsendtonetwork","appends");
x.t("transportudpsendtonetwork","node");
x.t("/libraries/developer/src/transport_udp.cpp","note");
x.t("system","qualnet");
x.t("model","fixed");
x.t("model","delays");
x.t("following","statement");
x.t("following","code");
x.t("break","figure");
x.t("break","case");
x.t("break","message_free");
x.t("turn","passes");
x.t("4-26","replace");
x.t("message_setlayer","msg");
x.t("pointer","exists");
x.t("pointer","nodeislocal");
x.t("pointer","inserting");
x.t("localaddress","info-");
x.t("general","recommend");
x.t("general","approach");
x.t("using","udp");
x.t("using","api");
x.t("using","direct");
x.t("using","function");
x.t("using","capability");
x.t("using","message");
x.t("using","message_send");
x.t("message_send","method");
x.t("message_send","implemented");
x.t("message_send","directly");
x.t("message_send","dependent");
x.t("message_send","function");
x.t("message_send","section");
x.t("message_send","node");
x.t("message_send","destnode");
x.t("message_send","deliver");
x.t("message_send","used");
x.t("/libraries/developer/src/network_ip.cpp","void");
x.t("calculated","actiondata");
x.t("scheduling","system");
x.t("additionally","actions");
x.t("timer-","type");
x.t("message_free","node");
x.t("recognized","cbr");
x.t("process_immediately","figure");
x.t("across","layers");
x.t("across","nodes");
x.t("pass","data");
x.t("message_packetalloc","node");
x.t("transportudpheader","msg-");
x.t("transportudpheader","udphdr");
x.t("udphdr","apptoudpsend");
x.t("udphdr","transportudpheader");
x.t("message_returnpacketsize","(msg)");
x.t("adding","case");
x.t("any_interface","clientptr-");
x.t("any_interface","info-");
x.t("therefore","layer");
x.t("therefore","modified");
x.t("performed","cbr");
x.t("performed","app_udpsendnewheadervirtualdatawithpriority");
x.t("modify","cbr");
x.t("modify","function");
x.t("tostype","priority");
x.t("occur","different");
x.t("info-","ttl");
x.t("info-","outgoinginterface");
x.t("info-","incominginterfaceindex");
x.t("info-","sourceaddr");
x.t("info-","sourceport");
x.t("info-","destaddr");
x.t("info-","priority");
x.t("info-","destport");
x.t("passing","data");
x.t("unsigned","ttl");
x.t("unsigned","short");
x.t("unsigned","char");
x.t("app_udpsendnewheadervirtualdatawithpriority","implemented");
x.t("app_udpsendnewheadervirtualdatawithpriority","api");
x.t("app_udpsendnewheadervirtualdatawithpriority","send");
x.t("app_udpsendnewheadervirtualdatawithpriority","call");
x.t("app_udpsendnewheadervirtualdatawithpriority","performed");
x.t("including","disabling");
x.t("including","following");
x.t("iptoapprecv","info");
x.t("iptoapprecv","address");
x.t("iptoapprecv","message_returninfo");
x.t("iptoapprecv","similar");
x.t("struct","iptoapprecv");
x.t("even","across");
x.t("message_addheader","node");
x.t("delivers","packet");
x.t("sent","network");
x.t("sent","section");
x.t("(nodeislocal)","message_send");
x.t("4.11.1","communication");
x.t("ipproto_cbr","255");
x.t("ipproto_cbr","false");
x.t("ipproto_cbr","sendtocbr");
x.t("ipproto_cbr","explained");
x.t("update","virtualpayloadsize");
x.t("updated","applayercbrclient");
x.t("server","message_infoalloc");
x.t("server","destination");
x.t("server","respectively");
x.t("server","event");
x.t("specify","minimum");
}
