function FileData_Pairs(x)
{
x.t("example","cbr");
x.t("example","user");
x.t("example","initializing");
x.t("example","place");
x.t("example","increment");
x.t("example","develop");
x.t("example","understand");
x.t("example","function");
x.t("example","specifies");
x.t("example","section");
x.t("example","implementation");
x.t("example","figure");
x.t("example","audio");
x.t("example","data");
x.t("example","protocol");
x.t("example","created");
x.t("example","ftp_server");
x.t("example","following");
x.t("example","fisheye");
x.t("example","specify");
x.t("supports","qos");
x.t("supports","variety");
x.t("timers","register");
x.t("timers","serve");
x.t("timers","look");
x.t("timers","frequently");
x.t("timers","stores");
x.t("timers","section");
x.t("timers","node");
x.t("timers","message");
x.t("timers","besides");
x.t("timers","application");
x.t("timers","called");
x.t("timers","done");
x.t("timers","packet");
x.t("coding","different");
x.t("/libraries","called");
x.t("statements","include");
x.t("included","parameter");
x.t("included","state");
x.t("included","list");
x.t("included","enumeration");
x.t("included","protocol's");
x.t("included","application's");
x.t("uniquely","identify");
x.t("passed","source");
x.t("passed","initialization");
x.t("passed","qualnet");
x.t("applayercbrclient","api");
x.t("applayercbrclient","functions");
x.t("applayercbrclient","node");
x.t("applayercbrclient","event");
x.t("searching","list");
x.t("unlike","initialization");
x.t("unlike","traffic-generating");
x.t("4.2.6.2","include");
x.t("4.2.6.2","modify");
x.t("255","networkroutingadmindistancetype");
x.t("interfaces","node");
x.t("interfaces","figure");
x.t("network_ipv4","interfacetype");
x.t("network_ipv4","ip-");
x.t("network_ipv4","figure");
x.t("network_ipv4","networkipgetinterfacetype");
x.t("/libraries/wireless/src","details");
x.t("randomdelay","char");
x.t("routing_protocol_static","return");
x.t("4-43","shows");
x.t("4-43","application");
x.t("myprotocol\u2019s","event");
x.t("myprotocol\u2019s","finalization");
x.t("registers","application");
x.t("routeadvertisementtype","type");
x.t("protocols","example");
x.t("protocols","4.2.1.1");
x.t("protocols","files");
x.t("protocols","table");
x.t("protocols","always");
x.t("protocols","instance");
x.t("protocols","implemented");
x.t("protocols","app_initializeapplications");
x.t("protocols","trace");
x.t("protocols","multiple");
x.t("protocols","includes");
x.t("protocols","reside");
x.t("protocols","app_routing_fisheye");
x.t("protocols","udp");
x.t("protocols","add");
x.t("protocols","network");
x.t("protocols","initialized");
x.t("protocols","traffic-generating");
x.t("protocols","common");
x.t("protocols","initialize");
x.t("protocols","enumerated");
x.t("protocols","initializing");
x.t("protocols","enumeration");
x.t("protocols","4.2.7.1");
x.t("protocols","addition");
x.t("protocols","understand");
x.t("protocols","communicate");
x.t("protocols","function");
x.t("protocols","may");
x.t("protocols","step");
x.t("protocols","section");
x.t("protocols","typedef");
x.t("protocols","node");
x.t("protocols","header");
x.t("protocols","qualnet");
x.t("protocols","include");
x.t("protocols","running");
x.t("protocols","defined");
x.t("protocols","routing");
x.t("protocols","application");
x.t("protocols","described");
x.t("protocols","called");
x.t("protocols","note");
x.t("protocols","two");
x.t("protocols","protocol");
x.t("protocols","operate");
x.t("protocols","used");
x.t("protocols","following");
x.t("protocols","simulate");
x.t("protocols","including");
x.t("library","example");
x.t("library","cbr");
x.t("library","doesn\u2019t");
x.t("library","bellmanford");
x.t("library","functions");
x.t("library","function");
x.t("library","addon");
x.t("library","detailed");
x.t("library","e.g");
x.t("library","qualnet");
x.t("library","called");
x.t("library","modify");
x.t("udp-based","client-server");
x.t("udp-based","application");
x.t("properties","uses");
x.t("(http)","http");
x.t("below","msg_app_fromtransport");
x.t("below","function");
x.t("below","app_udpsendnewdatawithpriority");
x.t("below","struct");
x.t("below","app_isfreeport");
x.t("available","layer");
x.t("available","node");
x.t("available","qualnet");
x.t("available","application");
x.t("available","port");
x.t("illustrate","different");
x.t("illustrate","process");
x.t("app_processevent","sample");
x.t("app_processevent","implements");
x.t("app_processevent","section");
x.t("app_processevent","node");
x.t("app_processevent","defined");
x.t("app_processevent","call");
x.t("manner","ensures");
x.t("manner","initialization");
x.t("manner","traffic-generating");
x.t("manner","helpful");
x.t("placed","library");
x.t("exist","create");
x.t("exist","obtaining");
x.t("applayermyprotocolserver","void");
x.t("applayermyprotocolserver","respectively");
x.t("applayermyprotocolserver","node");
x.t("parameter","example");
x.t("parameter","initialization");
x.t("parameter","destination");
x.t("parameter","input");
x.t("parameter","function");
x.t("parameter","index");
x.t("parameter","declaration");
x.t("parameter","values");
x.t("parameter","specification");
x.t("parameter","note");
x.t("provide","protocol's");
x.t("else","destaddress");
x.t("else","wireless");
x.t("else","strcmp");
x.t("else","strmcp");
x.t("else","fisheye-");
x.t("udptoapprecv","info");
x.t("udptoapprecv","message_returninfo");
x.t("receiver","gets");
x.t("myprotcol","qualnet");
x.t("4.2.6.3","define");
x.t("4.2.6.3","figure");
x.t("4.2.6.3","including");
x.t("protocolstring","bellmanford");
x.t("protocolstring","(retval)");
x.t("protocolstring","myprotocol");
x.t("4-44","shows");
x.t("4-44","event");
x.t("possible","override");
x.t("simultaneously","real");
x.t("4.2.1.1","traffic-generating");
x.t("pattern","example");
x.t("tcplib","suit");
x.t("tcplib","application");
x.t("border","gateway");
x.t("version","(bgpv4)");
x.t("version","(olsrv2)");
x.t("defines","events");
x.t("msg_app_fromtransdatasent","message");
x.t("hints","naming");
x.t("just","every");
x.t("just","entry");
x.t("just","string");
x.t("lead","unexpected");
x.t("appmyprotocolserverfinalize","respectively");
x.t("appmyprotocolserverfinalize","node");
x.t("appmyprotocolserverfinalize","finalization");
x.t("appmyprotocolserverfinalize","print");
x.t("appmyprotocolserverfinalize","statistics");
x.t("receives","packets");
x.t("receives","traffic");
x.t("receives","first");
x.t("receives","packet");
x.t("endtime","tos");
x.t("endtime","bool");
x.t("endtime","tostype");
x.t("endtime","unsigned");
x.t("endtime","(tostype)");
x.t("endtime","time_converttoclock");
x.t("/main/partition.cpp","calls");
x.t("/main/partition.cpp","section");
x.t("converted","string");
x.t("appftpclientinit","qualnet_home");
x.t("appcbrclientschedulenextpkt","sets");
x.t("appcbrclientschedulenextpkt","function");
x.t("throughput","char");
x.t("throughput","(bits/s)");
x.t("throughput","statistics");
x.t("4.2.6.4","initialization");
x.t("permanent","routes");
x.t("computing","routing");
x.t("4-45","shows");
x.t("4-45","calling");
x.t("2008","2012");
x.t("shown","figure");
x.t("lists","protocols");
x.t("lists","differences");
x.t("lists","among");
x.t("lists","traffic-generating");
x.t("lists","different");
x.t("lists","header");
x.t("lists","application");
x.t("look-up","traffic");
x.t("look-up","pinging");
x.t("multimedia","enterprise");
x.t("4.2.1.2","routing");
x.t("files","placed");
x.t("files","just");
x.t("files","create");
x.t("files","having");
x.t("files","needed");
x.t("files","final");
x.t("files","contain");
x.t("files","first");
x.t("files","clearly");
x.t("files","app_cbr.cpp");
x.t("files","step");
x.t("files","section");
x.t("files","qualnet_home");
x.t("files","important");
x.t("files","throughout");
x.t("files","header");
x.t("files","qualnet");
x.t("files","routing_bellmanford.h");
x.t("files","developer");
x.t("files","models");
x.t("files","routing_fisheye.h");
x.t("files","examples");
x.t("files","application");
x.t("files","routing");
x.t("files","described");
x.t("files","applications");
x.t("files","relevant");
x.t("files","folders");
x.t("files","associated");
x.t("files","generally");
x.t("implement","cbr");
x.t("implement","prefix");
x.t("implement","e.g");
x.t("implement","ftp");
x.t("implement","event");
x.t("implement","application");
x.t("resides","functionality");
x.t("subdirectory","qualnet_home");
x.t("needs","included");
x.t("needs","modified");
x.t("needs","access");
x.t("needs","know");
x.t("needs","added");
x.t("needs","made");
x.t("needs","additional");
x.t("trace_any_protocol","traceprotocoltype");
x.t("trace_any_protocol","4.2.5.4");
x.t("message_alloc","node");
x.t("every","time");
x.t("every","packet");
x.t("within","case");
x.t("within","bellman-ford");
x.t("4.2.6.5","integrating");
x.t("4.2.6.5","modify");
x.t("network_protocol_ipv6","network_protocol_mobile_ip");
x.t("interfacetype","network_ipv4");
x.t("interfacetype","network_dual");
x.t("interfacetype","networkipgetinterfacetype");
x.t("4-46","shows");
x.t("4-46","finalization");
x.t("apptoudpsend","info");
x.t("apptoudpsend","message_returninfo");
x.t("scalable","network");
x.t("description","found");
x.t("description","short");
x.t("description","add");
x.t("description","apptype");
x.t("description","appinfo");
x.t("description","data");
x.t("description","protocol");
x.t("description","event/message");
x.t("description","model");
x.t("table","4.2.6.5");
x.t("table","4.2.6.7");
x.t("table","void");
x.t("table","4-2");
x.t("table","4-3");
x.t("table","4-4");
x.t("table","kernel");
x.t("table","4-5");
x.t("table","4-6");
x.t("table","4-8");
x.t("table","4-9");
x.t("table","short");
x.t("table","name");
x.t("table","networkemptyfowardingtable");
x.t("table","overloaded");
x.t("table","broadcasting");
x.t("table","function");
x.t("table","code");
x.t("table","e.g");
x.t("table","schedule");
x.t("table","protocol");
x.t("table","used");
x.t("table","corresponding");
x.t("table","performed");
x.t("user-specified","file");
x.t("user-specified","amount");
x.t("user-specified","configuration");
x.t("versus","network");
x.t("/include/application.h","file");
x.t("/include/application.h","section");
x.t("create","files");
x.t("create","instance");
x.t("create","new");
x.t("create","single");
x.t("create","initialize");
x.t("create","function");
x.t("create","directory");
x.t("create","header");
x.t("create","output");
x.t("describes","implement");
x.t("describes","apis");
x.t("describes","initialize");
x.t("describes","develop");
x.t("describes","main");
x.t("describes","modify");
x.t("refer","files");
x.t("refer","file");
x.t("refer","ftp");
x.t("refer","qualnet");
x.t("refer","reader");
x.t("inserts","new");
x.t("inserts","information");
x.t("inserts","port");
x.t("sending","rate");
x.t("sending","receiving");
x.t("sending","data");
x.t("sending","packet");
x.t("sending","per");
x.t("tree","compile");
x.t("tracing","qualnet");
x.t("tracing","special");
x.t("dest","items_to_send");
x.t("dest","server");
x.t("currently","examined");
x.t("app_successfullyhandledloopback","implemented");
x.t("app_successfullyhandledloopback","check");
x.t("app_successfullyhandledloopback","node");
x.t("&itemsize","intervalstr");
x.t("/app_telnet.cpp","(developer_srcdir)");
x.t("4.2.6.6","implementing");
x.t("4-47","shows");
x.t("4-47","setting");
x.t("serverport","listens");
x.t("static","void");
x.t("layer","timers");
x.t("layer","protocols");
x.t("layer","table");
x.t("layer","versus");
x.t("layer","cbr");
x.t("layer","timer");
x.t("layer","maintained");
x.t("layer","open");
x.t("layer","time");
x.t("layer","apis");
x.t("layer","listed");
x.t("layer","initialization");
x.t("layer","organization");
x.t("layer","msg_prop_signalarrival");
x.t("layer","actions");
x.t("layer","network");
x.t("layer","api");
x.t("layer","traffic");
x.t("layer","specified");
x.t("layer","msg_app_fromtranslistenresult");
x.t("layer","communication");
x.t("layer","listen");
x.t("layer","perform");
x.t("layer","dispatcher");
x.t("layer","prototypes");
x.t("layer","sends");
x.t("layer","declarations");
x.t("layer","stack");
x.t("layer","string");
x.t("layer","outgoing");
x.t("layer","understand");
x.t("layer","developing");
x.t("layer","functions");
x.t("layer","porttable");
x.t("layer","means");
x.t("layer","accept");
x.t("layer","communicate");
x.t("layer","topmost");
x.t("layer","function");
x.t("layer","stores");
x.t("layer","section");
x.t("layer","transport");
x.t("layer","qualnet_home");
x.t("layer","level");
x.t("layer","thus");
x.t("layer","event");
x.t("layer","e.g");
x.t("layer","4.2");
x.t("layer","app_settimer");
x.t("layer","msg_app_fromtransopenresult");
x.t("layer","data");
x.t("layer","node_processevent");
x.t("layer","interact");
x.t("layer","defined");
x.t("layer","application");
x.t("layer","routing");
x.t("layer","utility");
x.t("layer","finalization");
x.t("layer","send/receive");
x.t("layer","protocol");
x.t("layer","app_finalize");
x.t("layer","call");
x.t("layer","app_tcpcloseconnection");
x.t("layer","scheduling");
x.t("source","files");
x.t("source","tree");
x.t("source","file");
x.t("source","destination");
x.t("source","address");
x.t("source","node");
x.t("source","header");
x.t("source","routing");
x.t("source","port");
x.t("events","timers");
x.t("events","add");
x.t("events","messages");
x.t("events","indicating");
x.t("events","event");
x.t("events","include");
x.t("events","data");
x.t("events","modify");
x.t("enum","app_ftp_server_data");
x.t("enum","network_protocol_ip");
x.t("enum","declarations");
x.t("enum","trace_undefined");
x.t("enum","message/event");
x.t("enum","special");
x.t("enum","routing_admin_distance_static");
x.t("app_ftp_server_data","app_ftp_server");
x.t("instance","protocols");
x.t("instance","parameter");
x.t("instance","shown");
x.t("instance","cbr");
x.t("instance","register");
x.t("instance","timer");
x.t("instance","multiple");
x.t("instance","list");
x.t("instance","initialization");
x.t("instance","4.2.5.5.3.2");
x.t("instance","initializing");
x.t("instance","section");
x.t("instance","identifier");
x.t("instance","message");
x.t("instance","identification");
x.t("instance","application");
x.t("instance","otherwise");
x.t("instance","protocol");
x.t("instance","bellman-ford");
x.t("instance","packet");
x.t("instance","created");
x.t("instance","reading");
x.t("instance","gets");
x.t("variables","required");
x.t("variables","declared");
x.t("variables","retval");
x.t("variables","protocol\u2019s");
x.t("variables","function");
x.t("variables","section");
x.t("variables","4.2.5.7.3");
x.t("variables","calling");
x.t("variables","whose");
x.t("variables","defined");
x.t("variables","application");
x.t("variables","routing");
x.t("variables","structure");
x.t("variables","numbytesrecvd");
x.t("variables","reading");
x.t("variables","update");
x.t("various","functions");
x.t("instructions","creating");
x.t("instructions","given");
x.t("having","header");
x.t("always","mandatory");
x.t("always","add");
x.t("always","range");
x.t("always","highest");
x.t("required","example");
x.t("required","standard");
x.t("required","e.g");
x.t("required","and/or");
x.t("required","buffer");
x.t("user's","configuration");
x.t("related","variables");
x.t("related","information");
x.t("ensures","unique");
x.t("ensures","client");
x.t("appcbrclientgetcbrclient","searches");
x.t("appcbrclientgetcbrclient","section");
x.t("appcbrclientgetcbrclient","node");
x.t("once","node");
x.t("routing_fisheye.cpp","qualnet_home");
x.t("subnetmask","networkipgetinterfacesubnetmask");
x.t("subnetmask","any_dest");
x.t("subnetmask","networkipgetinterfaceaddress");
x.t("subnetmask","route");
x.t("carry","user");
x.t("carry","information");
x.t("4.2.6.7","collecting");
x.t("stands","destination");
x.t("4-48","shows");
x.t("4-48","setting");
x.t("4-1","user");
x.t("components","cbr");
x.t("components","new");
x.t("components","common");
x.t("components","application");
x.t("components","protocol");
x.t("/main/app_util.cpp","file");
x.t("/main/app_util.cpp","app_udpsendnewdatawithpriority");
x.t("/main/app_util.cpp","additionally");
x.t("void","applayercbrclient");
x.t("void","app_processevent");
x.t("void","app_initializeapplications");
x.t("void","bellmanford");
x.t("void","dataptr");
x.t("void","appcbrserverprintstats");
x.t("void","sendrouteadvertisement");
x.t("void","appcbrserverfinalize");
x.t("void","routingfisheyeinit");
x.t("void","routingbellmanfordinit");
x.t("void","applayercbrserver");
x.t("void","app_tcpserverlisten");
x.t("void","routingbellmanfordlayer");
x.t("void","appdetail");
x.t("void","routingvar");
x.t("void","app_inserinporttable");
x.t("void","olsr2");
x.t("void","app_tcpopenconnectionwithpriority");
x.t("void","routingbellmanfordfinalize");
x.t("void","networkipparseandsetroutingprotocoltype");
x.t("void","olsr");
x.t("void","myprotocol");
x.t("void","app_initialize");
x.t("void","app_finalize");
x.t("void","appcbrclientinit");
x.t("void","appcbrclientfinalize");
x.t("void","app_udpsendnewheadervirtualdatawithpriority");
x.t("flag","indicates");
x.t("flag","indicating");
x.t("node\u2019s","application");
x.t("snippets","shown");
x.t("snippets","look");
x.t("snippets","explained");
x.t("snippets","two");
x.t("dispatchers","section");
x.t("dispatchers","application");
x.t("recommend","adding");
x.t("parts","client");
x.t("sessionstart","clocktype");
x.t("sessionstart","getsimtime");
x.t("appstr","else");
x.t("appstr","appstr");
x.t("appstr","cbr");
x.t("appstr","[max_string_length]");
x.t("appstr","variable");
x.t("appstr","myprotocol");
x.t("performs","actions");
x.t("performs","task");
x.t("performs","following");
x.t("firstnode","appinput.inputstrings");
x.t("firstnode","const");
x.t("observed","qualnet");
x.t("responsible","printing");
x.t("networkroutinggetadmindistance","needs");
x.t("networkroutinggetadmindistance","4.2.6.6");
x.t("networkroutinggetadmindistance","implemented");
x.t("networkroutinggetadmindistance","add");
x.t("networkroutinggetadmindistance","node");
x.t("networkroutinggetadmindistance","return");
x.t("distances","routing");
x.t("/scenarios/default/default.config","explanation");
x.t("io_readtime","io_readstring");
x.t("4.2.6.8","finalization");
x.t("listens","specified");
x.t("user","specified");
x.t("user","input");
x.t("user","control");
x.t("user","qualnet");
x.t("user","configuration");
x.t("user","experiment");
x.t("user","data");
x.t("user","applications");
x.t("user","specify");
x.t("4-2","lists");
x.t("4-2","traffic");
x.t("cbr","else");
x.t("cbr","performs");
x.t("cbr","calls");
x.t("cbr","operates");
x.t("cbr","500");
x.t("cbr","initialization");
x.t("cbr","info");
x.t("cbr","traffic");
x.t("cbr","char");
x.t("cbr","src");
x.t("cbr","understand");
x.t("cbr","appears");
x.t("cbr","function");
x.t("cbr","client");
x.t("cbr","qualnet");
x.t("cbr","ftp");
x.t("cbr","constant");
x.t("cbr","implementation");
x.t("cbr","data");
x.t("cbr","application");
x.t("cbr","protocol");
x.t("cbr","applications");
x.t("cbr","used");
x.t("cbr","simulation");
x.t("cbr","generates");
x.t("cbr","server");
x.t("cbr","item");
x.t("video","codecs");
x.t("qos","parameters");
x.t("(igrp)","distance");
x.t("160","protocol");
x.t("enabled","apptype");
x.t("enabled","appdata.routingstats");
x.t("enabled","application");
x.t("msg_app_fromtransport","udptoapprecv");
x.t("msg_app_fromtransport","indicates");
x.t("msg_app_fromtransport","handlefromtransport");
x.t("msg_app_fromtransport","message");
x.t("msg_app_fromtransport","application");
x.t("discussed","snippets");
x.t("discussed","section");
x.t("txtime","cbrdata");
x.t("optiontoken1","optiontoken2");
x.t("nodeid","address");
x.t("nodeid","networkipgetinterfaceaddress");
x.t("tables","default");
x.t("tables","initialization");
x.t("tables","section");
x.t("tables","routing");
x.t("tables","used");
x.t("msg_prop_signalend","101");
x.t("creates","instance");
x.t("creates","initializes");
x.t("parameter-name","name");
x.t("parameter-name","index");
x.t("routing-protocol","&retval");
x.t("4.2.6.9","including");
x.t("uses","udp");
x.t("uses","tcp");
x.t("uses","apptype");
x.t("uses","store");
x.t("uses","functions");
x.t("uses","known");
x.t("uses","ftp");
x.t("uses","port");
x.t("generating","traffic");
x.t("4-3","lists");
x.t("4-3","application");
x.t("implemented","app_util.cpp");
x.t("implemented","network_ip.cpp");
x.t("implemented","file");
x.t("implemented","network");
x.t("implemented","routing_bellmanford.cpp");
x.t("implemented","app_cbr.cpp");
x.t("implemented","qualnet_home");
x.t("implemented","qualnet");
x.t("implemented","application.cpp");
x.t("ad-hoc","distance");
x.t("/include/mapping.h","file");
x.t("/include/mapping.h","called");
x.t("nodeaddress","subnetmask");
x.t("nodeaddress","destaddress");
x.t("nodeaddress","localaddr");
x.t("nodeaddress","address");
x.t("nodeaddress","sourceaddr");
x.t("nodeaddress","destaddr");
x.t("nodeaddress","remoteaddr");
x.t("nodeaddress","sourcenodeid");
x.t("nodeaddress","serveraddr");
x.t("app_getprotocoltype","function");
x.t("app_getprotocoltype","node");
x.t("app_getprotocoltype","returns");
x.t("traverse","protocol");
x.t("trace_ftp","trace_myprotcol");
x.t("last","trace_any_protocol");
x.t("last","code");
x.t("shows","app_initializeapplications");
x.t("shows","code");
x.t("shows","event");
x.t("shows","finalization");
x.t("shows","modifications");
x.t("shows","done");
x.t("shows","outline");
x.t("line","stored");
x.t("sourcestring","[max_string_length]");
x.t("sourcestring","&sourcenodeid");
x.t("sourcestring","deststring");
x.t("optiontoken2","optiontoken3");
x.t("field","source");
x.t("field","cbr");
x.t("field","identify");
x.t("field","saves");
x.t("field","initialized");
x.t("field","assigned");
x.t("field","nextportnum");
x.t("field","message");
x.t("field","sourceport");
x.t("field","case");
x.t("field","applications");
x.t("field","appdata");
x.t("handled","node");
x.t("handled","event");
x.t("handled","server");
x.t("program","work");
x.t("(msg)","payload");
x.t("(msg)","clientptr");
x.t("(msg)","sizeof");
x.t("(msg)","setipv4addressinfo");
x.t("(msg)","memcpy");
x.t("(msg)","serverptr-");
x.t("declared","part");
x.t("routingmyprotocolinit","included");
x.t("routingmyprotocolinit","initialization");
x.t("routingmyprotocolinit","(node)");
x.t("fisheye_intra_update_interval","else");
x.t("networkipgetinterfacenetworkaddress","node");
x.t("findroute","bellmanford");
x.t("acndata","msg");
x.t("scripts","qualnet");
x.t("state","4.2.6.3");
x.t("state","shown");
x.t("state","variables");
x.t("state","source");
x.t("state","initialization");
x.t("state","declare");
x.t("state","stored");
x.t("state","allocating");
x.t("state","store");
x.t("state","next");
x.t("state","section");
x.t("state","header");
x.t("state","variable");
x.t("state","information");
x.t("state","routing");
x.t("state","structure");
x.t("state","protocol");
x.t("state","statistics");
x.t("4-4","lists");
x.t("4-4","application");
x.t("kernel","functions");
x.t("kernel","function");
x.t("register","instance");
x.t("register","application");
x.t("register","itself");
x.t("interface","example");
x.t("interface","static");
x.t("interface","void");
x.t("interface","updates");
x.t("interface","destaddress");
x.t("interface","forward");
x.t("interface","address");
x.t("interface","functions");
x.t("interface","function");
x.t("interface","code");
x.t("interface","any_dest");
x.t("interface","configuration");
x.t("interface","figure");
x.t("interface","broadcast");
x.t("interface","information");
x.t("look","files");
x.t("look","complete");
x.t("look","implementation");
x.t("provided","refer");
x.t("timer","events");
x.t("timer","state");
x.t("timer","tell");
x.t("timer","timer");
x.t("timer","type");
x.t("timer","close");
x.t("timer","connection");
x.t("timer","belongs");
x.t("timer","initialized");
x.t("timer","apptimer");
x.t("timer","store");
x.t("timer","meant");
x.t("timer","typedef");
x.t("timer","4.2.5");
x.t("timer","client");
x.t("timer","message");
x.t("timer","qualnet");
x.t("timer","event");
x.t("timer","send");
x.t("timer","itself");
x.t("timer","inform");
x.t("timer","occur");
x.t("timer","update");
x.t("working","application");
x.t("protocol-specific","event");
x.t("protocol-specific","configuration");
x.t("protocol-specific","application");
x.t("app_initializeapplications","calls");
x.t("app_initializeapplications","access");
x.t("app_initializeapplications","initialization");
x.t("app_initializeapplications","reads");
x.t("app_initializeapplications","section");
x.t("app_initializeapplications","node");
x.t("app_initializeapplications","read");
x.t("app_initializeapplications","app_initialize");
x.t("app_initializeapplications","used");
x.t("app_initializeapplications","reading");
x.t("statement","file");
x.t("statement","handle");
x.t("statement","second");
x.t("statement","include");
x.t("statement","protocol");
x.t("statement","used");
x.t("cbrdata","appdatacbrclient");
x.t("cbrdata","main");
x.t("cbrdata","data");
x.t("struct_app_cbr_client_str","address");
x.t("numbytessent","uint32");
x.t("displays","error");
x.t("optiontoken3","io_appparsesourceanddeststrings");
x.t("appdata.nextportnum","app_registernewapp");
x.t("appdata.nextportnum","1024");
x.t("serve","variety");
x.t("tell","cbr");
x.t("leak","memory");
x.t("travels","protocol");
x.t("serverptr","clocktype");
x.t("serverptr","appdatacbrserver");
x.t("serverptr","switch");
x.t("serverptr","null");
x.t("serverptr","figure");
x.t("serverptr","appcbrservernewcbrserver");
x.t("serverptr","appcbrservergetcbrserver");
x.t("4.2.6.4.1","determining");
x.t("4.2.6.4.1","call");
x.t("interfaceinfo","[i]");
x.t("configurable","parameters");
x.t("networkipgetinterfacesubnetmask","node");
x.t("modified","function");
x.t("cooperates","perform");
x.t("support","overriding");
x.t("categories","traffic-generating");
x.t("type","lists");
x.t("type","void");
x.t("type","msg_app_fromtransport");
x.t("type","timer");
x.t("type","interface");
x.t("type","udp");
x.t("type","apptype");
x.t("type","specified");
x.t("type","appinfo");
x.t("type","int");
x.t("type","switch");
x.t("type","information");
x.t("type","received");
x.t("type","application");
x.t("type","int32");
x.t("type","app_timer_send_pkt");
x.t("type","case");
x.t("type","pointer");
x.t("type","used");
x.t("type","following");
x.t("type","either");
x.t("type","category");
x.t("app_telnet_client","application-layer");
x.t("application-layer","routing");
x.t("open","tcp");
x.t("4.2.5.6.1","describes");
x.t("4.2.5.6.1","declare");
x.t("4.2.5.6.1","modifying");
x.t("4.2.5.6.1","except");
x.t("doesn\u2019t","already");
x.t("/include/partition.h","initialization");
x.t("maintained","new");
x.t("traces","packets");
x.t("clocktype","randomdelay");
x.t("clocktype","endtime");
x.t("clocktype","throughput");
x.t("clocktype","variables");
x.t("clocktype","sessionstart");
x.t("clocktype","txtime");
x.t("clocktype","sessionfinish");
x.t("clocktype","totalendtoenddelay");
x.t("clocktype","waittime");
x.t("clocktype","sessionlastreceived");
x.t("clocktype","minendtoenddelay");
x.t("clocktype","sessionlastsent");
x.t("clocktype","maxendtoenddelay");
x.t("clocktype","delay");
x.t("clocktype","interval");
x.t("clocktype","value");
x.t("clocktype","starttime");
x.t("clocktype","totaljitter");
x.t("obtained","splitting");
x.t("intervalstr","starttimestr");
x.t("retval","char");
x.t("retval","sccanf");
x.t("retval","node-");
x.t("close","session");
x.t("sample","code");
x.t("thing","determine");
x.t("applist-","apptype");
x.t("applist-","appdetail");
x.t("applist-","appnext");
x.t("assert","(false)");
x.t("initiates","new");
x.t("(appdatacbrserver)","cbrserver-");
x.t("appinfo-","appdetail");
x.t("4.2.6.4.2","write");
x.t("4.2.6.4.2","calling");
x.t("routing_admin_distance_default","255");
x.t("suited","protocol");
x.t("payload","int");
x.t("payload","payloadsize");
x.t("4-5","apis");
x.t("4-5","examples");
x.t("trace","protocols");
x.t("trace","lists");
x.t("trace","data");
x.t("trace","facilitate");
x.t("trace","file-based");
x.t("calls","initialization");
x.t("calls","function");
x.t("calls","4.2.7.1.1");
x.t("calls","appropriate");
x.t("calls","application");
x.t("calls","finalization");
x.t("calls","two");
x.t("packets","carry");
x.t("packets","traverse");
x.t("packets","kernel");
x.t("packets","details");
x.t("packets","need");
x.t("packets","totalendtoenddelay");
x.t("packets","directly");
x.t("packets","forward");
x.t("packets","decide");
x.t("packets","destination");
x.t("packets","control");
x.t("packets","different");
x.t("packets","4.2.2");
x.t("packets","client");
x.t("packets","transmitted");
x.t("packets","received");
x.t("packets","collecting");
x.t("packets","manage");
x.t("packets","using");
x.t("packets","sent");
x.t("time","receiver");
x.t("time","related");
x.t("time","required");
x.t("time","cbr");
x.t("time","timer");
x.t("time","trace");
x.t("time","udp");
x.t("time","connects");
x.t("time","src");
x.t("time","transmission");
x.t("time","end");
x.t("time","client");
x.t("time","end_time");
x.t("time","data");
x.t("time","intervals");
x.t("time","following");
x.t("vector","(aodv)");
x.t("vector","routing");
x.t("vector","interior");
x.t("app_util.cpp","table");
x.t("app_util.cpp","add");
x.t("app_util.cpp","implementation");
x.t("app_util.cpp","4.2.5.5.4");
x.t("app_util.cpp","contains");
x.t("4.2.5.6.2","write");
x.t("4.2.5.6.2","section");
x.t("4.2.5.6.2","implementing");
x.t("4.2.5.6.2","4.2.5.7");
x.t("4.2.5.6.2","figure");
x.t("4.2.5.6.2","appcbrclientnewcbrclient");
x.t("examined","input");
x.t("operates","setting");
x.t("explicitly","stored");
x.t("calculation","transmission");
x.t("routing_protocol_dymo6","routing_protocol_myprotocol");
x.t("mandatory","optional");
x.t("4.2.6.4.3","void");
x.t("4.2.6.4.3","implementing");
x.t("response","events");
x.t("no_comment","trace_printtrace");
x.t("4-6","implemented");
x.t("4-6","functions");
x.t("wired","interface");
x.t("multiple","interfaces");
x.t("multiple","cbr");
x.t("multiple","words");
x.t("multiple","instances");
x.t("multiple","applications");
x.t("rate","look");
x.t("rate","(mcbr)");
x.t("rate","network");
x.t("rate","traffic");
x.t("rate","(cbr)");
x.t("rate","name");
x.t("rate","configured");
x.t("rate","keeping");
x.t("rate","section");
x.t("rate","developer");
x.t("rate","application");
x.t("rate","(vbr)");
x.t("rate","achieved");
x.t("mobile","communications");
x.t("two-way","request-response");
x.t("fixed-size","data");
x.t("(bgpv4)","protocol");
x.t("app_info","apptype");
x.t("app_info","appnext");
x.t("identify","instance");
x.t("identify","session");
x.t("identify","application");
x.t("connection","create");
x.t("connection","timer");
x.t("connection","connection");
x.t("connection","4.2.4.2");
x.t("connection","specified");
x.t("connection","closed");
x.t("connection","applayercbrserver");
x.t("connection","app_tcpserverlisten");
x.t("connection","request");
x.t("connection","different");
x.t("connection","information");
x.t("connection","received");
x.t("connection","application");
x.t("sections","create");
x.t("sections","note");
x.t("4.2.5.6.3","example");
x.t("4.2.5.6.3","implementing");
x.t("4.2.5.6.3","include");
x.t("4.2.5.6.3","describe");
x.t("however","certain");
x.t("however","size");
x.t("however","recommended");
x.t("however","known");
x.t("however","application");
x.t("appmyprotocolserverinit","respectively");
x.t("appmyprotocolserverinit","node");
x.t("numpktssent","uint32");
x.t("node's","node");
x.t("explains","read");
x.t("partition_initializenodes","implemented");
x.t("partition_initializenodes","calls");
x.t("followed","call");
x.t("inside","switch");
x.t("arrives","cbr");
x.t("arrives","destination");
x.t("total","packets");
x.t("/libraries/developer/makefile-common","shown");
x.t("parsing","function");
x.t("app_myprotocol","apptype");
x.t("app_myprotocol","app_placeholder");
x.t("routing_admin_distance_rip","//endrip");
x.t("network_ip.h","returns");
x.t("accurately","simulated");
x.t("networks","permanent");
x.t("networks","4.2.1.2");
x.t("networks","multimedia");
x.t("networks","cellular");
x.t("networks","running");
x.t("networks","developer");
x.t("networks","sensor");
x.t("networks","routing");
x.t("4-8","table");
x.t("needed","communicate");
x.t("needed","implementing");
x.t("needed","message");
x.t("needed","protocol");
x.t("partial","description");
x.t("apis","available");
x.t("apis","however");
x.t("apis","listed");
x.t("apis","file");
x.t("apis","inter-layer");
x.t("apis","parameters");
x.t("apis","accept");
x.t("apis","section");
x.t("apis","several");
x.t("apis","used");
x.t("apis","app_udpsendnewheadervirtualdatawithpriority");
x.t("4.2.4.1","message");
x.t("4.2.4.1","application");
x.t("listed","below");
x.t("listed","table");
x.t("checks","whether");
x.t("checks","routing");
x.t("checks","application");
x.t("checks","port");
x.t("require","additional");
x.t("app_myprotocol.cpp","contain");
x.t("app_myprotocol.cpp","strongly");
x.t("app_myprotocol.cpp","constant");
x.t("appdatacbrclient","appcbrclientgetcbrclient");
x.t("appdatacbrclient","applist-");
x.t("appdatacbrclient","appinfo-");
x.t("appdatacbrclient","clientptr");
x.t("appdatacbrclient","appdatacbrserver");
x.t("appdatacbrclient","cbrclient");
x.t("appdatacbrclient","data");
x.t("appdatacbrclient","mem_malloc");
x.t("appdatacbrclient","appcbrclientnewcbrclient");
x.t("sessionfinish","clocktype");
x.t("uint32","numpktssent");
x.t("uint32","itemsize");
x.t("uint32","numpktsrecvd");
x.t("uint32","itemstosend");
x.t("500","2-kilobyte");
x.t("500","2048");
x.t("io_appparsesourceanddeststrings","firstnode");
x.t("io_appparsesourceanddeststrings","defined");
x.t("io_appparsesourceanddeststrings","pointer");
x.t("default","assert");
x.t("default","value");
x.t("default","error_reporterror");
x.t("default","values");
x.t("default","case");
x.t("default","print");
x.t("default","port");
x.t("app_cbr_server","appcbrserverfinalize");
x.t("app_cbr_server","applayercbrserver");
x.t("app_cbr_server","clientptr-");
x.t("channel","layer");
x.t("resetting","timers");
x.t("removes","entries");
x.t("//trace","information");
x.t("modeled","qualnet");
x.t("servers","traffic");
x.t("servers","known");
x.t("certain","differences");
x.t("certain","service-providing");
x.t("certain","functions");
x.t("4-9","table");
x.t("bellmanford","shown");
x.t("bellmanford","void");
x.t("bellmanford","field");
x.t("bellmanford","bellmanford");
x.t("bellmanford","destaddress");
x.t("bellmanford","routingprotocoltype");
x.t("bellmanford","int");
x.t("bellmanford","point");
x.t("bellmanford","node-");
x.t("bellmanford","figure");
x.t("bellmanford","olsr");
x.t("bellmanford","bellman-ford");
x.t("bellmanford","mem_malloc");
x.t("link","state");
x.t("link","next");
x.t("link","state-based");
x.t("differences","implementation");
x.t("differences","application");
x.t("single","entry");
x.t("single","string");
x.t("single","module");
x.t("4.2.4.2","transport");
x.t("4.2.4.2","application");
x.t("new","library");
x.t("new","instance");
x.t("new","cbr");
x.t("new","timer");
x.t("new","connection");
x.t("new","entry");
x.t("new","application\u2019s");
x.t("new","event");
x.t("new","application");
x.t("new","port");
x.t("new","protocol");
x.t("prefix","file");
x.t("among","information");
x.t("sessionisclosed","d_int64");
x.t("start","sending");
x.t("start","time");
x.t("items","start_time");
x.t("items","node");
x.t("items","send");
x.t("access","state");
x.t("access","configuration");
x.t("nodehash","destnodeid");
x.t("nodehash","sourcenodeid");
x.t("element","list");
x.t("belongs","timer");
x.t("app_timer_update_table","purpose");
x.t("contents","user");
x.t("contents","part");
x.t("contents","section");
x.t("contents","important");
x.t("details","computing");
x.t("details","void");
x.t("details","io_readtime");
x.t("details","needed");
x.t("details","viewing");
x.t("compiling","files");
x.t("updates","interface");
x.t("updates","bellmanford");
x.t("updates","existing");
x.t("updates","routing");
x.t("destaddress","subnetmask");
x.t("destaddress","nodeaddress");
x.t("destaddress","networkipgetinterfacenetworkaddress");
x.t("destaddress","networkipgetinterfacebroadcastaddress");
x.t("destaddress","any_dest");
x.t("destaddress","networkipgetinterfaceaddress");
x.t("destaddress","networkipiswirednetwork");
x.t("destaddress","rowptr");
x.t("client-server","application");
x.t("size","user");
x.t("size","simulated");
x.t("size","part");
x.t("size","interval");
x.t("size","application");
x.t("size","packet");
x.t("size","item");
x.t("designed","fast");
x.t("/include","/app_util.h");
x.t("includes","default");
x.t("includes","functions");
x.t("includes","following");
x.t("includes","statistics");
x.t("4.2.4.3","complete");
x.t("4.2.4.3","application");
x.t("trace_myprotcol","last");
x.t("passes","initialization");
x.t("passes","routing");
x.t("appcbrserverinit","implemented");
x.t("appcbrserverinit","(node)");
x.t("appcbrserverinit","called");
x.t("printing","statistics");
x.t("//startrip","routing_admin_distance_rip");
x.t("network_ip.cpp","maintain");
x.t("network_ip.cpp","initializes");
x.t("network_ip.cpp","returns");
x.t("rowptr-","localroute");
x.t("it's","port");
x.t("myport","registers");
x.t("myport","inserts");
x.t("reside","layer");
x.t("reside","application");
x.t("simulated","size");
x.t("simulated","appropriately");
x.t("appropriately","configuring");
x.t("file","example");
x.t("file","defines");
x.t("file","files");
x.t("file","source");
x.t("file","cbr");
x.t("file","app_util.cpp");
x.t("file","app_myprotocol.cpp");
x.t("file","checks");
x.t("file","includes");
x.t("file","api.h");
x.t("file","routing_myprotocol.h");
x.t("file","traffic-gen");
x.t("file","routingfisheyeinit");
x.t("file","routing_bellmanford.cpp");
x.t("file","app_ftp.cpp");
x.t("file","sets");
x.t("file","input");
x.t("file","store");
x.t("file","application.h");
x.t("file","function");
x.t("file","may");
x.t("file","app_cbr.cpp");
x.t("file","section");
x.t("file","format");
x.t("file","qualnet_home");
x.t("file","end");
x.t("file","app_util.h");
x.t("file","ftp");
x.t("file","qualnet");
x.t("file","include");
x.t("file","4.2.6.8.1");
x.t("file","prototype");
x.t("file","makefile-common");
x.t("file","transfer");
x.t("file","data");
x.t("file","typical");
x.t("file","application.cpp");
x.t("file","called");
x.t("file","bellman-ford");
x.t("file","call");
x.t("file","app_myprotocol.h");
x.t("file","using");
x.t("file","names");
x.t("file","contains");
x.t("file","update");
x.t("http","hypertext");
x.t("http","application");
x.t("exponentially","distributed");
x.t("discovery","control");
x.t("initialization","functions");
x.t("initialization","function");
x.t("initialization","section");
x.t("initialization","message");
x.t("initialization","event");
x.t("initialization","process");
x.t("initialization","application");
x.t("utilities","used");
x.t("list","protocols");
x.t("list","type");
x.t("list","trace");
x.t("list","apis");
x.t("list","element");
x.t("list","network");
x.t("list","traffic-generating");
x.t("list","summarizes");
x.t("list","app");
x.t("list","appstats");
x.t("list","client");
x.t("list","reflect");
x.t("list","application");
x.t("list","routing");
x.t("list","applications");
x.t("app_routing_fisheye","160");
x.t("info","udptoapprecv");
x.t("info","apptoudpsend");
x.t("info","field");
x.t("info","cbrdata");
x.t("info","actiondata");
x.t("info","cbrclient-");
x.t("info","portinfo");
x.t("short","serverport");
x.t("short","myport");
x.t("short","protocoltype");
x.t("short","localport");
x.t("short","nextportnum");
x.t("short","sourceport");
x.t("short","app_getfreeport");
x.t("short","destinationport");
x.t("short","remoteport");
x.t("short","portnumber");
x.t("indicates","name");
x.t("indicates","whether");
x.t("indicates","arrival");
x.t("indicates","received");
x.t("indicates","model");
x.t("found","api");
x.t("need","explicitly");
x.t("need","apptype");
x.t("need","made");
x.t("need","specific");
x.t("need","performed");
x.t("need","sent");
x.t("api.h","shown");
x.t("api.h","api");
x.t("api.h","section");
x.t("api.h","qualnet_home");
x.t("api.h","described");
x.t("api.h","protocol");
x.t("user-developed","models");
x.t("stdlib.h","include");
x.t("totalendtoenddelay","clocktype");
x.t("totalendtoenddelay","variable");
x.t("totalendtoenddelay","figure");
x.t("50s","100s");
x.t("determines","packets");
x.t("determines","protocol");
x.t("determines","priority");
x.t("simulator","leak");
x.t("simulator","end");
x.t("simulator","header");
x.t("(false)","break");
x.t("finds","match");
x.t("io_printstat","function");
x.t("io_printstat","node");
x.t("io_printstat","print");
x.t("network.h","section");
x.t("proper","place");
x.t("dataptr","short");
x.t("waittime","tostype");
x.t("add","source");
x.t("add","app_myprotocol");
x.t("add","entry");
x.t("add","directly");
x.t("add","custom");
x.t("add","protocol's");
x.t("add","end");
x.t("add","code");
x.t("add","myprotocol");
x.t("add","dynamic");
x.t("add","application");
x.t("add","case");
x.t("add","protocol");
x.t("add","two");
x.t("codecs","infuse");
x.t("(mcbr)","model");
x.t("udp","exponentially");
x.t("udp","traffic");
x.t("udp","tcp");
x.t("udp","transport");
x.t("udp","sessions");
x.t("udp","protocol");
x.t("udp","bellman-ford");
x.t("udp","pass");
x.t("udp","delivers");
x.t("udp","flows");
x.t("enterprise","zigbeeapp");
x.t("enterprise","olsr-inria");
x.t("enterprise","eigrp");
x.t("enterprise","fisheye");
x.t("organization","files");
x.t("complete","description");
x.t("complete","list");
x.t("complete","code");
x.t("actions","need");
x.t("actions","taken");
x.t("actions","corresponding");
x.t("appinput.inputstrings","[i]");
x.t("&destaddr","node");
x.t("flags","connection");
x.t("clientptr","appcbrclientgetcbrclient");
x.t("clientptr","appdatacbrclient");
x.t("clientptr","switch");
x.t("clientptr","//pointer");
x.t("clientptr","figure");
x.t("clientptr","appcbrclientnewcbrclient");
x.t("(protocoltype)","case");
x.t("msg_prop_signalarrival","100");
x.t("during","protocol");
x.t("during","simulation");
x.t("/adaptation.cpp","(developer_srcdir)");
x.t("routing_admin_distance_olsr","routing_admin_distance_eigrp");
x.t("routing_myprotocol.h","create");
x.t("routing_myprotocol.h","4.2.6.4.3.1");
x.t("parameter.interupdateinterval","fisheye_inter_update_interval");
x.t("parameter.interupdateinterval","time_converttoclock");
x.t("handlefromtransport","node");
x.t("assignment","connection");
x.t("assignment","functions");
x.t("network","layer");
x.t("network","technologies");
x.t("network","accurately");
x.t("network","address");
x.t("network","umts");
x.t("network","application");
x.t("network","applications");
x.t("network","packet");
x.t("traffic-gen","supports");
x.t("traffic-gen","random");
x.t("according","user-specified");
x.t("voip","voice");
x.t("api","calls");
x.t("api","composed");
x.t("api","functions");
x.t("api","function");
x.t("api","reference");
x.t("entry","trace_any_protocol");
x.t("entry","needs");
x.t("entry","list");
x.t("entry","proper");
x.t("entry","routing_admin_distance_myprotocol");
x.t("entry","adds");
x.t("entry","msg_default");
x.t("entry","routing_protocol_myprotocol");
x.t("entry","forwarding");
x.t("entry","trace_myprotocol");
x.t("entry","app_placeholder");
x.t("guide","4.2.4.1");
x.t("guide","details");
x.t("guide","complete");
x.t("4.2.5.5.3.1","implemented");
x.t("4.2.5.5.3.1","register");
x.t("4.2.5.5.3.1","creating");
x.t("seqno","clocktype");
x.t("seqno","data.seqno");
x.t("seqno","d_uint32");
x.t("seqno","serverptr-");
x.t("seqno","app_udpsendnewheadervirtualdatawithpriority");
x.t("localaddr","short");
x.t("localaddr","address");
x.t("localaddr","(short)");
x.t("tos","appdatacbrclient");
x.t("tos","trace_cbr");
x.t("tos","bool");
x.t("tos","isrsvpteenabled");
x.t("tos","figure");
x.t("initialized","receives");
x.t("initialized","initialization");
x.t("initialized","1024");
x.t("initialized","process");
x.t("initialized","application");
x.t("initialized","bottom");
x.t("splitting","input");
x.t("check","application");
x.t("&sourceaddr","deststring");
x.t("(appdatacbrclient)","fill");
x.t("(appdatacbrclient)","memset");
x.t("remove","timed-out");
x.t("data.sourceport","new");
x.t("data.sourceport","data.seqno");
x.t("data.sourceport","clientptr-");
x.t("saves","memory");
x.t("/include/network.h","section");
x.t("applies","instances");
x.t("applies","nodes");
x.t("large","number");
x.t("traffic","properties");
x.t("traffic","pattern");
x.t("traffic","sending");
x.t("traffic","networks");
x.t("traffic","according");
x.t("traffic","old");
x.t("traffic","parameters");
x.t("traffic","gsm");
x.t("traffic","dns");
x.t("traffic","client");
x.t("traffic","randomly");
x.t("traffic","constant");
x.t("traffic","developer");
x.t("traffic","generated");
x.t("traffic","generator");
x.t("traffic","based");
x.t("traffic","generators");
x.t("traffic","server");
x.t("configuring","cbr");
x.t("tcp","connection");
x.t("tcp","udp");
x.t("tcp","traffic");
x.t("tcp","indicate");
x.t("tcp","notify");
x.t("tcp","4.2.3");
x.t("tcp","transport");
x.t("tcp","services");
x.t("tcp","transmit");
x.t("tcp","protocol");
x.t("tcp","pass");
x.t("unreliable","query/response");
x.t("apptype","example");
x.t("apptype","shown");
x.t("apptype","void");
x.t("apptype","nodeaddress");
x.t("apptype","type");
x.t("apptype","apptype");
x.t("apptype","enumeration");
x.t("apptype","appinfo");
x.t("apptype","destination");
x.t("apptype","exteriorgatewayprotocol");
x.t("apptype","section");
x.t("apptype","assigned");
x.t("apptype","value");
x.t("apptype","figure");
x.t("apptype","defined");
x.t("apptype","case");
x.t("apptype","described");
x.t("apptype","app_cbr_client");
x.t("apptype","info-");
x.t("apptype","unsigned");
x.t("apptype","server");
x.t("overview","flow");
x.t("tcp-based","application");
x.t("tcp-based","applications");
x.t("4.2.5.5.3.2","registering");
x.t("4.2.5.5.3.2","initialize");
x.t("recommended","user-developed");
x.t("recommended","apptype");
x.t("recommended","separate");
x.t("4-15","typedef");
x.t("4-15","adding");
x.t("sessionlastreceived","bool");
x.t("sessionlastreceived","getsimtime");
x.t("paramn","user-specified");
x.t("paramn","protocol-name");
x.t("paramn","section");
x.t("registering","application");
x.t("accepts","following");
x.t("message_infoalloc","node");
x.t("looking","additional");
x.t("appcbrserverprintstats","shown");
x.t("appcbrserverprintstats","node");
x.t("/app_superapplication.cpp","(developer_srcdir)");
x.t("false","printstats");
x.t("traffic-generating","protocols");
x.t("traffic-generating","protocol\u2019s");
x.t("traffic-generating","application");
x.t("traffic-generating","protocol");
x.t("traffic-generating","applications");
x.t("directly","appmyprotocolserverfinalize");
x.t("directly","network");
x.t("directly","connected");
x.t("directly","appmyprotocolclientfinalize");
x.t("directly","transmit");
x.t("directly","applications");
x.t("(cbr)","traffic");
x.t("query/response","traffic");
x.t("pinging","developer");
x.t("app_ftp_server","app_ftp_client");
x.t("inter-layer","communication");
x.t("specified","parameter");
x.t("specified","user");
x.t("specified","interface");
x.t("specified","enumerated");
x.t("specified","programmer");
x.t("specified","delay");
x.t("specified","first");
x.t("specified","format");
x.t("specified","message");
x.t("specified","qualnet");
x.t("specified","configuration");
x.t("specified","port");
x.t("specified","priority");
x.t("specified","users");
x.t("specified","loopback");
x.t("specified","server");
x.t("msg_app_fromtranslistenresult","message");
x.t("writing","network");
x.t("writing","traffic-generating");
x.t("app_ftp.h","source");
x.t("app_ftp.h","app_ftp.cpp");
x.t("summarizes","actions");
x.t("declare","new");
x.t("declare","initialize");
x.t("declare","structure");
x.t("declare","statistics");
x.t("4.2.5.5.3.3","initializing");
x.t("4.2.5.5.3.3","4.2.6.4.3.3");
x.t("4.2.5.5.3.3","figure");
x.t("4.2.5.5.3.3","call");
x.t("desired","destination");
x.t("desired","section");
x.t("desired","data");
x.t("desired","priority");
x.t("4-16","4.2.6.2");
x.t("4-16","typedef");
x.t("4-16","adding");
x.t("minendtoenddelay","int32");
x.t("handle","timer");
x.t("handle","messages");
x.t("handle","node");
x.t("handle","client");
x.t("handle","message");
x.t("handle","loopback");
x.t("layer-specific","apis");
x.t("processed","otherwise");
x.t("eventtype","messages");
x.t("eventtype","case");
x.t("cycle","required");
x.t("requires","knowledge");
x.t("requires","following");
x.t("true","appcbrserverprintstats");
x.t("true","figure");
x.t("true","bellmanford-");
x.t("true","appcbrclientprintstats");
x.t("routingprotocoltype","network_ipv4");
x.t("routingprotocoltype","ip-");
x.t("routingprotocoltype","select");
x.t("routingprotocoltype","node-");
x.t("routingprotocoltype","routing_protocol_myprotocol");
x.t("routingprotocoltype","case");
x.t("routingprotocoltype","routing_protocol_bellmanford");
x.t("converts","string");
x.t("sendrouteadvertisement","implemented");
x.t("sendrouteadvertisement","node");
x.t("suit","applications");
x.t("common","sources");
x.t("common","application");
x.t("common","category");
x.t("(ripng)","routing");
x.t("forward","packets");
x.t("forward","handles");
x.t("name","parameter");
x.t("name","files");
x.t("name","interface");
x.t("name","app_timer_update_table");
x.t("name","indicates");
x.t("name","specified");
x.t("name","enumerated");
x.t("name","enumeration");
x.t("name","different");
x.t("name","statistic");
x.t("name","read");
x.t("name","application");
x.t("name","app_timer_send_pkt");
x.t("name","routing");
x.t("name","protocol");
x.t("name","call");
x.t("name","app_timer_close_sess");
x.t("libraries","may");
x.t("stored","message");
x.t("stored","variable");
x.t("stored","forwarding");
x.t("stored","application");
x.t("stored","virtualpayloadsize");
x.t("stored","packet");
x.t("settings","files");
x.t("guidelines","section");
x.t("guidelines","qualnet");
x.t("functionality","component");
x.t("creating","files");
x.t("creating","instance");
x.t("creating","activating");
x.t("creating","application");
x.t("creating","routing");
x.t("/libraries/user_models","called");
x.t("4-17","shows");
x.t("4-17","calling");
x.t("demonstrates","timer");
x.t("demonstrates","add");
x.t("mem_alloc","sizeof");
x.t("appcbrserverfinalize","shown");
x.t("appcbrserverfinalize","node");
x.t("enclosed","square");
x.t("routingfisheyeinit","shown");
x.t("routingfisheyeinit","stores");
x.t("routingfisheyeinit","node");
x.t("handlecheckroutetimeoutalarm","(node)");
x.t("maintain","forwarding");
x.t("statsprinted","false");
x.t("statsprinted","true");
x.t("range","0-1023");
x.t("range","0-65535");
x.t("connects","server");
x.t("outgoinginterface","//trace");
x.t("outgoinginterface","outgoinginterface");
x.t("outgoinginterface","char");
x.t("zigbee","application");
x.t("gateway","routing");
x.t("gateway","protocol");
x.t("wireless","interface");
x.t("wireless","olsrv2-niigata");
x.t("wireless","igrp");
x.t("wireless","rip");
x.t("olsrv2-niigata","optimized");
x.t("addresses","following");
x.t("apptimer","timer");
x.t("apptimer","message_returninfo");
x.t("apptimer","section");
x.t("apptimer","4.2.4");
x.t("apptimer","data");
x.t("apptimer","used");
x.t("communication","enumerated");
x.t("communication","number");
x.t("communication","section");
x.t("communication","transport");
x.t("communication","application");
x.t("enables","application");
x.t("enumerated","file");
x.t("enumerated","data");
x.t("closed","4.2.4.3");
x.t("tasks","create");
x.t("tasks","need");
x.t("tasks","declare");
x.t("tasks","initialize");
x.t("tasks","internal");
x.t("tasks","read");
x.t("tasks","covered");
x.t("tasks","gets");
x.t("protocol\u2019s","state");
x.t("protocol\u2019s","initialization");
x.t("protocol\u2019s","header");
x.t("protocol\u2019s","event");
x.t("protocol\u2019s","configuration");
x.t("protocol\u2019s","administrative");
x.t("initialize","timers");
x.t("initialize","variables");
x.t("initialize","state");
x.t("initialize","traffic-generating");
x.t("initialize","client");
x.t("initialize","data");
x.t("initialize","application");
x.t("initialize","routing");
x.t("initialize","statistics");
x.t("char","appstr");
x.t("char","sourcestring");
x.t("char","type");
x.t("char","payload");
x.t("char","error");
x.t("char","buf");
x.t("char","header");
x.t("char","&data");
x.t("param1","paramn");
x.t("param1","param2");
x.t("2-kilobyte","items");
x.t("minute","starting");
x.t("2048","50s");
x.t("identifiers","parameters");
x.t("4-18","shows");
x.t("4-18","calling");
x.t("allocating","memory");
x.t("discusses","detail");
x.t("searches","list");
x.t("5.2.3","adding");
x.t("routing_bellmanford.cpp","initialization");
x.t("routing_bellmanford.cpp","sets");
x.t("routing_bellmanford.cpp","qualnet_home");
x.t("routing_bellmanford.cpp","folder");
x.t("routing_bellmanford.cpp","msg_app_periodicupdatealarm");
x.t("routingbellmanfordinit","shown");
x.t("routingbellmanfordinit","creates");
x.t("routingbellmanfordinit","calling");
x.t("routingbellmanfordinit","node");
x.t("routingbellmanfordinit","(node)");
x.t("routingbellmanfordinit","defined");
x.t("routingbellmanfordinit","called");
x.t("(buf)","io_readstring");
x.t("(buf)","figure");
x.t("networkemptyfowardingtable","function");
x.t("acndata.actiontype","send");
x.t("old","video");
x.t("part","tcplib");
x.t("part","user");
x.t("part","cbr");
x.t("part","initialization");
x.t("part","separate");
x.t("zigbeeapp","zigbee");
x.t("ipv4","ipv6");
x.t("distance","vector");
x.t("distance","assigned");
x.t("distance","least");
x.t("distance","myprotocol");
x.t("distance","routing");
x.t("distance","modify");
x.t("distance","higher");
x.t("handles","event");
x.t("handles","two");
x.t("handles","itself");
x.t("enumeration","type");
x.t("enumeration","file");
x.t("enumeration","apptype");
x.t("enumeration","traceprotocoltype");
x.t("enumeration","networkroutingprotocoltype");
x.t("enumeration","networkroutingadmindistancetype");
x.t("listen","specified");
x.t("perform","tasks");
x.t("perform","routing");
x.t("initializing","timers");
x.t("initializing","sending");
x.t("initializing","tables");
x.t("initializing","state");
x.t("initializing","traffic-generating");
x.t("initializing","client");
x.t("initializing","data");
x.t("initializing","routing");
x.t("initializing","statistics");
x.t("initializing","server");
x.t("frequently","message");
x.t("frequently","used");
x.t("app_ftp.cpp","implement");
x.t("app_ftp.cpp","folder");
x.t("app_ftp.cpp","4.2.5.6");
x.t("dispatcher","app_processevent");
x.t("dispatcher","performs");
x.t("dispatcher","cbr");
x.t("dispatcher","includes");
x.t("dispatcher","frees");
x.t("dispatcher","protocol's");
x.t("dispatcher","functions");
x.t("dispatcher","messages");
x.t("dispatcher","function");
x.t("dispatcher","section");
x.t("dispatcher","informs");
x.t("dispatcher","works");
x.t("dispatcher","enable");
x.t("dispatcher","client");
x.t("dispatcher","message");
x.t("dispatcher","include");
x.t("dispatcher","finalization");
x.t("dispatcher","application");
x.t("dispatcher","routing");
x.t("dispatcher","protocol");
x.t("dispatcher","bellman-ford");
x.t("dispatcher","server");
x.t("component","file");
x.t("component","appropriate");
x.t("param2","paramn");
x.t("const","nodeinput");
x.t("periodic","timer");
x.t("periodic","interval");
x.t("periodic","update");
x.t("4-19","appdatacbrclient");
x.t("4-19","creating");
x.t("fill","cbr");
x.t("bytes","numpktsrecvd");
x.t("bytes","received");
x.t("bytes","sent");
x.t("snippet","function");
x.t("snippet","networkipparseandsetroutingprotocoltype");
x.t("snippet","bellman-ford");
x.t("custom","application");
x.t("4.4.3","example");
x.t("network_protocol_ip","network_protocol_ipv6");
x.t("brackets","specification");
x.t("brackets","used");
x.t("(bellmanford)","node-");
x.t("app_routing_myprotocol","routingmyprotocollayer");
x.t("handleperiodicupdatealarm","(node)");
x.t("virtual","data");
x.t("provides","large");
x.t("provides","overview");
x.t("provides","detailed");
x.t("provides","additional");
x.t("provides","several");
x.t("provides","general");
x.t("provides","outline");
x.t("parameters","example");
x.t("parameters","passed");
x.t("parameters","table");
x.t("parameters","description");
x.t("parameters","cbr");
x.t("parameters","passes");
x.t("parameters","initialization");
x.t("parameters","specified");
x.t("parameters","initialize");
x.t("parameters","input");
x.t("parameters","protocol-name");
x.t("parameters","commonly");
x.t("parameters","section");
x.t("parameters","calling");
x.t("parameters","node");
x.t("parameters","identifier");
x.t("parameters","qualnet");
x.t("parameters","4.2.6.4.3.2");
x.t("parameters","configuration");
x.t("parameters","developer");
x.t("parameters","fisheye-intra-update-interval");
x.t("parameters","routing");
x.t("parameters","application");
x.t("parameters","protocol");
x.t("parameters","call");
x.t("parameters","containing");
x.t("parameters","fisheye");
x.t("distribution-based","traffic");
x.t("telephony","sessions");
x.t("4.2.7.1","routingvar");
x.t("4.2.7.1","application");
x.t("4.2.7.1","port");
x.t("session","timer");
x.t("session","apptimer");
x.t("session","figure");
x.t("programmer","name");
x.t("programmer","number");
x.t("helpful","examine");
x.t("src","create");
x.t("src","dest");
x.t("src","client");
x.t("partition.h","qualnet_home");
x.t("timed-out","entries");
x.t("applayercbrserver","initiates");
x.t("applayercbrserver","calls");
x.t("applayercbrserver","first");
x.t("applayercbrserver","node");
x.t("applayercbrserver","event");
x.t("applayercbrserver","figure");
x.t("appdata.appptr","appdatacbrclient");
x.t("appdata.appptr","applist");
x.t("updating","forwarding");
x.t("updating","statistics");
x.t("4-30","template");
x.t("4-30","finalization");
x.t("integrating","network");
x.t("integrating","application");
x.t("integrating","protocol");
x.t("actiondata","acndata");
x.t("sends","udp");
x.t("sends","data");
x.t("sends","packet");
x.t("generic","ftp");
x.t("ipv6","networks");
x.t("optimized","link");
x.t("macros","functions");
x.t("prototypes","interface");
x.t("prototypes","api");
x.t("prototypes","functions");
x.t("appinfo","appdatacbrclient");
x.t("appinfo","applist");
x.t("appinfo","appinfo");
x.t("appinfo","nextapp");
x.t("appinfo","app_registernewapp");
x.t("appinfo","section");
x.t("appinfo","appdatacbrserver");
x.t("appinfo","data");
x.t("appinfo","appdata");
x.t("appinfo","appptr");
x.t("app","info");
x.t("app","node");
x.t("indicate","error");
x.t("indicate","application");
x.t("indicate","bellman-ford");
x.t("place","initialization");
x.t("place","list");
x.t("place","folder");
x.t("place","application");
x.t("declarations","source");
x.t("declarations","section");
x.t("declarations","node");
x.t("standard","library");
x.t("standard","implementing");
x.t("standard","qualnet");
x.t("determine","instance");
x.t("applist","applist-");
x.t("applist","nextapp");
x.t("applist","node-");
x.t("applist","null");
x.t("applist","break");
x.t("frees","memory");
x.t("increment","value");
x.t("4-31","template");
x.t("4-31","finalization");
x.t("(developer_srcdir)","/app_telnet.cpp");
x.t("(developer_srcdir)","/adaptation.cpp");
x.t("(developer_srcdir)","/app_superapplication.cpp");
x.t("(developer_srcdir)","/app_traffic_gen.cpp");
x.t("(developer_srcdir)","/app_myprotocol.cpp");
x.t("(developer_srcdir)","/adaptation_aal5.cpp");
x.t("(developer_srcdir)","/app_messenger.cpp");
x.t("(developer_srcdir)","/app_mcbr.cpp");
x.t("routing_admin_distance_myprotocol","//startrip");
x.t("routing_admin_distance_myprotocol","figure");
x.t("routing_admin_distance_myprotocol","networkroutingadmindistancetype");
x.t("networkdata.networkvar","int");
x.t("networkdata.networkvar","bool");
x.t("numberinterfaces","nodeaddress");
x.t("numberinterfaces","io_readstring");
x.t("numberinterfaces","ip-");
x.t("numberinterfaces","networktype");
x.t("routingbellmanfordinittrace","node");
x.t("&wasfound","buf");
x.t("continue","networkipiswirednetwork");
x.t("routingmyprotocollayer","void");
x.t("routingmyprotocollayer","node");
x.t("overriding","default");
x.t("overriding","apptype");
x.t("4.2.7.2","setting");
x.t("stack","shown");
x.t("stack","layer");
x.t("stack","list");
x.t("stack","qualnet_home");
x.t("stack","node");
x.t("stack","nodes");
x.t("allows","user");
x.t("web","traffic");
x.t("phone","calls");
x.t("phone","call");
x.t("tenet-style","tcp");
x.t("fast","convergence");
x.t("(dsr)","protocols");
x.t("decide","outgoing");
x.t("decide","format");
x.t("composed","several");
x.t("map","node");
x.t("explained","below");
x.t("explained","section");
x.t("address","parameter");
x.t("address","2008");
x.t("address","dest");
x.t("address","source");
x.t("address","interface");
x.t("address","wired");
x.t("address","io_appparsesourceanddeststrings");
x.t("address","localaddr");
x.t("address","specified");
x.t("address","address");
x.t("address","input");
x.t("address","sourceaddr");
x.t("address","clientaddr");
x.t("address","node");
x.t("address","any_dest");
x.t("address","items_to_send");
x.t("address","remoteaddr");
x.t("address","broadcast");
x.t("address","port");
x.t("address","serveraddr");
x.t("address","subnet");
x.t("address","associated");
x.t("address","specify");
x.t("app_myprotocol_client","applayermyprotocolclient");
x.t("app_myprotocol_client","appmyprotocolclientfinalize");
x.t("app_myprotocol_client","app_myprotocol_server");
x.t("app_myprotocol_client","application");
x.t("destination","exist");
x.t("destination","nodeid");
x.t("destination","address");
x.t("destination","sets");
x.t("destination","function");
x.t("destination","node");
x.t("destination","information");
x.t("destination","port");
x.t("strings","displays");
x.t("strings","containing");
x.t("appftpserverinit","app_ftp.cpp");
x.t("modifying","application");
x.t("modifying","appdata");
x.t("data.seqno","clientptr-");
x.t("data.seqno","break");
x.t("data.seqno","serverptr-");
x.t("search","list");
x.t("final","step");
x.t("sprintf","create");
x.t("sprintf","buf");
x.t("4-32","recompile");
x.t("4-32","adding");
x.t("modification","made");
x.t("modification","similar");
x.t("post","processing");
x.t("gsm","networks");
x.t("gsm","global");
x.t("examine","files");
x.t("examine","code");
x.t("examine","implementation");
x.t("app_routing_static","app_myprotocol_client");
x.t("app_routing_static","app_placeholder");
x.t("fields","structure");
x.t("fields","used");
x.t("fields","fisheye");
x.t("routingstats","void");
x.t("int","type");
x.t("int","outgoinginterface");
x.t("int","networkroutingprotocoltype");
x.t("int","interfaceindex");
x.t("int","scope");
x.t("int","headersize");
x.t("int","node-");
x.t("int","payloadsize");
x.t("int","uniqueid");
x.t("int","connectionid");
x.t("sets","timer");
x.t("sets","new");
x.t("sets","destination");
x.t("sets","experiment");
x.t("sets","application");
x.t("develop","tcp-based");
x.t("develop","code");
x.t("write","initialization");
x.t("write","function");
x.t("write","client");
x.t("write","finalization");
x.t("write","protocol");
x.t("write","server");
x.t("string","passed");
x.t("string","library");
x.t("string","cbr");
x.t("string","multiple");
x.t("string","file");
x.t("string","indicating");
x.t("string","appinput");
x.t("string","qualnet");
x.t("string","myprotocol");
x.t("string","containing");
x.t("traceprotocoltype","shown");
x.t("traceprotocoltype","file");
x.t("traceprotocoltype","traceprotocol");
x.t("traceprotocoltype","qualnet_home");
x.t("traceprotocoltype","figure");
x.t("local","table");
x.t("record","number");
x.t("record","statistics");
x.t("4-33","enumeration");
x.t("4-33","adding");
x.t("network_dual","routingprotocoltype");
x.t("network_dual","continue");
x.t("network_dual","switch");
x.t("&info-","sourceaddr");
x.t("&info-","destaddr");
x.t("realistic","web");
x.t("realistic","tenet-style");
x.t("super-application","super");
x.t("addition","traffic");
x.t("service-providing","protocols");
x.t("service-providing","application");
x.t("outgoing","interface");
x.t("outgoing","packet");
x.t("contain","name");
x.t("contain","undefined");
x.t("contain","detailed");
x.t("contain","code");
x.t("contain","following");
x.t("structures","variables");
x.t("structures","provided");
x.t("structures","needed");
x.t("structures","initialization");
x.t("structures","store");
x.t("structures","application\u2019s");
x.t("structures","defined");
x.t("structures","application");
x.t("structures","note");
x.t("structures","protocol");
x.t("input","parameter");
x.t("input","files");
x.t("input","line");
x.t("input","file");
x.t("input","specified");
x.t("input","stored");
x.t("input","strings");
x.t("input","string");
x.t("input","format");
x.t("input","read");
x.t("input","appropriate");
x.t("input","application");
x.t("app_registernewapp","shown");
x.t("app_registernewapp","accepts");
x.t("app_registernewapp","4.2.7.2");
x.t("app_registernewapp","function");
x.t("app_registernewapp","node");
x.t("app_registernewapp","qualnet");
x.t("flow","traffic-generating");
x.t("receiving","packets");
x.t("understand","traffic-generating");
x.t("understand","application");
x.t("understand","protocol");
x.t("understand","server");
x.t("problems","even");
x.t("defining","data");
x.t("protocol's","initialization");
x.t("protocol's","header");
x.t("protocol's","event");
x.t("protocol's","configuration");
x.t("protocol's","finalization");
x.t("sourceaddr","short");
x.t("sourceaddr","data.sourceport");
x.t("sourceaddr","sourceaddr");
x.t("sourceaddr","numvalues");
x.t("sourceaddr","destaddr");
x.t("sourceaddr","sourcenodeid");
x.t("sourceaddr","info-");
x.t("three","pre-defined");
x.t("second","switch");
x.t("nextapp","applist-");
x.t("nextapp","switch");
x.t("nextapp","null");
x.t("/app_traffic_gen.cpp","figure");
x.t("4-34","modifying");
x.t("4-34","struct");
x.t("relative","routing");
x.t("mask","routing");
x.t("ports","almost");
x.t("(myport)","porttable");
x.t("developing","traffic-generating");
x.t("developing","protocol");
x.t("developing","adding");
x.t("dns","look-up");
x.t("umts","network");
x.t("umts","super-application");
x.t("random","distribution-based");
x.t("functions","timers");
x.t("functions","included");
x.t("functions","available");
x.t("functions","sending");
x.t("functions","source");
x.t("functions","layer");
x.t("functions","cbr");
x.t("functions","implemented");
x.t("functions","register");
x.t("functions","app_initializeapplications");
x.t("functions","support");
x.t("functions","4.2.5.6.2");
x.t("functions","apis");
x.t("functions","checks");
x.t("functions","listed");
x.t("functions","file");
x.t("functions","add");
x.t("functions","map");
x.t("functions","structures");
x.t("functions","functions");
x.t("functions","collect");
x.t("functions","io_readstring");
x.t("functions","qualnet_home");
x.t("functions","code");
x.t("functions","client");
x.t("functions","override");
x.t("functions","header");
x.t("functions","read");
x.t("functions","belonging");
x.t("functions","defined");
x.t("functions","4.2.5.5.3");
x.t("functions","application");
x.t("functions","appcbrservergetcbrserver");
x.t("functions","called");
x.t("functions","protocol");
x.t("functions","appcbrclientinit");
x.t("functions","contained");
x.t("functions","turn");
x.t("functions","used");
x.t("functions","manage");
x.t("functions","performed");
x.t("functions","therefore");
x.t("functions","including");
x.t("functions","insert");
x.t("functions","4.2.5.8.2");
x.t("functions","specify");
x.t("porttable","void");
x.t("porttable","nextportnum");
x.t("porttable","pointer");
x.t("app_tcpserverlisten","function");
x.t("app_tcpserverlisten","node");
x.t("request","open");
x.t("request","accepted");
x.t("accepted","rejected");
x.t("unexpected","problems");
x.t("store","user-specified");
x.t("store","source");
x.t("store","user");
x.t("store","state");
x.t("store","size");
x.t("store","configuration");
x.t("store","information");
x.t("store","appropriate");
x.t("store","protocol");
x.t("store","following");
x.t("successive","items");
x.t("lastly","cbr");
x.t("retrieves","state");
x.t("begin","sending");
x.t("4-35","typedef");
x.t("4-35","adding");
x.t("transport_layer","transportprotocol_udp");
x.t("overloaded","functions");
x.t("/include/main.h","stands");
x.t("configured","record");
x.t("configured","simulate");
x.t("voice","traffic");
x.t("igrp","interior");
x.t("exteriorgatewayprotocol","bool");
x.t("collect","report");
x.t("collect","statistics");
x.t("strongly","recommended");
x.t("error","message");
x.t("error","[max_string_length]");
x.t("error","adding");
x.t("sessionlastsent","clocktype");
x.t("itemsize","clocktype");
x.t("itemsize","short");
x.t("itemsize","sizeof");
x.t("itemsize","interval");
x.t("maxendtoenddelay","clocktype");
x.t("pause","time");
x.t("sccanf","appinput.inputstrings");
x.t("clientaddr","address");
x.t("clientaddr","serveraddr");
x.t("separately","server");
x.t("msg_app_myprotocol_newevent1","msg_app_myprotocol_newevent2");
x.t("undefined","event");
x.t("calculate","throughput");
x.t("networkroutingprotocoltype","shown");
x.t("networkroutingprotocoltype","type");
x.t("networkroutingprotocoltype","routingprotocoltype");
x.t("networkroutingprotocoltype","figure");
x.t("networkroutingprotocoltype","defined");
x.t("4-36","add");
x.t("4-36","declaring");
x.t("io_readstring","functions");
x.t("io_readstring","reads");
x.t("io_readstring","node-");
x.t("io_readstring","read");
x.t("io_readstring","defined");
x.t("point","data");
x.t("ip-","interfaceinfo");
x.t("simulates","telephony");
x.t("simulates","phone");
x.t("bgpv4","border");
x.t("next","available");
x.t("next","periodic");
x.t("next","app");
x.t("next","step");
x.t("next","generation");
x.t("next","port");
x.t("/app_util.h","file");
x.t("keeping","naming");
x.t("respectively","4.2.5.6.1");
x.t("respectively","functions");
x.t("respectively","event");
x.t("respectively","additional");
x.t("respectively","figure");
x.t("respectively","finalization");
x.t("occurs","parameters");
x.t("occurs","first");
x.t("occurs","layers");
x.t("hold","information");
x.t("hold","protocol");
x.t("supposed","begin");
x.t("(apptimer)","timer");
x.t("delay","traceprotocoltype");
x.t("delay","app_settimer");
x.t("delay","figure");
x.t("routingbellmanfordlayer","implemented");
x.t("routingbellmanfordlayer","node");
x.t("msg_app_myprotocol_newevent2","msg_default");
x.t("client\u2019s","statistics");
x.t("explanation","parameters");
x.t("4-37","shows");
x.t("4-37","initializing");
x.t("4-37","networkipaddunicastroutingprotocoltype");
x.t("4-37","figure");
x.t("fisheyedata","value");
x.t("fisheyedata","fisheye");
x.t("know","it's");
x.t("know","server\u2019s");
x.t("transportprotocol_udp","msg_transport_fromappsend");
x.t("acndata.actioncomment","no_comment");
x.t("telnet","telnet");
x.t("telnet","others");
x.t("telnet","application");
x.t("cellular","http");
x.t("cellular","ftp");
x.t("cellular","models");
x.t("cellular","application");
x.t("mcbr","multicast");
x.t("olsr-inria","optimized");
x.t("messages","directly");
x.t("messages","contain");
x.t("messages","broadcasting");
x.t("messages","message");
x.t("messages","protocol");
x.t("messages","sent");
x.t("appdetail","cbrclient-");
x.t("appdetail","node-");
x.t("appdetail","statistics");
x.t("collection","create");
x.t("collection","variables");
x.t("collection","enabled");
x.t("collection","protocol");
x.t("means","messages");
x.t("appears","names");
x.t("first","handled");
x.t("first","thing");
x.t("first","determines");
x.t("first","step");
x.t("first","switch");
x.t("first","word");
x.t("first","two");
x.t("first","packet");
x.t("clearly","indicates");
x.t("struct_app_cbr_data","short");
x.t("protocol-name","param1");
x.t("protocol-name","unique");
x.t("start_time","transmission");
x.t("100s","decide");
x.t("split","input");
x.t("/include/clock.h","followed");
x.t("/include/clock.h","converts");
x.t("msg_app_timerexpired","message_infoalloc");
x.t("msg_app_timerexpired","apptimer");
x.t("msg_app_timerexpired","commonly");
x.t("protocoltype","app_getprotocoltype");
x.t("protocoltype","protocoltype");
x.t("affects","calculation");
x.t("space","lower");
x.t("life","cycle");
x.t("executing","following");
x.t("developer_srcs","(developer_srcdir)");
x.t("mostly","application");
x.t("4-38","shows");
x.t("4-38","initialization");
x.t("4-38","respectively");
x.t("4-38","calling");
x.t("4-38","applications");
x.t("&retval","protocolstring");
x.t("addroute","bellmanford");
x.t("select","application-layer");
x.t("appdata.routingstats","true");
x.t("issues","application");
x.t("accept","apptype");
x.t("accept","desired");
x.t("(apptoudpsend)","info");
x.t("localport","nodeaddress");
x.t("number","available");
x.t("number","parameter");
x.t("number","shown");
x.t("number","every");
x.t("number","required");
x.t("number","packets");
x.t("number","time");
x.t("number","apis");
x.t("number","items");
x.t("number","assignment");
x.t("number","traffic-generating");
x.t("number","bytes");
x.t("number","destination");
x.t("number","app_routing_static");
x.t("number","(myport)");
x.t("number","may");
x.t("number","section");
x.t("number","client");
x.t("number","bool");
x.t("number","nextportnum");
x.t("number","value");
x.t("number","free");
x.t("number","pointers");
x.t("number","sequence");
x.t("number","data");
x.t("number","received");
x.t("number","application");
x.t("number","appcbrservergetcbrserver");
x.t("number","port");
x.t("number","above");
x.t("number","done");
x.t("number","real");
x.t("number","order");
x.t("number","returns");
x.t("number","associated");
x.t("number","buffer");
x.t("number","server");
x.t("others","used");
x.t("control","packets");
x.t("control","traffic");
x.t("communications","(gsm)");
x.t("(olsr)","protocol");
x.t("(olsrv2)","protocol");
x.t("briefly","examine");
x.t("communicate","different");
x.t("communicate","transport");
x.t("communicate","layers");
x.t("communicate","application");
x.t("processing","scripts");
x.t("processing","received");
x.t("processing","finalization");
x.t("routingvar","void");
x.t("routingvar","bellmanford");
x.t("meant","nodeaddress");
x.t("meant","simulator");
x.t("meant","sourceport");
x.t("meant","unsigned");
x.t("notify","application");
x.t("gui","new");
x.t("gui","during");
x.t("gui","settings");
x.t("gui","modify");
x.t("struct_app_cbr_server_str","address");
x.t("/scenarios/default/default.app","following");
x.t("initializes","timers");
x.t("initializes","instance");
x.t("initializes","application");
x.t("initializes","routing");
x.t("initializes","protocol");
x.t("initializes","statistics");
x.t("&destnodeid","&destaddr");
x.t("(timermsg)","timer-");
x.t("10000","figure");
x.t("(short)","apptype");
x.t("(short)","clientptr-");
x.t("buf","throughput");
x.t("buf","total");
x.t("buf","sprintf");
x.t("buf","[max_string_length]");
x.t("buf","figure");
x.t("buf","wasfound");
x.t("viewing","dynamic");
x.t("routing_admin_distance_ebgpv4","routing_admin_distance_olsr");
x.t("networkdataip","networkdataip");
x.t("networkdataip","node-");
x.t("4-39","refer");
x.t("4-39","creating");
x.t("parameter.intraupdateinterval","fisheye_intra_update_interval");
x.t("parameter.intraupdateinterval","time_converttoclock");
x.t("broadcasting","packets");
x.t("broadcasting","routing");
x.t("interfaceindex","bellmanford");
x.t("traceprotocol","message");
x.t("traceprotocol","memcpy");
x.t("traceprotocol","allocates");
x.t("app_inserinporttable","node");
x.t("networkipgetinterfacebroadcastaddress","node");
x.t("networkipgetinterfacebroadcastaddress","defined");
x.t("networkipgetinterfacebroadcastaddress","used");
x.t("2012","scalable");
x.t("topmost","layer");
x.t("vbr","variable");
x.t("function","applayercbrclient");
x.t("function","udp-based");
x.t("function","app_processevent");
x.t("function","applayermyprotocolserver");
x.t("function","appftpclientinit");
x.t("function","appcbrclientschedulenextpkt");
x.t("function","appmyprotocolserverfinalize");
x.t("function","within");
x.t("function","inserts");
x.t("function","app_successfullyhandledloopback");
x.t("function","create");
x.t("function","description");
x.t("function","appcbrclientgetcbrclient");
x.t("function","performs");
x.t("function","responsible");
x.t("function","networkroutinggetadmindistance");
x.t("function","cbr");
x.t("function","creates");
x.t("function","app_getprotocoltype");
x.t("function","implemented");
x.t("function","routingmyprotocolinit");
x.t("function","app_initializeapplications");
x.t("function","partition_initializenodes");
x.t("function","appmyprotocolserverinit");
x.t("function","io_appparsesourceanddeststrings");
x.t("function","removes");
x.t("function","updates");
x.t("function","appcbrserverinit");
x.t("function","initialization");
x.t("function","io_printstat");
x.t("function","add");
x.t("function","appcbrserverprintstats");
x.t("function","traffic-generating");
x.t("function","handle");
x.t("function","sendrouteadvertisement");
x.t("function","appcbrserverfinalize");
x.t("function","routingfisheyeinit");
x.t("function","enables");
x.t("function","routingbellmanfordinit");
x.t("function","applayercbrserver");
x.t("function","sends");
x.t("function","routingmyprotocollayer");
x.t("function","appftpserverinit");
x.t("function","sprintf");
x.t("function","sets");
x.t("function","write");
x.t("function","app_registernewapp");
x.t("function","protocol's");
x.t("function","io_readstring");
x.t("function","next");
x.t("function","messages");
x.t("function","mostly");
x.t("function","initializes");
x.t("function","networkipgetinterfacebroadcastaddress");
x.t("function","function");
x.t("function","receive");
x.t("function","may");
x.t("function","step");
x.t("function","opens");
x.t("function","closes");
x.t("function","section");
x.t("function","client");
x.t("function","enable");
x.t("function","given");
x.t("function","applayermyprotocolclient");
x.t("function","qualnet");
x.t("function","message_addvirtualpayload");
x.t("function","appmyprotocolclientfinalize");
x.t("function","networkipaddunicastroutingprotocoltype");
x.t("function","include");
x.t("function","message_returnpacket");
x.t("function","app_settimer");
x.t("function","networkipparseandsetroutingprotocoltype");
x.t("function","app_udpsendnewdatawithpriority");
x.t("function","figure");
x.t("function","sscanf");
x.t("function","networkipgetinterfaceaddress");
x.t("function","mapping_getnodeptrfromhash");
x.t("function","appcbrservernewcbrserver");
x.t("function","(s)");
x.t("function","myprotocol");
x.t("function","printstats");
x.t("function","node_processevent");
x.t("function","app_initialize");
x.t("function","defined");
x.t("function","networkipinit");
x.t("function","allocates");
x.t("function","application");
x.t("function","appmyprotocolclientinit");
x.t("function","routing");
x.t("function","finalization");
x.t("function","print");
x.t("function","appcbrservergetcbrserver");
x.t("function","called");
x.t("function","protocol");
x.t("function","app_finalize");
x.t("function","appcbrclientinit");
x.t("function","bellman-ford");
x.t("function","call");
x.t("function","message_free");
x.t("function","returns");
x.t("function","message_returnpacketsize");
x.t("function","partition_finalize");
x.t("function","4.2.6.6.2");
x.t("function","app_udpsendnewheadervirtualdatawithpriority");
x.t("function","appcbrclientfinalize");
x.t("function","time_converttoclock");
x.t("function","mem_malloc");
x.t("function","routingmyprotocolfinalize");
x.t("function","update");
x.t("function","appcbrclientnewcbrclient");
x.t("comments","functions");
x.t("application.h","complete");
x.t("application.h","typedef");
x.t("app_telnet_server","app_telnet_client");
x.t("app_telnet_server","app_myprotocol");
x.t("indicating","layer");
x.t("indicating","whether");
x.t("indicating","reception");
x.t("indicating","protocol");
x.t("user_models","library");
x.t("user_models","subdirectory");
x.t("user_models","section");
x.t("user_models","follow");
x.t("determining","protocol");
x.t("commonly","performs");
x.t("commonly","needed");
x.t("commonly","specified");
x.t("commonly","performed");
x.t("clientptr-","seqno");
x.t("clientptr-","localaddr");
x.t("clientptr-","tos");
x.t("clientptr-","itemsize");
x.t("clientptr-","sourceport");
x.t("clientptr-","remoteaddr");
x.t("implements","switch");
x.t("implements","application");
x.t("design","msg_special_timer");
x.t("reporting","statistics");
x.t("addon","example");
x.t("addon","add");
x.t("olsr2","void");
x.t("fisheye-inter-update-interval","&wasfound");
x.t("fisheye-inter-update-interval","15s");
x.t("fisheye-neighbor-timeout-interval","15s");
x.t("4.2.1","application");
x.t("different","components");
x.t("different","certain");
x.t("different","traffic");
x.t("different","steps");
x.t("different","layers");
x.t("different","data");
x.t("different","routing");
x.t("different","port");
x.t("(ftp)","tcplib");
x.t("distributions","qos");
x.t("may","lead");
x.t("may","protocol-specific");
x.t("may","reside");
x.t("may","need");
x.t("may","apptype");
x.t("may","contain");
x.t("may","number");
x.t("may","receive");
x.t("may","different");
x.t("may","include");
x.t("may","send");
x.t("may","agreed");
x.t("may","run");
x.t("convergence","multimedia");
x.t("receive","events");
x.t("receive","process");
x.t("receive","data");
x.t("whether","specified");
x.t("whether","application");
x.t("whether","statistics");
x.t("combination","identify");
x.t("define","data");
x.t("define","appropriate");
x.t("4.2.5.7.1","initialize");
x.t("4.2.5.7.1","define");
x.t("4.2.5.7.1","declaring");
x.t("trace_ip","trace_cbr");
x.t("unique","identifier");
x.t("unique","port");
x.t("specifies","node");
x.t("reads","user's");
x.t("reads","name");
x.t("reads","configuration");
x.t("words","constitute");
x.t("msg_special_timer","message");
x.t("inter-packet","interval");
x.t("processes","packet");
x.t("cbrserver-","totalendtoenddelay");
x.t("cbrserver-","numpktsrecvd");
x.t("cbrserver-","numbytesrecvd");
x.t("(retval)","else");
x.t("user-defined","configuration");
x.t("(type)","case");
x.t("msg_app_checkroutetimeoutalarm","handlecheckroutetimeoutalarm");
x.t("msg_app_checkroutetimeoutalarm","msg_app_triggeredupdatealarm");
x.t("particular","destination");
x.t("detailed","description");
x.t("detailed","traces");
x.t("detailed","comments");
x.t("4.2.2","application");
x.t("app_cbr.cpp","implement");
x.t("app_cbr.cpp","snippets");
x.t("app_cbr.cpp","void");
x.t("app_cbr.cpp","function");
x.t("app_cbr.cpp","folder");
x.t("app_cbr.cpp","app_cbr.h");
x.t("app_cbr.cpp","event");
x.t("/main/application.cpp","file");
x.t("/main/application.cpp","contains");
x.t("stores","user");
x.t("stores","timer");
x.t("stores","state");
x.t("stores","default");
x.t("stores","next");
x.t("stores","information");
x.t("stores","application");
x.t("appstats","flag");
x.t("appstats","whether");
x.t("destined","app_processevent");
x.t("destined","applayercbrserver");
x.t("destined","app_registernewapp");
x.t("destined","application");
x.t("4.2.5.7.2","initializing");
x.t("4.2.5.7.2","update");
x.t("step","creating");
x.t("step","integrating");
x.t("step","similar");
x.t("step","read");
x.t("step","adding");
x.t("step","towards");
x.t("application\u2019s","client");
x.t("application\u2019s","configuration");
x.t("starting","application");
x.t("starting","protocol");
x.t("starting","simulation");
x.t("3.4.1","node");
x.t("\u00f0/include/fileio.h","function");
x.t("message_returninfo","(msg)");
x.t("message_returninfo","(timermsg)");
x.t("instead","layer-specific");
x.t("instead","code");
x.t("msg-","eventtype");
x.t("report","statistics");
x.t("/app_myprotocol.cpp","(developer_srcdir)");
x.t("index","instance");
x.t("index","parameter-value");
x.t("designers","free");
x.t("looping","interfaces");
x.t("almost","always");
x.t("section","4.2.6.2");
x.t("section","illustrate");
x.t("section","udp-based");
x.t("section","4.2.6.3");
x.t("section","4.2.6.5");
x.t("section","describes");
x.t("section","4.2.6.4.1");
x.t("section","4.2.5.6.1");
x.t("section","4.2.6.4.2");
x.t("section","4.2.5.6.2");
x.t("section","4.2.6.4.3");
x.t("section","4.2.5.6.3");
x.t("section","explains");
x.t("section","4.2.4.1");
x.t("section","4.2.4.2");
x.t("section","4.2.4.3");
x.t("section","4.2.5.5.3.1");
x.t("section","4.2.5.5.3.2");
x.t("section","4.2.5.5.3.3");
x.t("section","requires");
x.t("section","discusses");
x.t("section","5.2.3");
x.t("section","4.4.3");
x.t("section","4.2.7.1");
x.t("section","provides");
x.t("section","briefly");
x.t("section","4.2.5.7.1");
x.t("section","4.2.5.7.2");
x.t("section","3.4.1");
x.t("section","4.2.5.7.3");
x.t("section","4.2.3");
x.t("section","3.4.2");
x.t("section","4.2.5.7.4");
x.t("section","4.2.5.1");
x.t("section","3.4.3");
x.t("section","4.2.5.2");
x.t("section","4.2.5.7.5");
x.t("section","4.10");
x.t("section","4.2.5");
x.t("section","4.2.5.3");
x.t("section","4.2.5.4");
x.t("section","ftp");
x.t("section","4.10.5");
x.t("section","4.2.6.4.3.1");
x.t("section","3.3.1.2");
x.t("section","4.2.6.4.3.2");
x.t("section","4.2.6.4.3.3");
x.t("section","4.2.5.7");
x.t("section","4.2.6.8.1");
x.t("section","gives");
x.t("section","4.2.5.9");
x.t("section","4.2.5.10");
x.t("section","4.2.6.8.2");
x.t("section","4.2.5.5.1");
x.t("section","4.2.5.5.2");
x.t("section","4.2.5.5.3");
x.t("section","4.2.6.6.1");
x.t("section","4.2.5.8.1");
x.t("section","4.2.6.6.2");
x.t("section","4.2.5.8.2");
x.t("section","describe");
x.t("section","4.2.5.8.3");
x.t("section","5.1.4");
x.t("section","4.2.6.1");
x.t("hypertext","transfer");
x.t("transport","layer");
x.t("4.2.3","example");
x.t("4.2.3","api");
x.t("4.2.3","traffic-generating");
x.t("4.2.3","apptimer");
x.t("4.2.3","routingbellmanfordinit");
x.t("4.2.3","app_registernewapp");
x.t("4.2.3","include");
x.t("4.2.3","application");
x.t("typedef","enum");
x.t("typedef","struct");
x.t("types","included");
x.t("types","always");
x.t("types","events");
x.t("types","channel");
x.t("types","name");
x.t("types","added");
x.t("types","exchanged");
x.t("types","application");
x.t("types","port");
x.t("types","protocol");
x.t("types","used");
x.t("types","struct");
x.t("opens","tcp");
x.t("closes","tcp");
x.t("internal","design");
x.t("internal","application");
x.t("format","cbr");
x.t("format","protocol-specific");
x.t("format","initialize");
x.t("format","format");
x.t("format","myprotocol");
x.t("format","specifying");
x.t("format","application");
x.t("format","routing");
x.t("4.2.5.7.3","updating");
x.t("4.2.5.7.3","write");
x.t("compile","section");
x.t("compile","created");
x.t("directory","qualnet_home");
x.t("handling","packet");
x.t("trace_cbr","trace_ftp");
x.t("trace_cbr","default");
x.t("appdatacbrserver","serverptr");
x.t("appdatacbrserver","appinfo-");
x.t("appdatacbrserver","mem_alloc");
x.t("appdatacbrserver","code");
x.t("appdatacbrserver","4.2.5.5");
x.t("appdatacbrserver","appcbrservernewcbrserver");
x.t("appdatacbrserver","data");
x.t("appdatacbrserver","defined");
x.t("appdatacbrserver","cbrserver");
x.t("keyword","used");
x.t("match","occurs");
x.t("match","returns");
x.t("implementing","client");
x.t("implementing","event");
x.t("implementing","routing");
x.t("implementing","protocol");
x.t("implementing","server");
x.t("3.4.2","event");
x.t("declaring","new");
x.t("declaring","initializing");
x.t("declaring","administrative");
x.t("declaring","statistics");
x.t("changes","common");
x.t("15s","fisheye-neighbor-timeout-interval");
x.t("15s","configuration");
x.t("reception","routing");
x.t("msg_transport_fromappsend","message_packetalloc");
x.t("node","network_ipv4");
x.t("node","routeadvertisementtype");
x.t("node","else");
x.t("node","simultaneously");
x.t("node","interfacetype");
x.t("node","sending");
x.t("node","instance");
x.t("node","subnetmask");
x.t("node","firstnode");
x.t("node","field");
x.t("node","nodeaddress");
x.t("node","uses");
x.t("node","timer");
x.t("node","travels");
x.t("node","serverptr");
x.t("node","multiple");
x.t("node","app_cbr_server");
x.t("node","new");
x.t("node","bellmanford");
x.t("node","destaddress");
x.t("node","rowptr-");
x.t("node","initialization");
x.t("node","short");
x.t("node","appinput.inputstrings");
x.t("node","clientptr");
x.t("node","initialized");
x.t("node","apptype");
x.t("node","routingprotocoltype");
x.t("node","writing");
x.t("node","apptimer");
x.t("node","identifiers");
x.t("node","const");
x.t("node","parameters");
x.t("node","appinfo");
x.t("node","applist");
x.t("node","address");
x.t("node","destination");
x.t("node","network_dual");
x.t("node","int");
x.t("node","sourceaddr");
x.t("node","transport_layer");
x.t("node","clientaddr");
x.t("node","networkroutingprotocoltype");
x.t("node","networkdataip");
x.t("node","reporting");
x.t("node","instead");
x.t("node","typedef");
x.t("node","appdatacbrserver");
x.t("node","important");
x.t("node","node");
x.t("node","identifier");
x.t("node","ids");
x.t("node","level");
x.t("node","message");
x.t("node","wiredlink");
x.t("node","qualnet");
x.t("node","null");
x.t("node","msg");
x.t("node","send");
x.t("node","figure");
x.t("node","mapping_getnodeptrfromhash");
x.t("node","timermsg");
x.t("node","app_layer");
x.t("node","application");
x.t("node","finalization");
x.t("node","structure");
x.t("node","app_cbr_client");
x.t("node","done");
x.t("node","based");
x.t("node","pointer");
x.t("node","break");
x.t("node","timer-");
x.t("node","nodeinput");
x.t("node","returns");
x.t("node","maintains");
x.t("node","therefore");
x.t("node","4.2.5.8.1");
x.t("node","info-");
x.t("node","unsigned");
x.t("node","even");
x.t("grouped","following");
x.t("ftp/generic","generic");
x.t("qualnet_home","/libraries");
x.t("qualnet_home","/libraries/wireless/src");
x.t("qualnet_home","/main/partition.cpp");
x.t("qualnet_home","/include/application.h");
x.t("qualnet_home","/main/app_util.cpp");
x.t("qualnet_home","/scenarios/default/default.config");
x.t("qualnet_home","/include/mapping.h");
x.t("qualnet_home","/include/partition.h");
x.t("qualnet_home","/libraries/developer/makefile-common");
x.t("qualnet_home","/include");
x.t("qualnet_home","/include/network.h");
x.t("qualnet_home","/libraries/user_models");
x.t("qualnet_home","/include/main.h");
x.t("qualnet_home","/include/clock.h");
x.t("qualnet_home","/scenarios/default/default.app");
x.t("qualnet_home","/main/application.cpp");
x.t("qualnet_home","/libraries/user_models/src");
x.t("qualnet_home","/include/api.h");
x.t("qualnet_home","/include/app_util.h");
x.t("qualnet_home","/main/node.cpp");
x.t("qualnet_home","/include/trace.h");
x.t("qualnet_home","/include/fileio.h");
x.t("qualnet_home","/libraries/developer/src");
x.t("qualnet_home","/libraries/developer/src/network_ip.cpp");
x.t("qualnet_home","/libraries/developer/src/app_ftp.cpp");
x.t("important","routing_admin_distance_default");
x.t("important","however");
x.t("important","fields");
x.t("important","affects");
x.t("important","organize");
x.t("important","free");
x.t("important","simulation");
x.t("important","therefore");
x.t("4.2.4","application");
x.t("rejected","msg_app_fromtransdatasent");
x.t("4.2.5.7.4","printing");
x.t("4.2.5.7.4","add");
x.t("4.2.5.7.4","finalization");
x.t("4.2.5.1","header");
x.t("4.2.5.1","naming");
x.t("added","needs");
x.t("added","void");
x.t("added","apptype");
x.t("added","added");
x.t("added","qualnet");
x.t("added","msg_default");
x.t("added","application");
x.t("added","app_finalize");
x.t("numpktsrecvd","clocktype");
x.t("numpktsrecvd","io_printstat");
x.t("numpktsrecvd","cbrserver-");
x.t("numpktsrecvd","variable");
x.t("transmission","time");
x.t("transmission","start");
x.t("transmission","successive");
x.t("transmission","end");
x.t("calling","cbr");
x.t("calling","initialization");
x.t("calling","function");
x.t("calling","client");
x.t("calling","qualnet");
x.t("calling","myprotocol");
x.t("calling","routing");
x.t("calling","finalization");
x.t("calling","protocol");
x.t("starttimestr","endtimestr");
x.t("cbrclient","appdatacbrclient");
x.t("cbrclient","applist");
x.t("cbrclient","cbrclient");
x.t("cbrclient","sizeof");
x.t("cbrclient","return");
x.t("cbrclient","figure");
x.t("assigned","next");
x.t("assigned","nextportnum");
x.t("assigned","value");
x.t("assigned","routing");
x.t("assigned","application");
x.t("purpose","timer");
x.t("self","specified");
x.t("informs","appropriate");
x.t("switch","statement");
x.t("switch","applist-");
x.t("switch","(protocoltype)");
x.t("switch","ip-");
x.t("switch","(type)");
x.t("switch","msg-");
x.t("switch","calling");
x.t("switch","message");
x.t("switch","value");
x.t("switch","(routingprotocoltype)");
x.t("switch","timer-");
x.t("works","examine");
x.t("works","message");
x.t("3.4.3","finalization");
x.t("scope","io_readstring");
x.t("initial","values");
x.t("client","udp-based");
x.t("client","appmyprotocolserverfinalize");
x.t("client","needs");
x.t("client","appcbrclientgetcbrclient");
x.t("client","instance");
x.t("client","discussed");
x.t("client","serverptr");
x.t("client","node's");
x.t("client","servers");
x.t("client","start");
x.t("client","initialization");
x.t("client","determines");
x.t("client","tcp");
x.t("client","tcp-based");
x.t("client","dispatcher");
x.t("client","sends");
x.t("client","functions");
x.t("client","know");
x.t("client","function");
x.t("client","processes");
x.t("client","section");
x.t("client","event");
x.t("client","appmyprotocolclientfinalize");
x.t("client","send");
x.t("client","figure");
x.t("client","information");
x.t("client","finalization");
x.t("client","application");
x.t("client","virtualpayloadsize");
x.t("client","port");
x.t("client","protocol");
x.t("client","appcbrclientinit");
x.t("client","created");
x.t("client","statistics");
x.t("client","app_myprotocol_sever");
x.t("client","generates");
x.t("client","server");
x.t("end","lists");
x.t("end","time");
x.t("end","users");
x.t("end","simulation");
x.t("traffic-trace","trace");
x.t("(aodv)","dynamic");
x.t("code","app_processevent");
x.t("code","files");
x.t("code","needs");
x.t("code","various");
x.t("code","components");
x.t("code","snippets");
x.t("code","cbr");
x.t("code","initialization");
x.t("code","handle");
x.t("code","directly");
x.t("code","snippet");
x.t("code","function");
x.t("code","added");
x.t("code","calling");
x.t("code","fragment");
x.t("code","figure");
x.t("code","application");
x.t("code","routing");
x.t("code","executes");
x.t("code","server");
x.t("reference","guide");
x.t("4.2.5","provides");
x.t("4.2.5","steps");
x.t("4.2.5","adding");
x.t("steps","writing");
x.t("steps","developing");
x.t("steps","different");
x.t("steps","implementing");
x.t("steps","similar");
x.t("steps","described");
x.t("4.2.5.2","creating");
x.t("4.2.5.2","include");
x.t("4.2.5.2","modify");
x.t("4.2.5.7.5","function");
x.t("4.2.5.7.5","call");
x.t("4.2.5.7.5","adding");
x.t("4.10","instructions");
x.t("organize","code");
x.t("identifier","instance");
x.t("identifier","parameter-name");
x.t("identifier","address");
x.t("identifier","node");
x.t("identifier","qualnet");
x.t("identifier","port");
x.t("identifier","protocol");
x.t("identifier","subnet");
x.t("task","initialization");
x.t("task","executing");
x.t("task","calling");
x.t("memset","cbrclient");
x.t("enable","overriding");
x.t("enable","client");
x.t("enable","protocol");
x.t("enable","statistics");
x.t("(error)","message_free");
x.t("correspond","actual");
x.t("/adaptation_aal5.cpp","(developer_srcdir)");
x.t("follow","instructions");
x.t("parameter-value","identifier");
x.t("parameter-value","value");
x.t("connected","networks");
x.t("invalid","switch");
x.t("abstract","cellular");
x.t("abstract","model");
x.t("ids","addresses");
x.t("folder","libraries");
x.t("folder","qualnet_home");
x.t("folder","contains");
x.t("appnext","applist-");
x.t("appnext","link");
x.t("appnext","figure");
x.t("nextportnum","fields");
x.t("nextportnum","next");
x.t("nextportnum","client");
x.t("nextportnum","incremented");
x.t("nextportnum","data");
x.t("nextportnum","port");
x.t("bool","retval");
x.t("bool","sessionisclosed");
x.t("bool","routingstats");
x.t("bool","appstats");
x.t("bool","isrsvpteenabled");
x.t("bool","wasfound");
x.t("bool","app_isfreeport");
x.t("app_util.h","file");
x.t("app_util.h","qualnet_home");
x.t("4.2.5.3","define");
x.t("4.2.5.3","except");
x.t("4.2.5.3","including");
x.t("level","initialization");
x.t("level","dispatcher");
x.t("level","functions");
x.t("thus","routingbellmanfordinit");
x.t("thus","occurs");
x.t("numvalues","sscanf");
x.t("(endtimestr)","appcbrclientinit");
x.t("sizeof","(appdatacbrserver)");
x.t("sizeof","(appdatacbrclient)");
x.t("sizeof","(bellmanford)");
x.t("sizeof","(apptimer)");
x.t("sizeof","(apptoudpsend)");
x.t("sizeof","(data)");
x.t("return","protocol\u2019s");
x.t("return","routing_admin_distance_myprotocol");
x.t("return","cbrclient");
x.t("return","null");
x.t("return","routing_admin_distance_bellmanford");
x.t("return","routing_admin_distance_static");
x.t("statistic","variables");
x.t("statistic","name");
x.t("statistic","collection");
x.t("statistic","value");
x.t("hierarchically","node");
x.t("4.2.6","adding");
x.t("adds","new");
x.t("override","default");
x.t("override","assignment");
x.t("headersize","int");
x.t("request-response","type");
x.t("header","files");
x.t("header","source");
x.t("header","file");
x.t("header","stored");
x.t("header","virtual");
x.t("header","int");
x.t("header","information");
x.t("header","used");
x.t("app_cbr.h","source");
x.t("app_cbr.h","includes");
x.t("app_cbr.h","app_cbr.cpp");
x.t("app_cbr.h","folder");
x.t("app_cbr.h","used");
x.t("message","source");
x.t("message","handled");
x.t("message","type");
x.t("message","calls");
x.t("message","however");
x.t("message","apis");
x.t("message","info");
x.t("message","processed");
x.t("message","processing");
x.t("message","function");
x.t("message","destined");
x.t("message","types");
x.t("message","calling");
x.t("message","4.2.5.7.4");
x.t("message","event");
x.t("message","msg");
x.t("message","free");
x.t("message","timermsg");
x.t("message","data");
x.t("message","error_reporterror");
x.t("message","done");
x.t("message","difference");
x.t("throughout","section");
x.t("4.2.5.4","example");
x.t("4.2.5.4","create");
x.t("4.2.5.4","void");
x.t("4.2.5.4","decide");
x.t("4.2.5.4","defining");
x.t("given","name");
x.t("given","section");
x.t("given","routing");
x.t("applayermyprotocolclient","applayermyprotocolserver");
x.t("applayermyprotocolclient","node");
x.t("applayermyprotocolclient","server");
x.t("operating","protocol");
x.t("d_clocktype","interval");
x.t("item_size","size");
x.t("item_size","interval");
x.t("100","msg_prop_signalend");
x.t("100","simulation");
x.t("appinput","app_initializeapplications");
x.t("appinput","char");
x.t("appinput","first");
x.t("[max_string_length]","nodeaddress");
x.t("[max_string_length]","sprintf");
x.t("[max_string_length]","int");
x.t("[max_string_length]","appdatacbrserver");
x.t("[max_string_length]","bool");
x.t("[max_string_length]","appinput.numlines");
x.t("strcmp","protocolstring");
x.t("strcmp","appstr");
x.t("memory","tables");
x.t("memory","cbr");
x.t("memory","state");
x.t("memory","message");
x.t("memory","event");
x.t("memory","data");
x.t("memory","bellman-ford");
x.t("memory","associated");
x.t("lower","layers");
x.t("lower","administrative");
x.t("least","important");
x.t("square","brackets");
x.t("wiredlink","interface");
x.t("4.2.7","special");
x.t("known","ports");
x.t("known","port");
x.t("qualnet","protocols");
x.t("qualnet","library");
x.t("qualnet","hints");
x.t("qualnet","just");
x.t("qualnet","needs");
x.t("qualnet","lists");
x.t("qualnet","table");
x.t("qualnet","describes");
x.t("qualnet","tree");
x.t("qualnet","source");
x.t("qualnet","cbr");
x.t("qualnet","routingmyprotocolinit");
x.t("qualnet","look");
x.t("qualnet","clocktype");
x.t("qualnet","file");
x.t("qualnet","add");
x.t("qualnet","traffic");
x.t("qualnet","component");
x.t("qualnet","provides");
x.t("qualnet","gui");
x.t("qualnet","4.2.1");
x.t("qualnet","grouped");
x.t("qualnet","steps");
x.t("qualnet","qualnet");
x.t("qualnet","4.2");
x.t("qualnet","configuration");
x.t("qualnet","hosts");
x.t("qualnet","4.2.5.10");
x.t("qualnet","implementation");
x.t("qualnet","making");
x.t("qualnet","configure");
x.t("qualnet","routing");
x.t("qualnet","application");
x.t("qualnet","choose");
x.t("qualnet","corresponding");
x.t("qualnet","modify");
x.t("qualnet","maintains");
x.t("qualnet","user\u2019s");
x.t("ftp","example");
x.t("ftp","require");
x.t("ftp","file");
x.t("ftp","telnet");
x.t("ftp","function");
x.t("ftp","match");
x.t("ftp","implementation");
x.t("ftp","transfer");
x.t("ftp","model");
x.t("infuse","traffic");
x.t("historical","trace");
x.t("historical","data");
x.t("randomly","generated");
x.t("multicast","constant");
x.t("variable","always");
x.t("variable","list");
x.t("variable","record");
x.t("variable","store");
x.t("variable","retrieves");
x.t("variable","4.2.5.7.2");
x.t("variable","assigned");
x.t("variable","compared");
x.t("variable","bit");
x.t("variable","called");
x.t("variable","used");
x.t("e.g","notify");
x.t("e.g","folder");
x.t("e.g","allocate");
x.t("e.g","implementation");
x.t("e.g","update");
x.t("sourceport","nodeaddress");
x.t("sourceport","clocktype");
x.t("sourceport","appdatacbrclient");
x.t("sourceport","char");
x.t("sourceport","session");
x.t("sourceport","appinfo");
x.t("sourceport","buf");
x.t("sourceport","clientptr-");
x.t("sourceport","appdatacbrserver");
x.t("sourceport","switch");
x.t("sourceport","return");
x.t("sourceport","sourceport");
x.t("sourceport","node-");
x.t("sourceport","setipv4addressinfo");
x.t("sourceport","data.txtime");
x.t("sourceport","int32");
x.t("sourceport","port");
x.t("sourceport","timer-");
x.t("event","dispatchers");
x.t("event","cbr");
x.t("event","msg_app_fromtransport");
x.t("event","type");
x.t("event","dispatcher");
x.t("event","occurs");
x.t("event","processing");
x.t("event","types");
x.t("event","application");
x.t("event","done");
x.t("appmyprotocolclientfinalize","appmyprotocolserverfinalize");
x.t("appmyprotocolclientfinalize","node");
x.t("appmyprotocolclientfinalize","finalization");
x.t("appmyprotocolclientfinalize","print");
x.t("appmyprotocolclientfinalize","statistics");
x.t("identification","port");
x.t("4.2.5.5","initialization");
x.t("application's","header");
x.t("identifying","field");
x.t("//switch//","figure");
x.t("101","message");
x.t("whose","contents");
x.t("whose","values");
x.t("actual","cbr");
x.t("message_addvirtualpayload","4.2.5.6.3");
x.t("4.10.5","integrate");
x.t("4.2.6.4.3.1","creating");
x.t("4.2.6.4.3.1","initialize");
x.t("incorporate","myprotocol");
x.t("upon","standard");
x.t("trace_printtrace","node");
x.t("sessions","multimedia");
x.t("sessions","developer");
x.t("made","app_processevent");
x.t("made","networkroutinggetadmindistance");
x.t("made","list");
x.t("made","traffic-generating");
x.t("made","part");
x.t("made","networkipparseandsetroutingprotocoltype");
x.t("made","app_initialize");
x.t("made","app_finalize");
x.t("and/or","optional");
x.t("compared","keyword");
x.t("endtimestr","optiontoken1");
x.t("null","app_successfullyhandledloopback");
x.t("null","routingmyprotocolinit");
x.t("null","serverptr");
x.t("null","clocktype");
x.t("null","appcbrserverinit");
x.t("null","indicates");
x.t("null","routingbellmanfordinit");
x.t("null","applist");
x.t("null","appinfo");
x.t("null","section");
x.t("null","figure");
x.t("null","appcbrservergetcbrserver");
x.t("null","call");
x.t("destaddr","short");
x.t("destaddr","int");
x.t("destaddr","destnodeid");
x.t("destaddr","destaddr");
x.t("destaddr","itemstosend");
x.t("destaddr","info-");
x.t("isrsvpteenabled","appdatacbrclient");
x.t("isrsvpteenabled","handle");
x.t("isrsvpteenabled","apptimer");
x.t("destnodeid","sourceaddr");
x.t("destnodeid","node");
x.t("//pointer","state");
x.t("cbrclient-","sessionstart");
x.t("cbrclient-","sourceport");
x.t("cbrclient-","interval");
x.t("node-","nodeid");
x.t("node-","appdata.nextportnum");
x.t("node-","appdata.appptr");
x.t("node-","networkdata.networkvar");
x.t("node-","numberinterfaces");
x.t("node-","appdata.routingstats");
x.t("node-","appdata.bellmanford");
x.t("node-","appdata.appstats");
x.t("node-","appdata.myprotocol");
x.t("pre-defined","types");
x.t("4.2.5.6","implementing");
x.t("msg","apptoudpsend");
x.t("msg","message_alloc");
x.t("msg","appdatacbrclient");
x.t("msg","short");
x.t("msg","char");
x.t("msg","delay");
x.t("msg","switch");
x.t("msg","sizeof");
x.t("msg","figure");
x.t("msg","trace_application_layer");
x.t("msg","break");
x.t("msg","payloadsize");
x.t("msg_default","understand");
x.t("msg_default","10000");
x.t("msg_default","otherwise");
x.t("3.3.1.2","sending");
x.t("(data)","serverptr");
x.t("(data)","clientptr-");
x.t("numbytetsrecvd","every");
x.t("any_dest","library");
x.t("any_dest","findroute");
x.t("any_dest","wireless");
x.t("any_dest","constant");
x.t("any_dest","figure");
x.t("any_dest","application");
x.t("any_dest","serverptr-");
x.t("throughputstr","io_printstat");
x.t("existing","library");
x.t("existing","entry");
x.t("routing_bellmanford.h","source");
x.t("routing_bellmanford.h","routing_bellmanford.cpp");
x.t("4.2.6.4.3.2","initialize");
x.t("4.2.6.4.3.2","initializing");
x.t("networkipaddunicastroutingprotocoltype","updates");
x.t("networkipaddunicastroutingprotocoltype","node");
x.t("networkipaddunicastroutingprotocoltype","defined");
x.t("1024","initialization");
x.t("1024","client");
x.t("1024","node-");
x.t("taken","response");
x.t("consider","client");
x.t("app_tcpopenconnectionwithpriority","node");
x.t("app_getfreeport","node");
x.t("4.2","application");
x.t("instances","parameter");
x.t("instances","cbr");
x.t("instances","parameter-value");
x.t("instances","running");
x.t("instances","application");
x.t("amount","data");
x.t("variety","purposes");
x.t("variety","data");
x.t("(rip)","routing");
x.t("include","ad-hoc");
x.t("include","statement");
x.t("include","stdlib.h");
x.t("include","api.h");
x.t("include","protocol\u2019s");
x.t("include","allocating");
x.t("include","partition.h");
x.t("include","updating");
x.t("include","standard");
x.t("include","switch");
x.t("include","code");
x.t("include","app_util.h");
x.t("include","statistic");
x.t("include","myprotocol");
x.t("include","string.h");
x.t("include","information");
x.t("include","routing");
x.t("include","protocol");
x.t("include","following");
x.t("include","app_myprotocol.h");
x.t("include","stdio.h");
x.t("layers","discussed");
x.t("layers","initialized");
x.t("layers","virtualpayloadsize");
x.t("layers","protocol");
x.t("configuration","parameter");
x.t("configuration","file");
x.t("configuration","specified");
x.t("configuration","parameters");
x.t("configuration","input");
x.t("configuration","format");
x.t("configuration","variable");
x.t("configuration","values");
x.t("trace_undefined","trace_tcp");
x.t("fragment","app_processevent");
x.t("message_returnpacket","(msg)");
x.t("message_returnpacket","returns");
x.t("4.2.5.7","4.2.6.8");
x.t("4.2.5.7","collecting");
x.t("sources","developer_srcs");
x.t("4.2.6.4.3.3","initializing");
x.t("4.2.6.4.3.3","integrate");
x.t("routing_protocol_myprotocol","networkroutingprotocoltype");
x.t("routing_protocol_myprotocol","return");
x.t("routing_protocol_myprotocol","networkipaddunicastroutingprotocoltype");
x.t("routing_protocol_myprotocol","node-");
x.t("routing_protocol_myprotocol","routingmyprotocolfinalize");
x.t("networkupdateforwardingtable","function");
x.t("routingbellmanfordfinalize","node");
x.t("alter","statistics");
x.t("running","layer");
x.t("running","node\u2019s");
x.t("running","interface");
x.t("running","multiple");
x.t("running","node");
x.t("running","abstract");
x.t("running","application");
x.t("similar","manner");
x.t("similar","cbr");
x.t("similar","traffic-generating");
x.t("similar","modification");
x.t("similar","section");
x.t("similar","steps");
x.t("similar","ftp");
x.t("similar","corresponding");
x.t("similar","adding");
x.t("interval","cbr");
x.t("interval","clocktype");
x.t("interval","start");
x.t("interval","desired");
x.t("interval","pause");
x.t("interval","distributions");
x.t("interval","cbrclient-");
x.t("interval","interval");
x.t("interval","starttime");
x.t("main","data");
x.t("app_udpsendnewdatawithpriority","function");
x.t("app_udpsendnewdatawithpriority","node");
x.t("app_settimer","implemented");
x.t("app_settimer","function");
x.t("app_settimer","used");
x.t("additional","tasks");
x.t("additional","event");
x.t("additional","implementation");
x.t("additional","information");
x.t("additional","protocol");
x.t("hosts","operating");
x.t("items_to_send","number");
x.t("items_to_send","item_size");
x.t("end_time","transmission");
x.t("[i]","interfacetype");
x.t("[i]","source");
x.t("[i]","appstr");
x.t("[i]","sourcestring");
x.t("[i]","routingprotocoltype");
x.t("[i]","destaddr");
x.t("allocate","memory");
x.t("value","parameter");
x.t("value","refer");
x.t("value","void");
x.t("value","calls");
x.t("value","default");
x.t("value","during");
x.t("value","specified");
x.t("value","assigned");
x.t("value","qualnet");
x.t("value","numbytetsrecvd");
x.t("value","figure");
x.t("value","fisheye-intra-update-interval");
x.t("value","port");
x.t("value","done");
x.t("value","used");
x.t("value","seconds");
x.t("4.2.5.8","finalization");
x.t("networkipparseandsetroutingprotocoltype","node");
x.t("networkipparseandsetroutingprotocoltype","include");
x.t("networkipparseandsetroutingprotocoltype","figure");
x.t("networkipparseandsetroutingprotocoltype","read");
x.t("networkipparseandsetroutingprotocoltype","app_initialize");
x.t("4.2.6.8.1","modifying");
x.t("4.2.6.8.1","write");
x.t("struct_app_str","appinfo");
x.t("reflect","desired");
x.t("setipv4addressinfo","&info-");
x.t("figure","4-43");
x.t("figure","4-44");
x.t("figure","4-45");
x.t("figure","4-46");
x.t("figure","4-47");
x.t("figure","4-48");
x.t("figure","4-1");
x.t("figure","4-15");
x.t("figure","4-16");
x.t("figure","4-17");
x.t("figure","4-18");
x.t("figure","4-19");
x.t("figure","4-30");
x.t("figure","4-31");
x.t("figure","4-32");
x.t("figure","4-33");
x.t("figure","4-34");
x.t("figure","4-35");
x.t("figure","4-36");
x.t("figure","4-37");
x.t("figure","4-38");
x.t("figure","4-39");
x.t("figure","4-20");
x.t("figure","4-21");
x.t("figure","4-22");
x.t("figure","4-23");
x.t("figure","4-24");
x.t("figure","4-25");
x.t("figure","4-26");
x.t("figure","4-27");
x.t("figure","4-28");
x.t("figure","4-29");
x.t("figure","4-40");
x.t("figure","4-41");
x.t("figure","4-42");
x.t("gives","detailed");
x.t("constant","rate");
x.t("constant","bit");
x.t("constant","defined");
x.t("constant","definitions");
x.t("developer","library");
x.t("developer","traffic-gen");
x.t("developer","voip");
x.t("developer","gsm");
x.t("developer","bgpv4");
x.t("developer","mcbr");
x.t("developer","telnet");
x.t("developer","vbr");
x.t("developer","ftp/generic");
x.t("developer","traffic-trace");
x.t("developer","ripng");
x.t("developer","routing");
x.t("developer","cellular-abstract-app");
x.t("developer","phone-call");
x.t("developer","lookup");
x.t("send","packets");
x.t("send","500");
x.t("send","acndata.actioncomment");
x.t("send","messages");
x.t("send","self");
x.t("send","item_size");
x.t("send","packet");
x.t("several","apis");
x.t("several","api");
x.t("several","macros");
x.t("several","functions");
x.t("implementation","cbr");
x.t("implementation","details");
x.t("implementation","udp");
x.t("implementation","app_ftp.h");
x.t("implementation","functions");
x.t("implementation","section");
x.t("implementation","code");
x.t("implementation","4.2.5.2");
x.t("implementation","app_cbr.h");
x.t("implementation","routing_bellmanford.h");
x.t("implementation","bellman-ford");
x.t("free","app_getprotocoltype");
x.t("free","checks");
x.t("free","memory");
x.t("free","data");
x.t("free","port");
x.t("free","message_free");
x.t("4.2.5.9","4.2.7");
x.t("4.2.5.9","protocol");
x.t("4.2.5.9","including");
x.t("4.2.5.10","integrating");
x.t("4.2.5.10","4.2.5.1");
x.t("4.2.5.10","4.2.6.1");
x.t("activating","library");
x.t("already","exist");
x.t("sscanf","appinput.inputstrings");
x.t("sscanf","used");
x.t("prototype","initialization");
x.t("prototype","io_readstring");
x.t("prototype","finalization");
x.t("4.2.6.8.2","implementing");
x.t("4.2.6.8.2","call");
x.t("declaration","applies");
x.t("declaration","applicable");
x.t("networkipgetinterfaceaddress","node");
x.t("networkipgetinterfaceaddress","defined");
x.t("networkipgetinterfacetype","node");
x.t("incremented","figure");
x.t("specific","port");
x.t("generated","based");
x.t("generated","real");
x.t("generator","supports");
x.t("generator","udp-based");
x.t("generator","description");
x.t("generator","abstract");
x.t("generator","flexible");
x.t("generator","model");
x.t("generate","traffic");
x.t("transmitted","time");
x.t("transmitted","header");
x.t("transmitted","msg_app_fromtransdatareceived");
x.t("transmitted","using");
x.t("forwarding","table");
x.t("connections","transport");
x.t("msg_app_fromtransopenresult","message");
x.t("process","traffic-generating");
x.t("process","indicate");
x.t("process","message");
x.t("process","application");
x.t("process","adding");
x.t("process","performed");
x.t("compilation","process");
x.t("trace_udp","trace_ip");
x.t("remoteaddr","short");
x.t("remoteaddr","char");
x.t("remoteaddr","d_clocktype");
x.t("remoteaddr","int32");
x.t("itemstosend","uint32");
x.t("itemstosend","itemsize");
x.t("itemstosend","int32");
x.t("obtaining","node");
x.t("mapping_getnodeptrfromhash","nodehash");
x.t("mapping_getnodeptrfromhash","node");
x.t("mapping_getnodeptrfromhash","defined");
x.t("mapping_getnodeptrfromhash","called");
x.t("(starttimestr)","clocktype");
x.t("(node)","api");
x.t("(node)","routingbellmanfordinittrace");
x.t("(node)","data.seqno");
x.t("(node)","figure");
x.t("(node)","routingmyprotocolinittrace");
x.t("(node)","bellmanford-");
x.t("(node)","starttime");
x.t("(node)","break");
x.t("(node)","serverptr-");
x.t("making","changes");
x.t("making","call");
x.t("data.txtime","getsimtime");
x.t("appcbrservernewcbrserver","file");
x.t("appcbrservernewcbrserver","functions");
x.t("appcbrservernewcbrserver","node");
x.t("appcbrservernewcbrserver","similar");
x.t("appcbrservernewcbrserver","figure");
x.t("appdata.bellmanford","void");
x.t("appdata.bellmanford","null");
x.t("appdata.bellmanford","node-");
x.t("msg_app_triggeredupdatealarm","timer");
x.t("msg_app_triggeredupdatealarm","handletriggeredupdatealarm");
x.t("packet_out","&acndata");
x.t("4.2.7.1.1","overriding");
x.t("destinationport","char");
x.t("broadcast","address");
x.t("broadcast","messages");
x.t("models","specified");
x.t("models","cellular");
x.t("models","qualnet_home");
x.t("models","qualnet");
x.t("models","made");
x.t("models","comprise");
x.t("services","table");
x.t("services","examples");
x.t("(eigrp)","distance");
x.t("olsr","void");
x.t("olsr","pointers");
x.t("olsr","protocol");
x.t("olsr","appptr");
x.t("read","parameter");
x.t("read","user-specified");
x.t("read","user");
x.t("read","name");
x.t("read","protocol\u2019s");
x.t("read","input");
x.t("read","store");
x.t("read","user-defined");
x.t("read","message");
x.t("read","configuration");
x.t("pointers","tables");
x.t("pointers","application");
x.t("although","working");
x.t("myprotocol","4.2.6.4");
x.t("myprotocol","state");
x.t("myprotocol","list");
x.t("myprotocol","initialization");
x.t("myprotocol","add");
x.t("myprotocol","network");
x.t("myprotocol","routingprotocoltype");
x.t("myprotocol","param1");
x.t("myprotocol","initialize");
x.t("myprotocol","string");
x.t("myprotocol","input");
x.t("myprotocol","relative");
x.t("myprotocol","receive");
x.t("myprotocol","section");
x.t("myprotocol","client");
x.t("myprotocol","event");
x.t("myprotocol","qualnet");
x.t("myprotocol","figure");
x.t("myprotocol","finalization");
x.t("myprotocol","names");
x.t("myprotocol","networkroutingadmindistancetype");
x.t("myprotocol","server");
x.t("/libraries/user_models/src","name");
x.t("word","currently");
x.t("takes","place");
x.t("timermsg","message_alloc");
x.t("timermsg","sizeof");
x.t("timermsg","timermsg");
x.t("timermsg","starttime");
x.t("(s)","application");
x.t("template","function");
x.t("makefile-common","library");
x.t("makefile-common","created");
x.t("administrative","distances");
x.t("administrative","distance");
x.t("computes","routing");
x.t("printstats","(node)");
x.t("printstats","called");
x.t("agreed","upon");
x.t("transfer","user-specified");
x.t("transfer","protocol");
x.t("dynamic","source");
x.t("dynamic","statistics");
x.t("output","files");
x.t("4.2.5.5.1","determining");
x.t("4.2.5.5.1","read");
x.t("separate","library");
x.t("separate","header");
x.t("string.h","include");
x.t("nodes","parameter-name");
x.t("nodes","network");
x.t("trace_tcp","trace_udp");
x.t("specifying","user-specified");
x.t("specifying","new");
x.t("specifying","application\u2019s");
x.t("specifying","routing");
x.t("experiment","section");
x.t("experiment","configuration");
x.t("experiment","application");
x.t("strmcp","appstr");
x.t("schedule","timer");
x.t("belonging","application");
x.t("belonging","protocol");
x.t("sequence","number");
x.t("purposes","application");
x.t("app_layer","app_cbr_client");
x.t("app_routing_bellmanford","routingbellmanfordlayer");
x.t("arrival","routing");
x.t("arrival","packet");
x.t("(bits/s)","throughputstr");
x.t("routing_protocol_dymo","routing_protocol_dymo6");
x.t("applicable","enclosed");
x.t("handletriggeredupdatealarm","(node)");
x.t("audio","traffic");
x.t("data","sending");
x.t("data","type");
x.t("data","packets");
x.t("data","rate");
x.t("data","size");
x.t("data","info");
x.t("data","udp");
x.t("data","data.sourceport");
x.t("data","tcp");
x.t("data","specified");
x.t("data","demonstrates");
x.t("data","part");
x.t("data","structures");
x.t("data","meant");
x.t("data","particular");
x.t("data","types");
x.t("data","important");
x.t("data","client");
x.t("data","whose");
x.t("data","event");
x.t("data","developer");
x.t("data","structure");
x.t("data","packet");
x.t("data","using");
x.t("data","simulate");
x.t("data","item");
x.t("sensor","networks");
x.t("successor","olsr");
x.t("information","converted");
x.t("information","instance");
x.t("information","timer");
x.t("information","interface");
x.t("information","protocol-specific");
x.t("information","obtained");
x.t("information","identify");
x.t("information","resetting");
x.t("information","flags");
x.t("information","stored");
x.t("information","acndata.actiontype");
x.t("information","indicate");
x.t("information","may");
x.t("information","typedef");
x.t("information","correspond");
x.t("information","sequence");
x.t("information","application");
x.t("information","routing");
x.t("information","port");
x.t("information","protocol");
x.t("information","applications");
x.t("information","using");
x.t("/include/api.h","file");
x.t("/include/api.h","section");
x.t("/include/api.h","message");
x.t("/include/api.h","include");
x.t("4.2.5.5.2","explains");
x.t("4.2.5.5.2","write");
x.t("4.2.5.5.2","application");
x.t("4.2.5.5.2","reading");
x.t("typical","protocol");
x.t("/include/app_util.h","include");
x.t("app_myprotocol_server","applayermyprotocolserver");
x.t("app_myprotocol_server","appmyprotocolserverfinalize");
x.t("app_myprotocol_server","app_placeholder");
x.t("facilitate","tracing");
x.t("optional","included");
x.t("optional","parameters");
x.t("optional","configuration");
x.t("configure","protocol");
x.t("app_initialize","unlike");
x.t("app_initialize","implemented");
x.t("app_initialize","4.2.6.4.3");
x.t("app_initialize","initializes");
x.t("app_initialize","reads");
x.t("app_initialize","section");
x.t("app_initialize","node");
x.t("app_initialize","incorporate");
x.t("app_initialize","figure");
x.t("app_initialize","corresponding");
x.t("node_processevent","calls");
x.t("node_processevent","defined");
x.t("/main/node.cpp","event");
x.t("module","create");
x.t("module","routing");
x.t("network_protocol_mobile_ip","routing_protocol_aodv6");
x.t("fisheye-intra-update-interval","default");
x.t("fisheye-intra-update-interval","&wasfound");
x.t("fisheye-intra-update-interval","fisheye-inter-update-interval");
x.t("routing_fisheye.h","routing_fisheye.cpp");
x.t("localroute","true");
x.t("interact","protocol");
x.t("trace_application_layer","packet_out");
x.t("bit","rate");
x.t("flexible","udp");
x.t("eigrp","enhanced");
x.t("examples","network");
x.t("examples","api");
x.t("examples","app_ftp.h");
x.t("defined","app_util.cpp");
x.t("defined","network_ip.h");
x.t("defined","network_ip.cpp");
x.t("defined","file");
x.t("defined","api.h");
x.t("defined","network.h");
x.t("defined","protocol\u2019s");
x.t("defined","routing_bellmanford.cpp");
x.t("defined","enumeration");
x.t("defined","application.h");
x.t("defined","\u00f0/include/fileio.h");
x.t("defined","qualnet_home");
x.t("defined","app_cbr.h");
x.t("defined","application.cpp");
x.t("defined","structure");
x.t("defined","following");
x.t("received","events");
x.t("received","packets");
x.t("received","traffic-generating");
x.t("received","bytes");
x.t("received","modification");
x.t("received","number");
x.t("received","message");
x.t("received","event");
x.t("received","routing");
x.t("received","msg_app_fromtranscloseresult");
x.t("received","packet");
x.t("received","serverptr-");
x.t("appropriate","variables");
x.t("appropriate","instance");
x.t("appropriate","recommend");
x.t("appropriate","protocol-specific");
x.t("appropriate","fields");
x.t("appropriate","section");
x.t("appropriate","data");
x.t("appropriate","subsection");
x.t("appropriate","application");
x.t("/include/trace.h","example");
x.t("/include/trace.h","shown");
x.t("4.2.5.5.3","implementing");
x.t("4.2.5.5.3","statistics");
x.t("4-20","ensures");
x.t("4-20","shows");
x.t("4-20","appdatacbrclient");
x.t("4-20","function");
x.t("besides","initializing");
x.t("exchanged","simulation");
x.t("error_reporterror","(error)");
x.t("error_reporterror","invalid");
x.t("memcpy","message_returnpacket");
x.t("memcpy","&data");
x.t("subsection","section");
x.t("adminstrative","distance");
x.t("networkipinit","calls");
x.t("routingmyprotocolinittrace","node");
x.t("wasfound","int");
x.t("wasfound","fisheye-");
x.t("bellmanford-","statsprinted");
x.t("application","example");
x.t("application","timers");
x.t("application","protocols");
x.t("application","implement");
x.t("application","needs");
x.t("application","refer");
x.t("application","layer");
x.t("application","instance");
x.t("application","void");
x.t("application","cbr");
x.t("application","generating");
x.t("application","uses");
x.t("application","field");
x.t("application","implemented");
x.t("application","state");
x.t("application","timer");
x.t("application","type");
x.t("application","servers");
x.t("application","new");
x.t("application","list");
x.t("application","need");
x.t("application","entry");
x.t("application","tcp-based");
x.t("application","specified");
x.t("application","name");
x.t("application","allocating");
x.t("application","frequently");
x.t("application","parameters");
x.t("application","sends");
x.t("application","input");
x.t("application","next");
x.t("application","supposed");
x.t("application","function");
x.t("application","commonly");
x.t("application","may");
x.t("application","section");
x.t("application","client");
x.t("application","header");
x.t("application","message");
x.t("application","qualnet");
x.t("application","instances");
x.t("application","configuration");
x.t("application","similar");
x.t("application","running");
x.t("application","send");
x.t("application","prototype");
x.t("application","generate");
x.t("application","models");
x.t("application","read");
x.t("application","myprotocol");
x.t("application","takes");
x.t("application","schedule");
x.t("application","information");
x.t("application","data");
x.t("application","4.2.5.5.2");
x.t("application","application");
x.t("application","case");
x.t("application","protocol");
x.t("application","run");
x.t("application","model");
x.t("application","used");
x.t("application","additionally");
x.t("application","using");
x.t("application","statistics");
x.t("application","loopback");
x.t("application","assigning");
x.t("application","maintains");
x.t("application","struct");
x.t("application","generates");
x.t("application","server");
x.t("routing","protocols");
x.t("routing","version");
x.t("routing","table");
x.t("routing","tables");
x.t("routing","packets");
x.t("routing","protocol\u2019s");
x.t("routing","(dsr)");
x.t("routing","(olsr)");
x.t("routing","function");
x.t("routing","models");
x.t("routing","administrative");
x.t("routing","information");
x.t("routing","protocol");
x.t("routing","algorithm");
x.t("routing","packet");
x.t("routing","statistics");
x.t("mimicking","traffic");
x.t("intervals","developer");
x.t("interior","gateway");
x.t("ripng","routing");
x.t("generation","(ripng)");
x.t("/include/fileio.h","void");
x.t("/include/fileio.h","file");
x.t("/include/fileio.h","requires");
x.t("/include/fileio.h","function");
x.t("/libraries/developer/src","however");
x.t("/libraries/developer/src","details");
x.t("/libraries/developer/src","code");
x.t("/libraries/developer/src","folder");
x.t("/libraries/developer/src","following");
x.t("finalization","functions");
x.t("finalization","function");
x.t("finalization","finalization");
x.t("utility","apis");
x.t("allocates","sends");
x.t("allocates","header");
x.t("collecting","reporting");
x.t("collecting","statistics");
x.t("appmyprotocolclientinit","appmyprotocolserverinit");
x.t("appmyprotocolclientinit","node");
x.t("int32","seqno");
x.t("int32","itemsize");
x.t("int32","itemstosend");
x.t("d_int64","numbytessent");
x.t("d_int64","numbytesrecvd");
x.t("values","create");
x.t("values","required");
x.t("values","observed");
x.t("values","input");
x.t("values","read");
x.t("values","application");
x.t("sourcenodeid","address");
x.t("sourcenodeid","node");
x.t("app_timer_send_pkt","cbrdata");
x.t("app_timer_send_pkt","start");
x.t("app_timer_send_pkt","purpose");
x.t("app_timer_send_pkt","message_send");
x.t("app_timer_send_pkt","occur");
x.t("4-21","shows");
x.t("4-21","new");
x.t("4-21","initializing");
x.t("case","routing_protocol_static");
x.t("case","msg_app_fromtransport");
x.t("case","statement");
x.t("case","calls");
x.t("case","multiple");
x.t("case","app_cbr_server");
x.t("case","traffic-generating");
x.t("case","app_routing_myprotocol");
x.t("case","app_myprotocol_client");
x.t("case","destination");
x.t("case","msg_app_timerexpired");
x.t("case","msg_app_checkroutetimeoutalarm");
x.t("case","switch");
x.t("case","client");
x.t("case","routing_protocol_myprotocol");
x.t("case","msg_app_triggeredupdatealarm");
x.t("case","app_routing_bellmanford");
x.t("case","app_myprotocol_server");
x.t("case","app_timer_send_pkt");
x.t("case","app_cbr_client");
x.t("case","done");
x.t("case","routing_protocol_bellmanford");
x.t("case","msg_app_periodicupdatealarm");
x.t("4.2.5.5.4","implementing");
x.t("virtualpayloadsize","field");
x.t("send/receive","packets");
x.t("knowledge","contents");
x.t("//endrip","always");
x.t("highest","adminstrative");
x.t("global","system");
x.t("(igp)","multimedia");
x.t("structure","included");
x.t("structure","cbr");
x.t("structure","uses");
x.t("structure","suited");
x.t("structure","new");
x.t("structure","updates");
x.t("structure","bellmanford");
x.t("structure","clientptr");
x.t("structure","4.2.5.5.3.3");
x.t("structure","explained");
x.t("structure","hold");
x.t("structure","fisheyedata");
x.t("structure","function");
x.t("structure","stores");
x.t("structure","appdatacbrserver");
x.t("structure","node");
x.t("structure","qualnet_home");
x.t("structure","thus");
x.t("structure","identifying");
x.t("structure","qualnet");
x.t("structure","include");
x.t("structure","read");
x.t("structure","appropriate");
x.t("structure","structure");
x.t("structure","bellman-ford");
x.t("structure","used");
x.t("structure","setting");
x.t("structure","appdata");
x.t("structure","definitions");
x.t("structure","contains");
x.t("portinfo","porttable");
x.t("port","example");
x.t("port","possible");
x.t("port","table");
x.t("port","void");
x.t("port","listed");
x.t("port","need");
x.t("port","recommended");
x.t("port","session");
x.t("port","destination");
x.t("port","number");
x.t("port","combination");
x.t("port","bool");
x.t("port","value");
x.t("port","facilitate");
x.t("port","application");
x.t("port","numbers");
x.t("port","used");
x.t("port","using");
x.t("port","app_tcpsenddata");
x.t("port","server");
x.t("app_timer","int");
x.t("described","section");
x.t("described","detail");
x.t("application.cpp","void");
x.t("application.cpp","add");
x.t("application.cpp","section");
x.t("application.cpp","include");
x.t("application.cpp","app_initialize");
x.t("application.cpp","app_finalize");
x.t("print","string");
x.t("print","functions");
x.t("print","error");
x.t("print","client\u2019s");
x.t("print","client");
x.t("print","protocol");
x.t("print","statistics");
x.t("print","server");
x.t("called","once");
x.t("called","appstr");
x.t("called","app_myprotocol.cpp");
x.t("called","bellmanford");
x.t("called","simulator");
x.t("called","registering");
x.t("called","handle");
x.t("called","apptimer");
x.t("called","src");
x.t("called","destination");
x.t("called","first");
x.t("called","user_models");
x.t("called","function");
x.t("called","hierarchically");
x.t("called","appinput");
x.t("called","myprotocol");
x.t("called","application");
x.t("called","finalization");
x.t("called","print");
x.t("called","app_myprotocol.h");
x.t("app_cbr_client","applayercbrclient");
x.t("app_cbr_client","msg_app_timerexpired");
x.t("app_cbr_client","cbrclient");
x.t("app_cbr_client","appcbrclientfinalize");
x.t("4-22","shows");
x.t("4-22","calling");
x.t("appcbrservergetcbrserver","finds");
x.t("appcbrservergetcbrserver","search");
x.t("appcbrservergetcbrserver","node");
x.t("appcbrservergetcbrserver","appcbrservernewcbrserver");
x.t("appcbrservergetcbrserver","returns");
x.t("/app_messenger.cpp","(developer_srcdir)");
x.t("specification","optional");
x.t("modifications","need");
x.t("modifications","function");
x.t("modifications","made");
x.t("(routingprotocoltype)","case");
x.t("above","1024");
x.t("choose","nextportnum");
x.t("protocol","example");
x.t("protocol","(http)");
x.t("protocol","available");
x.t("protocol","provide");
x.t("protocol","myprotcol");
x.t("protocol","version");
x.t("protocol","just");
x.t("protocol","resides");
x.t("protocol","shown");
x.t("protocol","description");
x.t("protocol","refer");
x.t("protocol","layer");
x.t("protocol","source");
x.t("protocol","instance");
x.t("protocol","(igrp)");
x.t("protocol","cbr");
x.t("protocol","discussed");
x.t("protocol","4.2.6.9");
x.t("protocol","implemented");
x.t("protocol","cbrdata");
x.t("protocol","state");
x.t("protocol","4.2.6.4.1");
x.t("protocol","interface");
x.t("protocol","cooperates");
x.t("protocol","type");
x.t("protocol","4.2.6.4.2");
x.t("protocol","parsing");
x.t("protocol","link");
x.t("protocol","single");
x.t("protocol","designed");
x.t("protocol","list");
x.t("protocol","initialization");
x.t("protocol","determines");
x.t("protocol","add");
x.t("protocol","network");
x.t("protocol","desired");
x.t("protocol","name");
x.t("protocol","wireless");
x.t("protocol","param1");
x.t("protocol","parameters");
x.t("protocol","provides");
x.t("protocol","programmer");
x.t("protocol","stack");
x.t("protocol","explained");
x.t("protocol","string");
x.t("protocol","functions");
x.t("protocol","store");
x.t("protocol","separately");
x.t("protocol","configured");
x.t("protocol","next");
x.t("protocol","life");
x.t("protocol","number");
x.t("protocol","gui");
x.t("protocol","commonly");
x.t("protocol","(ftp)");
x.t("protocol","different");
x.t("protocol","may");
x.t("protocol","4.2.5.7.1");
x.t("protocol","destined");
x.t("protocol","designers");
x.t("protocol","typedef");
x.t("protocol","transport");
x.t("protocol","section");
x.t("protocol","handling");
x.t("protocol","added");
x.t("protocol","works");
x.t("protocol","client");
x.t("protocol","header");
x.t("protocol","app_cbr.h");
x.t("protocol","message");
x.t("protocol","lower");
x.t("protocol","qualnet");
x.t("protocol","event");
x.t("protocol","(rip)");
x.t("protocol","configuration");
x.t("protocol","include");
x.t("protocol","networkupdateforwardingtable");
x.t("protocol","similar");
x.t("protocol","running");
x.t("protocol","developer");
x.t("protocol","implementation");
x.t("protocol","prototype");
x.t("protocol","figure");
x.t("protocol","4.2.6.8.2");
x.t("protocol","models");
x.t("protocol","(eigrp)");
x.t("protocol","although");
x.t("protocol","myprotocol");
x.t("protocol","takes");
x.t("protocol","computes");
x.t("protocol","4.2.5.5.1");
x.t("protocol","successor");
x.t("protocol","information");
x.t("protocol","data");
x.t("protocol","received");
x.t("protocol","application");
x.t("protocol","finalization");
x.t("protocol","routing");
x.t("protocol","(igp)");
x.t("protocol","called");
x.t("protocol","structure");
x.t("protocol","protocol");
x.t("protocol","bellman-ford");
x.t("protocol","typically");
x.t("protocol","used");
x.t("protocol","model");
x.t("protocol","using");
x.t("protocol","understanding");
x.t("protocol","statistics");
x.t("protocol","4.2.6.6.1");
x.t("protocol","routingmyprotocolfinalize");
x.t("protocol","specify");
x.t("protocol","server");
x.t("two","files");
x.t("two","parts");
x.t("two","categories");
x.t("two","functions");
x.t("two","types");
x.t("two","end");
x.t("two","entries");
x.t("users","traffic-generating");
x.t("users","umts");
x.t("enhanced","interior");
x.t("transmit","route");
x.t("note","unlike");
x.t("note","partial");
x.t("note","traffic-generating");
x.t("note","first");
x.t("priority","clocktype");
x.t("priority","specified");
x.t("priority","sends");
x.t("priority","relative");
x.t("priority","opens");
x.t("priority","administrative");
x.t("priority","myprotocol");
x.t("priority","priority");
x.t("priority","app_tcpopenconnection");
x.t("priority","info-");
x.t("app_finalize","calls");
x.t("app_finalize","function");
x.t("app_finalize","section");
x.t("app_finalize","node");
x.t("app_finalize","defined");
x.t("app_finalize","finalization");
x.t("app_finalize","call");
x.t("trace_myprotocol","enumeration");
x.t("trace_myprotocol","traceprotocoltype");
x.t("constitute","parameters");
x.t("serveraddr","short");
x.t("serveraddr","itemstosend");
x.t("serveraddr","int32");
x.t("done","protocols");
x.t("done","manner");
x.t("done","cbr");
x.t("done","looking");
x.t("done","function");
x.t("done","message");
x.t("done","making");
x.t("done","applications");
x.t("4-23","enum");
x.t("4-23","declaring");
x.t("message/event","description");
x.t("event/message","types");
x.t("otherwise","program");
x.t("otherwise","simulator");
x.t("otherwise","returns");
x.t("executes","during");
x.t("&acndata","message_send");
x.t("applications","cbr");
x.t("applications","implemented");
x.t("applications","type");
x.t("applications","multiple");
x.t("applications","contents");
x.t("applications","strings");
x.t("applications","may");
x.t("applications","ftp");
x.t("applications","qualnet");
x.t("applications","running");
x.t("applications","developer");
x.t("applications","routing");
x.t("applications","mimicking");
x.t("applications","two");
x.t("applications","applications");
x.t("cellular-abstract-app","abstract");
x.t("based","source");
x.t("based","name");
x.t("based","historical");
x.t("phone-call","phone");
x.t("bellman-ford","performs");
x.t("bellman-ford","void");
x.t("bellman-ford","configurable");
x.t("bellman-ford","routingbellmanfordinit");
x.t("bellman-ford","routingbellmanfordlayer");
x.t("bellman-ford","function");
x.t("bellman-ford","header");
x.t("bellman-ford","running");
x.t("bellman-ford","implementation");
x.t("bellman-ford","data");
x.t("bellman-ford","routing");
x.t("bellman-ford","application");
x.t("bellman-ford","case");
x.t("itself","time");
x.t("itself","receive");
x.t("itself","starting");
x.t("itself","packet");
x.t("msg_app_fromtransdatareceived","message");
x.t("msg_app_fromtranscloseresult","message");
x.t("numbytesrecvd","uint32");
x.t("numbytesrecvd","cbrserver-");
x.t("numbytesrecvd","variable");
x.t("numbytesrecvd","message_returnpacketsize");
x.t("appcbrclientinit","passed");
x.t("appcbrclientinit","shown");
x.t("appcbrclientinit","timer");
x.t("appcbrclientinit","appcbrserverinit");
x.t("appcbrclientinit","sets");
x.t("appcbrclientinit","node");
x.t("inform","cbr");
x.t("work","correctly");
x.t("correctly","msg_app_myprotocol_newevent1");
x.t("4-24","searching");
x.t("4-24","appdatacbrclient");
x.t("typically","handles");
x.t("algorithm","passes");
x.t("0-1023","two");
x.t("server\u2019s","port");
x.t("real","network");
x.t("(gsm)","application");
x.t("call","myprotocol\u2019s");
x.t("call","cbr");
x.t("call","initialization");
x.t("call","traffic");
x.t("call","traffic-generating");
x.t("call","protocol\u2019s");
x.t("call","app_registernewapp");
x.t("call","protocol's");
x.t("call","function");
x.t("call","client");
x.t("call","myprotocol");
x.t("call","finalization");
x.t("call","routing");
x.t("call","protocol");
x.t("file-based","traffic");
x.t("packet","events");
x.t("packet","source");
x.t("packet","void");
x.t("packet","cbr");
x.t("packet","field");
x.t("packet","trace");
x.t("packet","time");
x.t("packet","arrives");
x.t("packet","new");
x.t("packet","udp");
x.t("packet","destination");
x.t("packet","destined");
x.t("packet","transport");
x.t("packet","client");
x.t("packet","transmitted");
x.t("packet","routing");
x.t("packet","application");
x.t("packet","port");
x.t("packet","packet");
x.t("packet","used");
x.t("packet","serverptr-");
x.t("packet","associated");
x.t("numbers","manner");
x.t("numbers","api");
x.t("numbers","range");
x.t("numbers","explained");
x.t("numbers","function");
x.t("numbers","client");
x.t("numbers","qualnet");
x.t("numbers","consider");
x.t("numbers","alter");
x.t("numbers","server");
x.t("incoming","packet");
x.t("d_uint32","tos");
x.t("created","files");
x.t("created","field");
x.t("created","new");
x.t("created","assigned");
x.t("created","model");
x.t("4-25","shows");
x.t("4-25","event");
x.t("&data","sizeof");
x.t("&data","message_returnpacket");
x.t("recompile","qualnet");
x.t("operate","application");
x.t("routing_protocol_aodv6","routing_protocol_dymo");
x.t("routing_admin_distance_eigrp","routing_admin_distance_myprotocol");
x.t("fisheye_inter_update_interval","else");
x.t("networkipiswirednetwork","node");
x.t("order","connect");
x.t("ftp_server","uses");
x.t("run","node");
x.t("following","statements");
x.t("following","example");
x.t("following","statement");
x.t("following","list");
x.t("following","tasks");
x.t("following","parameters");
x.t("following","prototypes");
x.t("following","three");
x.t("following","format");
x.t("following","code");
x.t("following","header");
x.t("following","include");
x.t("following","configuration");
x.t("following","data");
x.t("following","information");
x.t("following","two");
x.t("following","folders");
x.t("used","example");
x.t("used","uniquely");
x.t("used","protocols");
x.t("used","parameter");
x.t("used","implement");
x.t("used","cbr");
x.t("used","interface");
x.t("used","identify");
x.t("used","multiple");
x.t("used","udp");
x.t("used","tcp");
x.t("used","directly");
x.t("used","communication");
x.t("used","ipv4");
x.t("used","initializing");
x.t("used","ipv6");
x.t("used","store");
x.t("used","calculate");
x.t("used","hold");
x.t("used","split");
x.t("used","msg_app_timerexpired");
x.t("used","communicate");
x.t("used","instead");
x.t("used","transport");
x.t("used","internal");
x.t("used","code");
x.t("used","qualnet");
x.t("used","sensor");
x.t("used","application");
x.t("used","app_timer_send_pkt");
x.t("used","protocol");
x.t("used","call");
x.t("used","manage");
x.t("used","simulation");
x.t("used","route");
x.t("used","simulate");
x.t("used","specify");
x.t("corresponding","functions");
x.t("corresponding","step");
x.t("corresponding","given");
x.t("corresponding","event");
x.t("corresponding","bellman-ford");
x.t("corresponding","model");
x.t("model","library");
x.t("model","implement");
x.t("model","files");
x.t("model","unreliable");
x.t("model","creating");
x.t("model","place");
x.t("model","allows");
x.t("model","simulates");
x.t("model","qualnet");
x.t("model","existing");
x.t("model","similar");
x.t("model","makefile-common");
x.t("model","finalize");
x.t("model","simulate");
x.t("model","generates");
x.t("system","mobile");
x.t("state-based","routing");
x.t("relevant","application");
x.t("manage","connections");
x.t("manage","port");
x.t("pointer","parameter");
x.t("pointer","source");
x.t("pointer","user");
x.t("pointer","state");
x.t("pointer","list");
x.t("pointer","destination");
x.t("pointer","lastly");
x.t("pointer","stores");
x.t("pointer","node");
x.t("pointer","data");
x.t("pointer","application");
x.t("pointer","structure");
x.t("pointer","port");
x.t("pointer","pointer");
x.t("contained","file");
x.t("app_tcpcloseconnection","function");
x.t("turn","call");
x.t("simulation","enum");
x.t("simulation","last");
x.t("simulation","contents");
x.t("simulation","store");
x.t("simulation","function");
x.t("simulation","section");
x.t("simulation","4.2.5.8");
x.t("simulation","application");
x.t("simulation","finalization");
x.t("simulation","seconds");
x.t("ending","100");
x.t("bottom","manner");
x.t("starttime","endtime");
x.t("starttime","clocktype");
x.t("starttime","cbrclient-");
x.t("starttime","figure");
x.t("starttime","time_converttoclock");
x.t("break","default");
x.t("break","nextapp");
x.t("break","messages");
x.t("break","//switch//");
x.t("break","figure");
x.t("break","case");
x.t("either","inside");
x.t("special","post");
x.t("special","issues");
x.t("special","message");
x.t("4-26","performs");
x.t("4-26","cbr");
x.t("4-26","event");
x.t("appdata.appstats","true");
x.t("except","entry");
x.t("except","module");
x.t("except","application");
x.t("subnet","mask");
x.t("subnet","identifier");
x.t("0-65535","however");
x.t("payloadsize","message_infoalloc");
x.t("payloadsize","traceprotocol");
x.t("payloadsize","tostype");
x.t("destport","(short)");
x.t("lookup","look-up");
x.t("using","example");
x.t("using","udp");
x.t("using","input");
x.t("using","app_registernewapp");
x.t("using","virtualpayloadsize");
x.t("using","application");
x.t("using","routing");
x.t("using","port");
x.t("using","following");
x.t("additionally","inserts");
x.t("additionally","following");
x.t("understanding","discussed");
x.t("app_myprotocol.h","statements");
x.t("app_myprotocol.h","example");
x.t("app_myprotocol.h","source");
x.t("app_myprotocol.h","4.2.5.5.3.1");
x.t("app_myprotocol.h","contain");
x.t("app_myprotocol.h","section");
x.t("app_myprotocol.h","4.2.5.3");
x.t("app_myprotocol.h","4.2.5.9");
x.t("app_myprotocol.h","4.2.5.8.3");
x.t("totaljitter","appdatacbrserver");
x.t("containing","source");
x.t("containing","time");
x.t("containing","statistic");
x.t("containing","statistics");
x.t("nodeinput","routing-protocol");
x.t("nodeinput","fisheyedata");
x.t("nodeinput","networkdataip");
x.t("nodeinput","fisheye-inter-update-interval");
x.t("nodeinput","bool");
x.t("nodeinput","appinput");
x.t("nodeinput","fisheye-intra-update-interval");
x.t("nodeinput","break");
x.t("nodeinput","nodeinput");
x.t("appinput.numlines","sscanf");
x.t("&sourcenodeid","&sourceaddr");
x.t("general","structure");
x.t("timer-","type");
x.t("timer-","sourceport");
x.t("message_send","node");
x.t("setting","periodic");
x.t("setting","address");
x.t("setting","initial");
x.t("setting","broadcast");
x.t("setting","port");
x.t("message_free","important");
x.t("message_free","node");
x.t("message_free","event");
x.t("scheduling","event");
x.t("serverptr-","seqno");
x.t("serverptr-","sessionlastreceived");
x.t("serverptr-","numpktsrecvd");
x.t("serverptr-","sourceport");
x.t("serverptr-","numbytesrecvd");
x.t("4-27","initializing");
x.t("4-27","appdatacbrserver");
x.t("/libraries/developer/src/network_ip.cpp","returns");
x.t("routing_protocol_bellmanford","else");
x.t("routing_protocol_bellmanford","return");
x.t("routing_protocol_bellmanford","node-");
x.t("routing_protocol_bellmanford","routingbellmanfordfinalize");
x.t("routes","routing");
x.t("rowptr","addroute");
x.t("rowptr","networkipgetinterfacetype");
x.t("finalize","switch");
x.t("connect","server");
x.t("(vbr)","traffic");
x.t("distributed","time");
x.t("route","packets");
x.t("route","discovery");
x.t("route","rowptr");
x.t("folders","source");
x.t("folders","section");
x.t("folders","relevant");
x.t("statistics","illustrate");
x.t("statistics","variables");
x.t("statistics","related");
x.t("statistics","layer");
x.t("statistics","void");
x.t("statistics","discussed");
x.t("statistics","cbr");
x.t("statistics","file");
x.t("statistics","during");
x.t("statistics","declare");
x.t("statistics","traffic-generating");
x.t("statistics","specified");
x.t("statistics","initialize");
x.t("statistics","final");
x.t("statistics","collection");
x.t("statistics","function");
x.t("statistics","step");
x.t("statistics","section");
x.t("statistics","declaring");
x.t("statistics","node");
x.t("statistics","client");
x.t("statistics","4.2.5.7.5");
x.t("statistics","statistic");
x.t("statistics","dynamic");
x.t("statistics","experiment");
x.t("statistics","appropriate");
x.t("statistics","application");
x.t("statistics","routing");
x.t("statistics","print");
x.t("statistics","protocol");
x.t("statistics","bellman-ford");
x.t("statistics","statistics");
x.t("statistics","server");
x.t("appdata","add");
x.t("appdata","appinfo");
x.t("appdata","stores");
x.t("appdata","section");
x.t("appdata","null");
x.t("appdata","include");
x.t("appdata","main");
x.t("appptr","pointer");
x.t("pass","incoming");
x.t("returns","size");
x.t("returns","address");
x.t("returns","null");
x.t("returns","free");
x.t("returns","broadcast");
x.t("returns","administrative");
x.t("returns","data");
x.t("returns","protocol");
x.t("returns","packet");
x.t("returns","pointer");
x.t("adding","new");
x.t("adding","traffic-generating");
x.t("adding","directly");
x.t("adding","code");
x.t("adding","myprotocol");
x.t("adding","dynamic");
x.t("adding","application");
x.t("adding","model");
x.t("subsequent","sections");
x.t("per","minute");
x.t("loopback","address");
x.t("loopback","application");
x.t("message_returnpacketsize","(msg)");
x.t("message_returnpacketsize","returns");
x.t("4-28","calls");
x.t("4-28","function");
x.t("partition_finalize","defined");
x.t("appcbrclientprintstats","node");
x.t("reader","appropriate");
x.t("4.2.6.6.1","describes");
x.t("4.2.6.6.1","declare");
x.t("4.2.6.6.1","modifying");
x.t("routing_admin_distance_bellmanford","case");
x.t("assigning","client");
x.t("message_packetalloc","node");
x.t("simulate","traffic");
x.t("simulate","large");
x.t("simulate","tcp");
x.t("simulate","data");
x.t("simulate","real");
x.t("definitions","common");
x.t("definitions","data");
x.t("associated","instance");
x.t("associated","interface");
x.t("associated","message");
x.t("associated","application");
x.t("names","components");
x.t("names","different");
x.t("names","based");
x.t("names","app_");
x.t("app_ftp_client","app_telnet_server");
x.t("maintains","state");
x.t("maintains","list");
x.t("maintains","information");
x.t("performed","part");
x.t("performed","looping");
x.t("performed","node");
x.t("performed","task");
x.t("performed","application");
x.t("performed","adding");
x.t("outline","developing");
x.t("outline","code");
x.t("covered","section");
x.t("modify","app_processevent");
x.t("modify","file");
x.t("modify","gui");
x.t("modify","function");
x.t("modify","qualnet_home");
x.t("modify","application");
x.t("modify","routing");
x.t("modify","appdata");
x.t("4.2.5.8.1","modifying");
x.t("4.2.5.8.1","write");
x.t("4.2.5.8.1","except");
x.t("towards","adding");
x.t("towards","statistics");
x.t("app_","designate");
x.t("designate","files");
x.t("therefore","protocol");
x.t("therefore","using");
x.t("app_myprotocol_sever","application");
x.t("tostype","tos");
x.t("tostype","priority");
x.t("getsimtime","(node)");
x.t("occur","periodic");
x.t("occur","inter-packet");
x.t("4-29","shows");
x.t("4-29","calling");
x.t("/app_mcbr.cpp","(developer_srcdir)");
x.t("4.2.6.6.2","describes");
x.t("4.2.6.6.2","implementing");
x.t("4.2.6.6.2","include");
x.t("networkroutingadmindistancetype","shown");
x.t("networkroutingadmindistancetype","networkroutinggetadmindistance");
x.t("networkroutingadmindistancetype","figure");
x.t("networkroutingadmindistancetype","defined");
x.t("networktype","interfacetype");
x.t("uniqueid","clocktype");
x.t("fisheye","example");
x.t("fisheye","clocktype");
x.t("fisheye","initialization");
x.t("fisheye","routing");
x.t("fisheye","protocol");
x.t("fisheye","fisheye");
x.t("including","compiling");
x.t("including","initialization");
x.t("including","running");
x.t("including","myprotocol");
x.t("struct","enum");
x.t("struct","struct_app_cbr_client_str");
x.t("struct","app_info");
x.t("struct","struct_app_cbr_data");
x.t("struct","struct_app_cbr_server_str");
x.t("struct","struct_app_str");
x.t("struct","app_timer");
x.t("struct","appdata");
x.t("connectionid","connection");
x.t("unsigned","short");
x.t("unsigned","tos");
x.t("app_tcpopenconnection","function");
x.t("4.2.5.8.2","function");
x.t("4.2.5.8.2","implementing");
x.t("4.2.5.8.2","finalization");
x.t("4.2.5.8.2","call");
x.t("describe","implement");
x.t("describe","tasks");
x.t("describe","collect");
x.t("describe","steps");
x.t("stdio.h","include");
x.t("insert","following");
x.t("&itemstosend","&itemsize");
x.t("(tostype)","tos");
x.t("achieved","timer");
x.t("app_udpsendnewheadervirtualdatawithpriority","sends");
x.t("app_udpsendnewheadervirtualdatawithpriority","node");
x.t("app_udpsendnewheadervirtualdatawithpriority","calling");
x.t("app_udpsendnewheadervirtualdatawithpriority","message");
x.t("info-","outgoinginterface");
x.t("info-","sourceaddr");
x.t("info-","sourceport");
x.t("info-","destaddr");
x.t("info-","priority");
x.t("info-","destport");
x.t("appcbrclientfinalize","shown");
x.t("appcbrclientfinalize","node");
x.t("routing_admin_distance_static","routing_admin_distance_ebgpv4");
x.t("routing_admin_distance_static","case");
x.t("appdata.myprotocol","null");
x.t("4-40","uses");
x.t("4-40","reading");
x.t("msg_app_periodicupdatealarm","handleperiodicupdatealarm");
x.t("msg_app_periodicupdatealarm","msg_app_checkroutetimeoutalarm");
x.t("remoteport","int");
x.t("generators","modeled");
x.t("generators","certain");
x.t("generators","qualnet");
x.t("generators","figure");
x.t("generates","fixed-size");
x.t("generates","tcp");
x.t("generates","traffic");
x.t("generates","realistic");
x.t("generates","multicast");
x.t("category","service-providing");
x.t("category","purpose");
x.t("entries","table");
x.t("entries","list");
x.t("entries","remove");
x.t("entries","app_myprotocol_client");
x.t("entries","forwarding");
x.t("4.2.5.8.3","void");
x.t("4.2.5.8.3","implementing");
x.t("4.2.5.8.3","call");
x.t("naming","coding");
x.t("naming","guidelines");
x.t("comprise","two");
x.t("even","compilation");
x.t("even","bellman-ford");
x.t("reading","user");
x.t("reading","configurable");
x.t("reading","protocol's");
x.t("reading","configuration");
x.t("time_converttoclock","(buf)");
x.t("time_converttoclock","(endtimestr)");
x.t("time_converttoclock","(starttimestr)");
x.t("time_converttoclock","defined");
x.t("/libraries/developer/src/app_ftp.cpp","functions");
x.t("mem_malloc","sizeof");
x.t("mem_malloc","allocate");
x.t("delivers","data");
x.t("delivers","packet");
x.t("sent","within");
x.t("sent","udp");
x.t("sent","number");
x.t("sent","enable");
x.t("sent","case");
x.t("buffer","string");
x.t("buffer","space");
x.t("cbrserver","appdatacbrserver");
x.t("cbrserver","cbrserver");
x.t("5.1.4","4.2.6");
x.t("fisheye-","parameter.interupdateinterval");
x.t("fisheye-","parameter.intraupdateinterval");
x.t("4-41","demonstrates");
x.t("4-41","adding");
x.t("routingmyprotocolfinalize","void");
x.t("routingmyprotocolfinalize","node");
x.t("routingmyprotocolfinalize","call");
x.t("portnumber","checks");
x.t("server","receives");
x.t("server","field");
x.t("server","uses");
x.t("server","app_initializeapplications");
x.t("server","node's");
x.t("server","single");
x.t("server","initialization");
x.t("server","initialized");
x.t("server","api");
x.t("server","tcp");
x.t("server","apptype");
x.t("server","tcp-based");
x.t("server","handle");
x.t("server","handles");
x.t("server","dispatcher");
x.t("server","input");
x.t("server","request");
x.t("server","functions");
x.t("server","respectively");
x.t("server","initializes");
x.t("server","function");
x.t("server","appdatacbrserver");
x.t("server","section");
x.t("server","calling");
x.t("server","client");
x.t("server","enable");
x.t("server","applayermyprotocolclient");
x.t("server","event");
x.t("server","appmyprotocolclientfinalize");
x.t("server","any_dest");
x.t("server","constant");
x.t("server","information");
x.t("server","data");
x.t("server","finalization");
x.t("server","appmyprotocolclientinit");
x.t("server","application");
x.t("server","case");
x.t("server","routing");
x.t("server","port");
x.t("server","protocol");
x.t("server","based");
x.t("server","statistics");
x.t("super","application");
x.t("flows","two-way");
x.t("rip","routing");
x.t("update","flags");
x.t("update","local");
x.t("update","value");
x.t("update","forwarding");
x.t("update","routing");
x.t("update","statistics");
x.t("update","entries");
x.t("contains","source");
x.t("contains","layer");
x.t("contains","cbr");
x.t("contains","utilities");
x.t("contains","prototypes");
x.t("contains","implementation");
x.t("contains","information");
x.t("contains","application");
x.t("contains","definitions");
x.t("app_placeholder","apptype");
x.t("app_placeholder","qualnet");
x.t("app_placeholder","case");
x.t("app_tcpsenddata","function");
x.t("app_isfreeport","functions");
x.t("app_isfreeport","node");
x.t("detail","timers");
x.t("detail","subsequent");
x.t("generally","header");
x.t("specify","source");
x.t("specify","cbr");
x.t("specify","configuration");
x.t("specify","value");
x.t("specify","prototype");
x.t("specify","finalization");
x.t("item","size");
x.t("item","interval");
x.t("item","transmitted");
x.t("seconds","cbr");
x.t("seconds","ending");
x.t("seconds","used");
x.t("gets","source");
x.t("gets","unique");
x.t("gets","packet");
x.t("deststring","&destnodeid");
x.t("deststring","&itemstosend");
x.t("appcbrclientnewcbrclient","calls");
x.t("appcbrclientnewcbrclient","initialization");
x.t("appcbrclientnewcbrclient","section");
x.t("appcbrclientnewcbrclient","node");
x.t("app_timer_close_sess","purpose");
x.t("difference","cbr");
x.t("user\u2019s","guide");
x.t("integrate","user_models");
x.t("integrate","protocol");
x.t("4.2.6.1","modify");
x.t("4.2.6.1","including");
x.t("higher","priority");
x.t("4-42","shows");
x.t("4-42","modifications");
}
