function FileData_Pairs(x)
{
x.t("interfaces","interface");
x.t("interfaces","addons");
x.t("interfaces","located");
x.t("/libraries","interfaces");
x.t("/libraries","called");
x.t("example","source");
x.t("example","hla");
x.t("example","header");
x.t("example","apphelloinit");
x.t("example","application");
x.t("example","protocol");
x.t("four","classes");
x.t("included","platform-independent");
x.t("included","excluded");
x.t("included","two");
x.t("library","placed");
x.t("library","network");
x.t("library","libraries");
x.t("library","developing");
x.t("library","activated");
x.t("library","makefile");
x.t("library","user_models");
x.t("library","4.10");
x.t("library","enable");
x.t("library","adds");
x.t("library","qualnet");
x.t("library","simplicity");
x.t("library","made");
x.t("library","include");
x.t("library","compilation");
x.t("library","described");
x.t("library","remainder");
x.t("library","including");
x.t("protocols","step");
x.t("protocols","section");
x.t("protocols","4.10.3");
x.t("protocols","models");
x.t("illustrate","process");
x.t("placed","top");
x.t("manner","similar");
x.t("else","strcmp");
x.t("else","figure");
x.t("else","strmcp");
x.t("app_processevent","shown");
x.t("app_processevent","node");
x.t("app_processevent","defined");
x.t("below","file");
x.t("2008","2012");
x.t("scalable","network");
x.t("files","interfaces");
x.t("files","included");
x.t("files","files");
x.t("files","create");
x.t("files","layer");
x.t("files","multiple");
x.t("files","traffic-generating");
x.t("files","libraries");
x.t("files","addons");
x.t("files","section");
x.t("files","added");
x.t("files","recompiling");
x.t("files","application");
x.t("files","recompile");
x.t("files","model");
x.t("files","contributed");
x.t("within","user");
x.t("subdirectory","qualnet_home");
x.t("shown","below");
x.t("shown","figure");
x.t("implement","code");
x.t("/addons","sake");
x.t("refer","four");
x.t("create","subdirectory");
x.t("create","makefiles");
x.t("create","file");
x.t("create","directory");
x.t("create","header");
x.t("source","files");
x.t("source","file");
x.t("source","code");
x.t("instance","qualnet");
x.t("community","source");
x.t("layer","protocols");
x.t("layer","multiple");
x.t("layer","initialization");
x.t("layer","functions");
x.t("layer","section");
x.t("layer","event");
x.t("layer","finalization");
x.t("layer","protocol");
x.t("variables","depend");
x.t("variables","call");
x.t("enum","app_ftp_server_data");
x.t("app_ftp_server_data","app_ftp_server");
x.t("required","compilation");
x.t("instructions","recompiling");
x.t("components","client");
x.t("components","application");
x.t("components","protocol");
x.t("components","following");
x.t("void","app_processevent");
x.t("void","app_initializeapplications");
x.t("void","apphelloprocessevent");
x.t("void","apphellofinalize");
x.t("void","apphelloinit");
x.t("void","app_finalize");
x.t("firstnode","const");
x.t("appstr","strcmp");
x.t("appstr","ftp");
x.t("appstr","mgen");
x.t("appstr","hello");
x.t("organized","virtually");
x.t("organized","pre-packaged");
x.t("user","community");
x.t("user","input");
x.t("user","install");
x.t("user","distribution");
x.t("discussed","section");
x.t("addon_user_models","include");
x.t("addon_user_models","figure");
x.t("technologies","organized");
x.t("special-purpose","custom");
x.t("conditional","user_models");
x.t("conditional","compilation");
x.t("/libraries/user_models/makefile-common","user_models_options");
x.t("/libraries/user_models/makefile-common","section");
x.t("shows","example");
x.t("app_getprotocoltype","node");
x.t("platforms","platform-specific");
x.t("platforms","makefile-unix");
x.t("interface","api");
x.t("interface","requires");
x.t("interface","functions");
x.t("interface","module");
x.t("interface","typically");
x.t("interface","model");
x.t("makefiles","library");
x.t("makefiles","directory");
x.t("makefiles","recompile");
x.t("app_initializeapplications","shown");
x.t("app_initializeapplications","section");
x.t("app_initializeapplications","node");
x.t("app_initializeapplications","defined");
x.t("(addon_includes)","(user_models_includes)");
x.t("(user_models_includes)","file");
x.t("(user_models_includes)","4.10.5.2");
x.t("sample","library");
x.t("app_hello.h","void");
x.t("app_hello.h","write");
x.t("app_hello.h","ifndef");
x.t("app_hello.h","endif");
x.t("app_hello.h","qualnet_home");
x.t("app_hello.h","4.10.4");
x.t("applist-","apptype");
x.t("applist-","appnext");
x.t("/libraries/user_models/makefile-windows","include");
x.t("external","library");
x.t("external","interface");
x.t("calls","conditional");
x.t("calls","model\u2019s");
x.t("4.2.5.6.2","write");
x.t("delete","object");
x.t("party","software");
x.t("multiple","source");
x.t("multiple","header");
x.t("multiple","layers");
x.t("sections","although");
x.t("put","qualnet_home");
x.t("details","contents");
x.t("details","reading");
x.t("contents","header");
x.t("new","library");
x.t("new","application");
x.t("items","enumeration");
x.t("../libraries/user_models/makefile-windows","linux");
x.t("rti","source");
x.t("desirable","libraries");
x.t("top","directory");
x.t("printf","apphelloprocessevent");
x.t("printf","apphellofinalize");
x.t("printf","apphelloinit");
x.t("printing","statistics");
x.t("/libraries/user_models/makefile-unix","include");
x.t("list","items");
x.t("list","summarizes");
x.t("list","application");
x.t("need","performed");
x.t("file","void");
x.t("file","app_hello.h");
x.t("file","makefile-windows");
x.t("file","app_hello.cpp");
x.t("file","section");
x.t("file","qualnet_home");
x.t("file","hello");
x.t("file","makefile-common");
x.t("file","application.cpp");
x.t("file","model");
x.t("initialization","function");
x.t("initialization","event");
x.t("stdlib.h","include");
x.t("api.h","include");
x.t("short","protocoltype");
x.t("actions","need");
x.t("add","new");
x.t("add","entry");
x.t("appinput.inputstrings","[i]");
x.t("(protocoltype)","case");
x.t("network","protocols");
x.t("network","technologies");
x.t("api","allow");
x.t("apphelloprocessevent","apphellofinalize");
x.t("apphelloprocessevent","node");
x.t("apphelloprocessevent","called.\\n");
x.t("entry","file");
x.t("entry","app_hello");
x.t("makefile-windows","windows");
x.t("remove","object");
x.t("features","illustrate");
x.t("features","qualnet");
x.t("recommended","separate");
x.t("hello_h","void");
x.t("hello_h","define");
x.t("apptype","shown");
x.t("apptype","figure");
x.t("apptype","case");
x.t("virtually","identical");
x.t("pre-packaged","libraries");
x.t("requires","user");
x.t("requires","third");
x.t("summarizes","actions");
x.t("traffic-generating","application");
x.t("app_ftp_server","app_ftp_client");
x.t("declare","data");
x.t("creating","makefiles");
x.t("creating","sample");
x.t("creating","modifying");
x.t("creating","addon");
x.t("creating","directory");
x.t("libraries","interfaces");
x.t("libraries","included");
x.t("libraries","library");
x.t("libraries","source");
x.t("libraries","modular");
x.t("libraries","user_models");
x.t("libraries","located");
x.t("functionality","layer");
x.t("functionality","multiple");
x.t("user_models_options","-duser_models_lib");
x.t("user_models_options","qualnet_home");
x.t("/libraries/user_models","create");
x.t("/libraries/user_models","code");
x.t("/libraries/user_models","called");
x.t("addon_options","(addon_options)");
x.t("addon_options","(user_models_options)");
x.t("ake","following");
x.t("protocol\u2019s","initialization");
x.t("protocol\u2019s","header");
x.t("protocol\u2019s","event");
x.t("protocol\u2019s","finalization");
x.t("handler","function");
x.t("handler","finalization");
x.t("initialize","random");
x.t("custom","modules");
x.t("component","hello");
x.t("apphellofinalize","initialization");
x.t("apphellofinalize","node");
x.t("apphellofinalize","called.\\n");
x.t("const","nodeinput");
x.t("enumeration","used");
x.t("dispatcher","function");
x.t("dispatcher","finalization");
x.t("programmer","develop");
x.t("modular","individual");
x.t("src","makefiles");
x.t("parameters","input");
x.t("parameters","hello");
x.t("appdata.appptr","applist");
x.t("integrating","new");
x.t("platform-independent","information");
x.t("/app_hello.cpp","user_models_includes");
x.t("prototypes","interface");
x.t("prototypes","models");
x.t("appinfo","applist");
x.t("appinfo","nextapp");
x.t("applist","nextapp");
x.t("applist","null");
x.t("applist","node-");
x.t("applist","break");
x.t("(user_models_dir)","file");
x.t("(user_models_dir)","/app_hello.cpp");
x.t("makefile-addons-unix","windows");
x.t("(addon_options)","(user_models_options)");
x.t("(user_models_options)","addon_srcs");
x.t("modifying","makefiles");
x.t("allow","qualnet");
x.t("third","party");
x.t("develop","library");
x.t("develop","components");
x.t("write","initialization");
x.t("write","event");
x.t("write","implementation");
x.t("write","finalization");
x.t("sake","brevity");
x.t("ifndef","hello_h");
x.t("app_hello","apphelloprocessevent");
x.t("app_hello","apptype");
x.t("app_hello","apphellofinalize");
x.t("app_hello","endif");
x.t("inclusion","addon");
x.t("structures","protocol");
x.t("input","file");
x.t("input","appropriate");
x.t("nextapp","applist-");
x.t("nextapp","switch");
x.t("nextapp","null");
x.t("developing","components");
x.t("developing","protocol");
x.t("addons","special-purpose");
x.t("addons","makefile");
x.t("addons","located");
x.t("addons","contributed");
x.t("functions","manner");
x.t("functions","source");
x.t("functions","initialization");
x.t("functions","section");
x.t("functions","header");
x.t("functions","hello");
x.t("functions","application");
x.t("functions","protocol");
x.t("app_hello.cpp","include");
x.t("random","variables");
x.t("activated","include");
x.t("store","configuration");
x.t("makefile","addons");
x.t("makefile","enable");
x.t("makefile","main");
x.t("makefile","platform");
x.t("makefile","described");
x.t("commands","remove");
x.t("install","hla");
x.t("respectively","figure");
x.t("routingbellmanfordlayer","node");
x.t("developed","scalable");
x.t("developed","contributed");
x.t("user_models_lib","else");
x.t("user_models_lib","app_hello");
x.t("user_models_lib","nextapp");
x.t("user_models_lib","switch");
x.t("user_models_lib","//switch//");
x.t("user_models_lib","read");
x.t("user_models_lib","case");
x.t("user_models_lib","app_placeholder");
x.t("depend","inclusion");
x.t("protocoltype","app_getprotocoltype");
x.t("protocoltype","protocoltype");
x.t("model\u2019s","functions");
x.t("-duser_models_lib","user_models_dir");
x.t("2012","scalable");
x.t("addon","interface");
x.t("addon","typedef");
x.t("implements","instance");
x.t("user_models","library");
x.t("user_models","create");
x.t("user_models","steps");
x.t("endif","addon_user_models");
x.t("endif","user_models_lib");
x.t("endif","figure");
x.t("endif","addon_link16");
x.t("endif","addon_mgen4");
x.t("function","app_processevent");
x.t("function","app_initializeapplications");
x.t("function","4.10.5");
x.t("function","apphelloinit");
x.t("function","application");
x.t("function","protocol");
x.t("function","app_finalize");
x.t("function","call");
x.t("different","types");
x.t("software","interface");
x.t("software","compilation");
x.t("define","hello_h");
x.t("specifies","source");
x.t("../libraries/user_models/makefile-unix","4.10.5.3");
x.t("instead","client");
x.t("step","identical");
x.t("/main/application.cpp","shown");
x.t("/main/application.cpp","void");
x.t("/main/application.cpp","read");
x.t("../libraries/user_models/src","user_models_srcs");
x.t("user_models_srcs","(user_models_dir)");
x.t("addon_srcs","(addon_srcs)");
x.t("addon_srcs","(user_models_srcs)");
x.t("detailed","instructions");
x.t("types","optional");
x.t("identical","libraries");
x.t("identical","including");
x.t("hla","interface");
x.t("hla","rti");
x.t("section","refer");
x.t("section","4.2.5.6.2");
x.t("section","4.10.1");
x.t("section","4.10.2");
x.t("section","4.2.5.2");
x.t("section","4.2.5");
x.t("section","4.10.3");
x.t("section","4.2.5.3");
x.t("section","4.10.4");
x.t("section","4.2.5.4");
x.t("section","4.10.5");
x.t("section","4.2.5.5");
x.t("section","4.2.5.7");
x.t("section","4.10.5.1");
x.t("section","4.2.5.5.2");
x.t("section","4.10.5.2");
x.t("section","4.10.5.3");
x.t("section","2.2");
x.t("section","2.3");
x.t("section","4.2.5.8.2");
x.t("directory","files");
x.t("directory","qualnet_home");
x.t("directory","header");
x.t("changes","code");
x.t("changes","made");
x.t("typedef","enum");
x.t("(addon_srcs)","(user_models_srcs)");
x.t("(user_models_srcs)","addon_includes");
x.t("qualnet_home","/libraries");
x.t("qualnet_home","/addons");
x.t("qualnet_home","/libraries/user_models/makefile-common");
x.t("qualnet_home","/libraries/user_models/makefile-windows");
x.t("qualnet_home","/libraries/user_models/makefile-unix");
x.t("qualnet_home","/libraries/user_models");
x.t("qualnet_home","/main/application.cpp");
x.t("qualnet_home","/contributed");
x.t("qualnet_home","/libraries/user_models/src");
x.t("qualnet_home","/main/makefile-addons-unix");
x.t("qualnet_home","/interfaces");
x.t("qualnet_home","/main/makefile-addons-windows");
x.t("4.10.1","creating");
x.t("4.10.1","include");
x.t("excluded","qualnet");
x.t("switch","applist-");
x.t("switch","(protocoltype)");
x.t("switch","user_models_lib");
x.t("switch","user_models");
x.t("switch","defined");
x.t("node","firstnode");
x.t("node","printf");
x.t("node","const");
x.t("node","appinfo");
x.t("node","applist");
x.t("node","endif");
x.t("node","node");
x.t("node","message");
x.t("node","msg");
x.t("node","nodeinput");
x.t("calling","hello");
x.t("calling","protocol");
x.t("added","shown");
x.t("4.10","creating");
x.t("code","library");
x.t("code","files");
x.t("code","external");
x.t("code","application");
x.t("code","collecting");
x.t("steps","described");
x.t("client","server");
x.t("4.10.2","develop");
x.t("4.10.2","including");
x.t("enable","library");
x.t("enable","changes");
x.t("4.2.5.2","details");
x.t("end","list");
x.t("4.2.5","except");
x.t("located","qualnet_home");
x.t("often","individual");
x.t("term","library");
x.t("adds","functionality");
x.t("adds","application");
x.t("user-created","library");
x.t("4.10.3","developing");
x.t("4.10.3","modify");
x.t("4.2.5.3","example");
x.t("appnext","figure");
x.t("user_models_dir","../libraries/user_models/src");
x.t("header","files");
x.t("header","source");
x.t("header","file");
x.t("4.10.4","calls");
x.t("4.10.4","calling");
x.t("4.10.4","integrate");
x.t("message","msg");
x.t("message","packet");
x.t("4.2.5.4","header");
x.t("strcmp","appstr");
x.t("recompiling","qualnet");
x.t("recompiling","windows");
x.t("qualnet","create");
x.t("qualnet","organized");
x.t("qualnet","user");
x.t("qualnet","external");
x.t("qualnet","delete");
x.t("qualnet","creating");
x.t("qualnet","section");
x.t("qualnet","4.10");
x.t("qualnet","windows");
x.t("qualnet","inter-operate");
x.t("qualnet","models");
x.t("qualnet","linux");
x.t("qualnet","described");
x.t("qualnet","easily");
x.t("qualnet","correctly");
x.t("qualnet","integrate");
x.t("4.10.5","desirable");
x.t("4.10.5","integrating");
x.t("variable","user_models_options");
x.t("event","handler");
x.t("event","dispatcher");
x.t("ifdef","addon_user_models");
x.t("ifdef","user_models_lib");
x.t("ifdef","addon_link16");
x.t("ifdef","addon_mgen4");
x.t("4.2.5.5","write");
x.t("ftp","else");
x.t("//switch//","figure");
x.t("simplicity","user_models");
x.t("simplicity","describe");
x.t("made","conditional");
x.t("made","code");
x.t("msg","short");
x.t("msg","switch");
x.t("msg","break");
x.t("null","appinfo");
x.t("null","applist");
x.t("node-","appdata.appptr");
x.t("windows","platforms");
x.t("windows","linux");
x.t("windows","following");
x.t("layers","recommended");
x.t("layers","following");
x.t("include","library");
x.t("include","app_hello.h");
x.t("include","../libraries/user_models/makefile-windows");
x.t("include","stdlib.h");
x.t("include","api.h");
x.t("include","protocol\u2019s");
x.t("include","prototypes");
x.t("include","functions");
x.t("include","../libraries/user_models/makefile-unix");
x.t("include","header");
x.t("include","protocol");
x.t("include","link16_cbr.h");
x.t("include","../libraries/user_models/makefile-common");
x.t("4.2.5.7","include");
x.t("configuration","parameters");
x.t("makefile-addons-windows","makefile-addons-unix");
x.t("modules","prototypes");
x.t("value","variable");
x.t("similar","adding");
x.t("[i]","appstr");
x.t("main","makefile");
x.t("/contributed","addons");
x.t("figure","4-213");
x.t("figure","4-214");
x.t("figure","4-215");
x.t("figure","4-216");
x.t("figure","4-217");
x.t("figure","4-218");
x.t("figure","4-219");
x.t("implementation","functions");
x.t("sscanf","appinput.inputstrings");
x.t("inter-operate","third");
x.t("compilation","example");
x.t("compilation","create");
x.t("compilation","switch");
x.t("process","component");
x.t("process","adding");
x.t("mgen","ifdef");
x.t("models","developed");
x.t("models","different");
x.t("models","often");
x.t("models","located");
x.t("models","qualnet");
x.t("models","models");
x.t("models","development");
x.t("distribution","within");
x.t("hello","app_initializeapplications");
x.t("hello","calls");
x.t("hello","list");
x.t("hello","initialization");
x.t("hello","programmer");
x.t("hello","respectively");
x.t("hello","instead");
x.t("hello","user-created");
x.t("hello","header");
x.t("hello","ifdef");
x.t("hello","event");
x.t("hello","application");
x.t("hello","finalization");
x.t("although","traffic-generating");
x.t("/libraries/user_models/src","example");
x.t("/libraries/user_models/src","create");
x.t("read","user");
x.t("read","store");
x.t("makefile-common","specifies");
x.t("linux","2008");
x.t("linux","platforms");
x.t("linux","ake");
x.t("linux","following");
x.t("platform-specific","information");
x.t("4.10.5.1","creating");
x.t("4.10.5.1","4.10.1");
x.t("4.10.5.1","include");
x.t("separate","header");
x.t("apphelloinit","apphelloprocessevent");
x.t("apphelloinit","node");
x.t("apphelloinit","application");
x.t("apphelloinit","called.\\n");
x.t("strmcp","appstr");
x.t("app_routing_bellmanford","routingbellmanfordlayer");
x.t("platform","makefile-addons-windows");
x.t("platform","main");
x.t("optional","features");
x.t("module","typically");
x.t("data","structures");
x.t("4.2.5.5.2","details");
x.t("4.10.5.2","include");
x.t("4.10.5.2","recompile");
x.t("information","included");
x.t("information","required");
x.t("defined","qualnet_home");
x.t("defined","value");
x.t("appropriate","variables");
x.t("4.10.5.3","recompiling");
x.t("4.10.5.3","4.10.5.1");
x.t("application","layer");
x.t("application","app_hello.h");
x.t("application","app_hello.cpp");
x.t("application","4.10.2");
x.t("application","end");
x.t("application","above");
x.t("application","called");
x.t("application","model");
x.t("finalization","functions");
x.t("finalization","function");
x.t("collecting","printing");
x.t("case","app_hello");
x.t("case","app_routing_bellmanford");
x.t("case","app_cbr_client");
x.t("/main/makefile-addons-unix","insert");
x.t("described","section");
x.t("described","detail");
x.t("application.cpp","include");
x.t("application.cpp","call");
x.t("called","src");
x.t("called","user_models");
x.t("called","application");
x.t("above","example");
x.t("app_cbr_client","appcbrclientfinalize");
x.t("protocol","implement");
x.t("protocol","components");
x.t("protocol","discussed");
x.t("protocol","list");
x.t("protocol","add");
x.t("protocol","declare");
x.t("protocol","functions");
x.t("protocol","section");
x.t("protocol","figure");
x.t("protocol","models");
x.t("protocol","hello");
x.t("protocol","described");
x.t("protocol","typically");
x.t("classes","optional");
x.t("two","files");
x.t("two","components");
x.t("app_finalize","shown");
x.t("app_finalize","node");
x.t("app_finalize","defined");
x.t("-i$","(user_models_dir)");
x.t("(.obj)","files");
x.t("typically","requires");
x.t("typically","implements");
x.t("typically","two");
x.t("/interfaces","contributed");
x.t("easily","without");
x.t("4-213","shows");
x.t("4-213","header");
x.t("makefile-unix","used");
x.t("correctly","integrate");
x.t("packet","void");
x.t("packet","printf");
x.t("4-214","source");
x.t("4-214","shows");
x.t("call","protocol\u2019s");
x.t("call","hello");
x.t("recompile","qualnet");
x.t("recompile","nmake");
x.t("recompile","clean");
x.t("user_models_includes","-i$");
x.t("addon_includes","(addon_includes)");
x.t("addon_includes","(user_models_includes)");
x.t("model","library");
x.t("model","multiple");
x.t("model","put");
x.t("model","directory");
x.t("model","adds");
x.t("model","hello");
x.t("individual","protocols");
x.t("individual","libraries");
x.t("following","list");
x.t("following","entry");
x.t("following","commands");
x.t("called.\\n","void");
x.t("called.\\n","figure");
x.t("4-215","add");
x.t("4-215","adding");
x.t("used","initialize");
x.t("used","linux");
x.t("except","hello");
x.t("link16_cbr.h","endif");
x.t("break","endif");
x.t("break","ifdef");
x.t("nodeinput","void");
x.t("nodeinput","printf");
x.t("nodeinput","endif");
x.t("nodeinput","nodeinput");
x.t("nodeinput","appinput.numlines");
x.t("4-216","ifdef");
x.t("4-216","including");
x.t("addon_link16","ifdef");
x.t("addon_link16","include");
x.t("appinput.numlines","sscanf");
x.t("2.2","detailed");
x.t("(.o)","files");
x.t("contributed","qualnet");
x.t("contributed","models");
x.t("development","source");
x.t("remainder","section");
x.t("adding","library");
x.t("adding","traffic-generating");
x.t("adding","hello");
x.t("adding","application");
x.t("subsequent","sections");
x.t("statistics","protocol");
x.t("4-217","function");
x.t("4-217","calling");
x.t("/main/makefile-addons-windows","insert");
x.t("2.3","detailed");
x.t("performed","developing");
x.t("performed","adding");
x.t("modify","file");
x.t("without","changes");
x.t("app_ftp_client","ifdef");
x.t("addon_mgen4","else");
x.t("addon_mgen4","endif");
x.t("4-218","function");
x.t("4-218","calling");
x.t("../libraries/user_models/makefile-common","addon_options");
x.t("nmake","section");
x.t("nmake","clean");
x.t("brevity","term");
x.t("describe","process");
x.t("including","makefile");
x.t("including","hello");
x.t("including","application");
x.t("4.2.5.8.2","write");
x.t("4-219","function");
x.t("4-219","calling");
x.t("appcbrclientfinalize","node");
x.t("insert","libraries");
x.t("reading","configuration");
x.t("detail","subsequent");
x.t("server","create");
x.t("server","simplicity");
x.t("integrate","library");
x.t("app_placeholder","apptype");
x.t("object","files");
x.t("object","(.obj)");
x.t("object","(.o)");
x.t("clean","section");
x.t("clean","nmake");
}
