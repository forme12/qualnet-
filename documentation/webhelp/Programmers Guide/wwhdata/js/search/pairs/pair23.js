function FileData_Pairs(x)
{
x.t("interfaces","currently");
x.t("interfaces","physical");
x.t("interfaces","node");
x.t("shadowing","channel");
x.t("shadowing","model\u2019s");
x.t("shadowing","loss");
x.t("shadowing","qualnet");
x.t("shadowing","value");
x.t("shadowing","models");
x.t("shadowing","offset");
x.t("shadowing","model");
x.t("shadowing","calculated");
x.t("characterizes","propagation");
x.t("/libraries/wireless/src","implement");
x.t("/libraries/wireless/src","however");
x.t("/libraries/wireless/src","code");
x.t("/libraries/wireless/src","folder");
x.t("example","shadowing");
x.t("example","fading");
x.t("example","path");
x.t("example","place");
x.t("example","implementation");
x.t("example","figure");
x.t("example","created");
x.t("example","following");
x.t("example","ricean");
x.t("coding","different");
x.t("/libraries","called");
x.t("prop_","designate");
x.t("statements","include");
x.t("included","parameter");
x.t("included","list");
x.t("transmits","signals");
x.t("receiver","due");
x.t("receiver","path");
x.t("receiver","wireless");
x.t("receiver","attributes");
x.t("coupling","loss");
x.t("library","example");
x.t("library","description");
x.t("library","details");
x.t("library","fast-rayleigh");
x.t("library","functions");
x.t("library","cost231-hata");
x.t("library","addon");
x.t("library","e.g");
x.t("library","qualnet");
x.t("library","constant");
x.t("library","called");
x.t("library","model");
x.t("library","modify");
x.t("indexed","source");
x.t("tirem","advanced");
x.t("tirem","terrain");
x.t("transmitter/receiver","pair");
x.t("spreading","frequency");
x.t("below","prop_numberchannels");
x.t("below","communicate");
x.t("below","struct");
x.t("available","communication");
x.t("available","generic");
x.t("available","qualnet");
x.t("wavelength","else");
x.t("wavelength","float");
x.t("wavelength","specified");
x.t("wavelength","(float)");
x.t("illustrate","different");
x.t("illustrate","process");
x.t("manner","helpful");
x.t("placed","library");
x.t("exist","create");
x.t("parameter","example");
x.t("parameter","specified");
x.t("parameter","declarations");
x.t("parameter","index");
x.t("parameter","declaration");
x.t("parameter","values");
x.t("parameter","specification");
x.t("parameter","itminitialize");
x.t("parameter","using");
x.t("humidity","itm");
x.t("else","else");
x.t("else","fading_db");
x.t("else","assert");
x.t("else","char");
x.t("else","shadowing_db");
x.t("else","strcmp");
x.t("else","//for//");
x.t("else","propprofile-");
x.t("proptxinfo","proptxinfo");
x.t("proptxinfo","node");
x.t("taking","account");
x.t("building","obstacles");
x.t("defines","events");
x.t("locked","4.7.4");
x.t("4.7.4.1","physical");
x.t("4.7.4.1","apis");
x.t("hints","naming");
x.t("just","string");
x.t("lead","unexpected");
x.t("propprofile","propprofile");
x.t("propprofile","numchannels");
x.t("propprofile","node-");
x.t("propprofile","propchannel");
x.t("propprofile","propprofile0");
x.t("propprofile","propchannel-");
x.t("shadowingmean_db","else");
x.t("shadowingmean_db","0.0");
x.t("shadowingmean_db","prop_default_shadowing_mean_db");
x.t("2008","2012");
x.t("lists","shadowing");
x.t("lists","fading");
x.t("lists","path");
x.t("lists","communication");
x.t("lists","different");
x.t("lists","header");
x.t("foliage","signals");
x.t("planning","spectrum");
x.t("files","placed");
x.t("files","create");
x.t("files","various");
x.t("files","having");
x.t("files","needed");
x.t("files","4.7.7.2");
x.t("files","prop_itm.cpp");
x.t("files","path");
x.t("files","wireless");
x.t("files","final");
x.t("files","contain");
x.t("files","4.7.5.4");
x.t("files","first");
x.t("files","clearly");
x.t("files","section");
x.t("files","qualnet_home");
x.t("files","important");
x.t("files","folder");
x.t("files","throughout");
x.t("files","header");
x.t("files","qualnet");
x.t("files","models");
x.t("files","examples");
x.t("files","case");
x.t("files","propagation");
x.t("files","described");
x.t("files","4.7.6.2");
x.t("files","created");
x.t("files","following");
x.t("files","folders");
x.t("files","associated");
x.t("files","generally");
x.t("implement","shadowing");
x.t("implement","prefix");
x.t("implement","fading");
x.t("implement","path");
x.t("implement","e.g");
x.t("implement","itm");
x.t("proppathprofile","pathprofile");
x.t("within","whose");
x.t("4.7.4.2","communication");
x.t("4.7.4.2","section");
x.t("resides","functionality");
x.t("subdirectory","qualnet_home");
x.t("needs","included");
x.t("shown","figure");
x.t("4-190","recompile");
x.t("4-190","adding");
x.t("scalable","network");
x.t("description","found");
x.t("description","add");
x.t("description","pathlossmodel");
x.t("description","data");
x.t("description","model");
x.t("effects","terrain");
x.t("effects","free-space");
x.t("effects","transmitter");
x.t("table","4-19");
x.t("table","4-20");
x.t("table","4-21");
x.t("obstruction","propagation");
x.t("inter-channel","interference");
x.t("bandwidths","frequency");
x.t("/include/propagation.h","file");
x.t("/include/propagation.h","section");
x.t("/include/propagation.h","qualnet_home");
x.t("create","files");
x.t("create","directory");
x.t("create","header");
x.t("create","output");
x.t("create","separate");
x.t("describes","apis");
x.t("describes","add");
x.t("describes","main");
x.t("refer","file");
x.t("currently","locked");
x.t("currently","transmitting");
x.t("currently","receiving");
x.t("currently","listening");
x.t("4.7.4.3","complete");
x.t("4.7.4.3","communication");
x.t("tree","compile");
x.t("user-specified","parameters");
x.t("/phy_cellular.cpp","(wireless_dir)");
x.t("4-191","enum");
x.t("4-191","adding");
x.t("propagation-fading-model","channelindex");
x.t("fromposition.common.c3","txantennaheight");
x.t("layer","entities");
x.t("layer","communication");
x.t("layer","communicate");
x.t("layer","section");
x.t("layer","protocol");
x.t("layer","additionally");
x.t("source","files");
x.t("source","tree");
x.t("source","file");
x.t("source","destination");
x.t("source","node");
x.t("source","header");
x.t("mobile-to-mobile","pathloss");
x.t("events","data");
x.t("various","communication");
x.t("enum","free_space");
x.t("enum","fadingmodel");
x.t("enum","pathlossmodel");
x.t("enum","shadowingmodel");
x.t("instance","parameter");
x.t("instance","data");
x.t("4.7.5.4.1","determining");
x.t("4.7.5.4.1","4.7.6.3");
x.t("4.7.5.4.1","call");
x.t("instructions","creating");
x.t("instructions","given");
x.t("having","header");
x.t("always","add");
x.t("any_address","nodeinput");
x.t("4-192","initializing");
x.t("4-192","read");
x.t("signalmsg","proptxinfo");
x.t("components","new");
x.t("components","path");
x.t("components","qualnet");
x.t("components","itm");
x.t("components","model");
x.t("components","definitions");
x.t("defense","interfaced");
x.t("shading","model");
x.t("void","prop_calculatepathloss");
x.t("void","prop_calculatefading");
x.t("void","prop_globalinit");
x.t("void","propvar");
x.t("void","itminitialize");
x.t("node\u2019s","wireless");
x.t("phy_signalendfromchannel","function");
x.t("snippets","look");
x.t("snippets","two");
x.t("4.7.5.4.2","write");
x.t("4.7.5.4.2","calling");
x.t("recommend","adding");
x.t("4-193","shows");
x.t("4-193","fading");
x.t("0.0","else");
x.t("0.0","figure");
x.t("0.0","propprofile-");
x.t("refers","attenuation");
x.t("okumura-hata","okumura-hata");
x.t("okumura-hata","pathloss");
x.t("micro-cell","pathloss");
x.t("enabled","co-channel");
x.t("estimates","effect");
x.t("double","wavelength");
x.t("double","elevationsamplingdistance");
x.t("double","fadingstretchingfactor");
x.t("double","shadowing_db");
x.t("double","pathloss_db");
x.t("double","shadowingdistribution");
x.t("double","value1");
x.t("double","channelimag");
x.t("double","channelreal");
x.t("double","arrayindexindouble");
x.t("double","refractivity");
x.t("discussed","snippets");
x.t("4.7.5.4.3","explains");
x.t("4.7.5.4.3","initialization");
x.t("4.7.5.4.3","implementing");
x.t("parameter-name","name");
x.t("parameter-name","index");
x.t("user","input");
x.t("propagation-ricean-k-factor","channelindex");
x.t("4-194","enum");
x.t("4-194","adding");
x.t("propagation-shadowing-model","channelindex");
x.t("propagation-shadowing-model",".\\n");
x.t("uses","user-specified");
x.t("uses","apis");
x.t("uses","four-dimensional");
x.t("uses","constant");
x.t("uses","information");
x.t("uses","lognormal");
x.t("pair","wireless");
x.t("pair","nodes");
x.t("line","sight");
x.t("transmitting","channel");
x.t("transmitting","node");
x.t("implemented","qualnet_home");
x.t("implemented","qualnet");
x.t("implemented","propagation.cpp");
x.t("phy_signalarrivalfromchannel","function");
x.t("prop_calculatepathloss","implemented");
x.t("prop_calculatepathloss","add");
x.t("prop_calculatepathloss","calculate");
x.t("prop_calculatepathloss","node");
x.t("prop_calculatepathloss","call");
x.t("shows","initialization");
x.t("shows","changes");
x.t("rxantennaheight","proppathprofile");
x.t("rxantennaheight","pathloss_db");
x.t("rxplatformheight","pathloss_db");
x.t("rxplatformheight","propprofile-");
x.t("rxplatformheight","pathprofile-");
x.t("4-195","void");
x.t("4-195","initializing");
x.t("shadowingdistribution.getrandomnumber","propprofile-");
x.t("physical","layer");
x.t("refinement","okumura-hata");
x.t("calculates","shadowing");
x.t("calculates","fading");
x.t("calculates","path");
x.t("calculates","attenuation");
x.t("calculates","pathloss");
x.t("calculates","path-loss");
x.t("calculates","effect");
x.t("center","department");
x.t("rayleigh","else");
x.t("rayleigh","rayleigh");
x.t("rayleigh","fading");
x.t("look","files");
x.t("look","complete");
x.t("provided","refer");
x.t("free_space","else");
x.t("free_space","pathloss_db");
x.t("free_space","case");
x.t("free_space","two_ray");
x.t("potentially","listen");
x.t("working","path");
x.t("necessary","create");
x.t("interface","functions");
x.t("statement","file");
x.t("statement","include");
x.t("partitiondata-","terraindata.datatype");
x.t("partitiondata-","propchannel");
x.t("configurable","parameters");
x.t("4-196","shows");
x.t("4-196","calling");
x.t("open","areas");
x.t("type","lists");
x.t("doesn\u2019t","already");
x.t("clocktype","currenttime");
x.t("fading_db","0.0");
x.t("fading_db","double");
x.t("fading_db","fadingmyfading");
x.t("assert","propprofile-");
x.t("strength","table");
x.t("strength","decays");
x.t("time","channel");
x.t("calculation","wireless");
x.t("calculation","functions");
x.t("calculation","function");
x.t("calculation","qualnet");
x.t("trace","pathprofile");
x.t("calls","initialization");
x.t("calls","api");
x.t("&elevationsamplingdistance","(wasfound)");
x.t("i.e","number");
x.t("sections","create");
x.t("sections","include");
x.t("however","recommended");
x.t("multiple","instances");
x.t("explains","read");
x.t("/phy_abstract.cpp","(wireless_dir)");
x.t("fadingmyfading","else");
x.t("fadingmyfading","myfading");
x.t("fadingmyfading","include");
x.t("unknown","propagation-shadowing-model");
x.t("entities","communicate");
x.t("entities","nodes");
x.t("channel","within");
x.t("channel","channel");
x.t("channel","indexes");
x.t("channel","phylistening");
x.t("channel","number");
x.t("channel","numsignals");
x.t("channel","index");
x.t("channel","fadingstretchinfactor");
x.t("channel","4.7.5");
x.t("channel","node");
x.t("channel","important");
x.t("channel","interference");
x.t("channel","shadowingdistribution");
x.t("channel","numphyslistening");
x.t("assumes","omni-directional");
x.t("assumes","separate");
x.t("height","frequency");
x.t("needed","path");
x.t("needed","communicate");
x.t("partial","description");
x.t("apis","available");
x.t("apis","listed");
x.t("apis","communication");
x.t("apis","parameters");
x.t("apis","section");
x.t("apis","several");
x.t("apis","used");
x.t("listed","below");
x.t("default","value");
x.t("default","abort");
x.t("elevationsamplingdistance","else");
x.t("elevationsamplingdistance","int");
x.t("elevationsamplingdistance","(float)");
x.t("elevationsamplingdistance","default_sampling_distance");
x.t("4.7.7.1","modify");
x.t("4.7.7.1","including");
x.t("aperture-medium","coupling");
x.t("advanced","propagation");
x.t("motion","transmitter/receiver");
x.t("dominant","signal");
x.t("details","inter-channel");
x.t("start","signal");
x.t("start","simulation");
x.t("certain","functions");
x.t("new","shadowing");
x.t("new","library");
x.t("new","fading");
x.t("new","path");
x.t("new","model");
x.t("prefix","file");
x.t("compiling","files");
x.t("4.7.7.2","initialization");
x.t("4.7.7.2","modify");
x.t("ground","reflection");
x.t("ground","constants");
x.t("two-ray","two-ray");
x.t("two-ray","pathloss");
x.t("prop_plmatrix.h","prop_plmatrix.cpp");
x.t("includes","following");
x.t("io_readdoubleinstance","io_readdoubleinstance");
x.t("io_readdoubleinstance","any_nodeid");
x.t("io_readdoubleinstance","functions");
x.t("io_readdoubleinstance","io_readintinstance");
x.t("4.7.7.3","shadowing");
x.t("4.7.7.3","model");
x.t("areas","refinement");
x.t("areas","urban");
x.t("file","example");
x.t("file","tirem");
x.t("file","parameter");
x.t("file","defines");
x.t("file","files");
x.t("file","source");
x.t("file","includes");
x.t("file","io_readdoubleinstance");
x.t("file","prop_mypathloss.h");
x.t("file","prop_itm.cpp");
x.t("file","calculate");
x.t("file","propagation.h");
x.t("file","may");
x.t("file","section");
x.t("file","prop_mypathloss.cpp");
x.t("file","format");
x.t("file","qualnet_home");
x.t("file","prop_globalinit");
x.t("file","qualnet");
x.t("file","include");
x.t("file","makefile-common");
x.t("file","itm");
x.t("file","data");
x.t("file","typical");
x.t("file","propagation.cpp");
x.t("file","called");
x.t("file","itminitialize");
x.t("file","relevant");
x.t("file","using");
x.t("file","names");
x.t("file","contains");
x.t("indexes","different");
x.t("indicates","node\u2019s");
x.t("indicates","start");
x.t("indicates","name");
x.t("indicates","end");
x.t("indicates","model");
x.t("list","shadowing");
x.t("list","apis");
x.t("list","fading");
x.t("list","summarizes");
x.t("list","path");
x.t("list","nodes");
x.t("list","contains");
x.t("determines","sampling");
x.t("found","api");
x.t("need","made");
x.t("need","performed");
x.t("initialization","path");
x.t("initialization","communication");
x.t("initialization","function");
x.t("initialization","section");
x.t("initialization","process");
x.t("user-developed","models");
x.t("stdlib.h","include");
x.t("api.h","initialization");
x.t("propagation-sampling-distance","100.0");
x.t("propagation-sampling-distance","channelindex");
x.t("(wasfound)","strcmp");
x.t("(wasfound)","propprofile-");
x.t("/phy_mypathloss.cpp","(wireless_dir)");
x.t("4.7.7.4","4.7.7.1");
x.t("4.7.7.4","integrating");
x.t("fading","shadowing");
x.t("fading","pair");
x.t("fading","trace");
x.t("fading","calculation");
x.t("fading","model-specific");
x.t("fading","occurs");
x.t("fading","model\u2019s");
x.t("fading","loss");
x.t("fading","value");
x.t("fading","models");
x.t("fading","model");
x.t("add","shadowing");
x.t("add","source");
x.t("add","components");
x.t("add","fading");
x.t("add","entry");
x.t("add","path");
x.t("add","mypathlossmoel");
x.t("add","myfadingmoel");
x.t("add","myshadowing");
x.t("add","end");
x.t("transit","transmitter");
x.t("friis","free-space");
x.t("organization","files");
x.t("complete","description");
x.t("complete","list");
x.t("complete","code");
x.t("numpathlosscalculation","numphyslistenable");
x.t("actions","need");
x.t("/routing_aodv.cpp","(wireless_dir)");
x.t("due","shadowing");
x.t("due","effects");
x.t("due","motion");
x.t("due","fading");
x.t("due","path");
x.t("suburban","open");
x.t("suburban","suburban");
x.t("suburban","environment");
x.t("suburban","pathloss");
x.t("line-of-sight","path");
x.t("line-of-sight","nodes");
x.t("line-of-sight","propagation");
x.t("longley-rice","model");
x.t("api","functions");
x.t("api","reference");
x.t("api","prop_releasesignal");
x.t("guide","4.7.4.1");
x.t("simple","may");
x.t("prop_mypathloss.h","statements");
x.t("prop_mypathloss.h","implement");
x.t("prop_mypathloss.h","source");
x.t("prop_mypathloss.h","void");
x.t("prop_mypathloss.h","contain");
x.t("prop_mypathloss.h","4.7.5.3");
x.t("entry","myfading");
x.t("entry","myshadowing");
x.t("entry","mypathloss");
x.t("applies","instances");
x.t("applies","nodes");
x.t("propagation-humidity","decide");
x.t("initialized","start");
x.t("initialized","protocol");
x.t("float","rxantennaheight");
x.t("float","fading_db");
x.t("float","txantennaheight");
x.t("according","myfading");
x.t("according","myshadowing");
x.t("network","technologies");
x.t("reflection","aperture-medium");
x.t("reflection","flat");
x.t("reflection","characteristics");
x.t("macro-cellular","systems");
x.t("atmospheric","ground");
x.t("flat","earth");
x.t("prop_itm.cpp","files");
x.t("prop_itm.cpp","folder");
x.t("prop_itm.cpp","prop_itm.h");
x.t("recommended","user-developed");
x.t("recommended","separate");
x.t("paramn","valuen");
x.t("paramn","names");
x.t("urban","suburban");
x.t("urban","canyon");
x.t("urban","metropolitan");
x.t("urban","propagation");
x.t("requires","terrain");
x.t("co-channel","inter-channel");
x.t("co-channel","interference");
x.t("channels","inter-channel");
x.t("channels","different");
x.t("channels","prop_channelwavelength");
x.t("specified","channel");
x.t("specified","input");
x.t("specified","format");
x.t("specified","prop_globalinit");
x.t("specified","qualnet");
x.t("specified","configuration");
x.t("summarizes","actions");
x.t("mypathloss\u2019s","function");
x.t("directly","files");
x.t("true","&wasfound");
x.t("account","effects");
x.t("account","co-channel");
x.t("account","propagation");
x.t("path","table");
x.t("path","reflection");
x.t("path","signal");
x.t("path","loss");
x.t("overlap","channels");
x.t("wide","band");
x.t("common","communication");
x.t("common","sources");
x.t("name","parameter");
x.t("name","files");
x.t("name","indicates");
x.t("name","enumeration");
x.t("name","different");
x.t("name","protocol");
x.t("name","model");
x.t("prop_numberchannels","function");
x.t("settings","files");
x.t("guidelines","section");
x.t("guidelines","qualnet");
x.t("functionality","component");
x.t("creating","files");
x.t("creating","activating");
x.t("/libraries/user_models","called");
x.t("enclosed","square");
x.t("terraindata.datatype","no_terrain_data");
x.t("prop_default_shadowing_mean_db","//for//");
x.t("communication","line");
x.t("communication","physical");
x.t("communication","communication");
x.t("communication","medium");
x.t("wireless","shadowing");
x.t("wireless","interfaces");
x.t("wireless","library");
x.t("wireless","inter-channel");
x.t("wireless","okumura-hata");
x.t("wireless","rayleigh");
x.t("wireless","fading");
x.t("wireless","communication");
x.t("wireless","street-m-to-m");
x.t("wireless","itm");
x.t("wireless","lognormal");
x.t("wireless","propagation");
x.t("wireless","model");
x.t("wireless","ricean");
x.t("tasks","need");
x.t("tasks","internal");
x.t("param1","paramn");
x.t("param1","value1");
x.t("initialize","model");
x.t("char","buf");
x.t("char","errormessage");
x.t("any_nodeid","any_address");
x.t("permittivity","propprofile-");
x.t("1.0e6","propprofile-");
x.t("4-19","lists");
x.t("4-19","pathloss");
x.t("distance","humidity");
x.t("distance","wavelength");
x.t("distance","(double)");
x.t("distance","transmitter");
x.t("street-m-to-m","street");
x.t("enumeration","type");
x.t("enumeration","fadingmodel");
x.t("enumeration","pathlossmodel");
x.t("enumeration","shadowingmodel");
x.t("proprxinfo","rxsignallist");
x.t("fadingstretchingfactor","proppathprofile");
x.t("listen","channel");
x.t("limit","node");
x.t("perform","tasks");
x.t("component","file");
x.t("component","appropriate");
x.t("part","library");
x.t("part","initialization");
x.t("brackets","specification");
x.t("brackets","used");
x.t("100.0","propagation-humidity");
x.t("qualify","parameter");
x.t("accordingly","path");
x.t("const","nodeinput");
x.t("initializing","shadowing");
x.t("initializing","fading");
x.t("toposition.common.c3","rxantennaheight");
x.t("attenuation","due");
x.t("attenuation","signal");
x.t("attenuation","caused");
x.t("provides","api");
x.t("provides","several");
x.t("provides","outline");
x.t("parameters","example");
x.t("parameters","table");
x.t("parameters","description");
x.t("parameters","specified");
x.t("parameters","path");
x.t("parameters","accordingly");
x.t("parameters","sets");
x.t("parameters","write");
x.t("parameters","input");
x.t("parameters","mypathloss");
x.t("parameters","section");
x.t("parameters","identifier");
x.t("parameters","qualnet");
x.t("parameters","configuration");
x.t("parameters","read");
x.t("parameters","used");
x.t("fast-rayleigh","else");
x.t("fast-rayleigh","fast");
x.t("none","else");
x.t("none","propprofile-");
x.t("none","ricean");
x.t("boolean","array");
x.t("model-specific","configuration");
x.t("programmer","name");
x.t("helpful","examine");
x.t("src","create");
x.t("integrating","path");
x.t("integrating","model");
x.t("/libraries/wireless/makefile-common","shown");
x.t("irregular","terrain");
x.t("antenna","height");
x.t("constants","model");
x.t("statistical","model");
x.t("amplitude","receiver");
x.t("macros","functions");
x.t("prototypes","interface");
x.t("prototypes","api");
x.t("prototypes","functions");
x.t("generic","initialization");
x.t("generic","communication");
x.t("generic","functions");
x.t("place","initialization");
x.t("place","path");
x.t("place","folder");
x.t("indicate","error");
x.t("standard","library");
x.t("declarations","described");
x.t("&wasfound","&elevationsamplingdistance");
x.t("&wasfound","buf");
x.t("&wasfound","&kfactor");
x.t("&wasfound","&refractivity");
x.t("profile","bool");
x.t("mypathlossmoel","qualnet");
x.t("/antenna_global.cpp","(wireless_dir)");
x.t("destination","urban");
x.t("destination","node");
x.t("fast","rayleigh");
x.t("fast","variation");
x.t("stack","qualnet_home");
x.t("stack","node");
x.t("explained","below");
x.t("decide","format");
x.t("rest","section");
x.t("prop_plmatrix.cpp","files");
x.t("mypathlossinitialize","initialization");
x.t("mypathlossinitialize","path");
x.t("mypathlossinitialize","header");
x.t("mypathlossinitialize","propchannel");
x.t("address","parameter");
x.t("txantennaheight","rxplatformheight");
x.t("txantennaheight","float");
x.t("final","step");
x.t("sprintf","errormessage");
x.t("pairs","located");
x.t("examine","files");
x.t("examine","implementation");
x.t("fields","structure");
x.t("int","numpathlosscalculation");
x.t("int","arrayindex");
x.t("int","numsignals");
x.t("int","numsamples");
x.t("int","climate");
x.t("int","numphyslistenable");
x.t("int","numphyslistening");
x.t("int","channelindex");
x.t("int","nodelistid");
x.t("array","indicates");
x.t("write","initialization");
x.t("4.7.5.1","header");
x.t("4.7.5.1","naming");
x.t("string","mypathloss");
x.t("string","itm");
x.t("sets","model");
x.t("myfading","list");
x.t("myfading","fadingmodel");
x.t("myfading","calculating");
x.t("myfading","function");
x.t("myfading","section");
x.t("myfading","prop_globalinit");
x.t("myfading","qualnet");
x.t("myfading","figure");
x.t("myfading","read");
x.t("myfading","propprofile-");
x.t("myfading","//for//");
x.t("arrayindex","double");
x.t("three","components");
x.t("receiving","i.e");
x.t("receiving","channel");
x.t("receiving","nodes");
x.t("contain","detailed");
x.t("contain","following");
x.t("structures","provided");
x.t("structures","needed");
x.t("structures","communication");
x.t("structures","defined");
x.t("structures","note");
x.t("structures","relevant");
x.t("input","files");
x.t("input","file");
x.t("input","specified");
x.t("understand","path");
x.t("4.7.5.2","creating");
x.t("4.7.5.2","include");
x.t("4.7.5.2","modify");
x.t("problems","even");
x.t("math.h","include");
x.t("data\\n","itminitialize");
x.t("wireless_dir","/phy_mypathloss.cpp");
x.t("developing","path");
x.t("developing","protocol");
x.t("developing","adding");
x.t("signals","channel");
x.t("signals","urban");
x.t("signals","nodes");
x.t("231-hata","pathloss");
x.t("rough","earth");
x.t("band","jamming");
x.t("functions","available");
x.t("functions","source");
x.t("functions","phy_signalarrivalfromchannel");
x.t("functions","needed");
x.t("functions","io_readdoubleinstance");
x.t("functions","structures");
x.t("functions","4.7.3");
x.t("functions","code");
x.t("functions","header");
x.t("functions","read");
x.t("functions","defined");
x.t("functions","contained");
x.t("functions","used");
x.t("functions","turn");
x.t("functions","performed");
x.t("functions","therefore");
x.t("functions","insert");
x.t("randomdistribution","double");
x.t("random","number");
x.t("4.7.5.3","decide");
x.t("4.7.5.3","including");
x.t("store","configuration");
x.t("unexpected","problems");
x.t("[channelindex]",".profile");
x.t("[channelindex]","channelindex");
x.t("node2-","partitiondata-");
x.t("shadowing_db","0.0");
x.t("shadowing_db","shadowingmyshadowing");
x.t("shadowing_db","return");
x.t("shadowing_db","propprofile-");
x.t("shadowing_db","propdata-");
x.t("cost231-hata","cost");
x.t("calculate","shadowing");
x.t("calculate","fading");
x.t("calculate","line-of-sight");
x.t("calculate","path");
x.t("calculate","signal");
x.t("frequency","planning");
x.t("frequency","atmospheric");
x.t("frequency","overlap");
x.t("frequency","1.0e6");
x.t("frequency","hopping");
x.t("frequency","bandwidth");
x.t("fadingmodel","shown");
x.t("fadingmodel","enumeration");
x.t("fadingmodel","none");
x.t("fadingmodel","myfading");
x.t("fadingmodel","io_readstringinstance");
x.t("fadingmodel","defined");
x.t("fadingmodel","ricean");
x.t("phylistening","boolean");
x.t("phylistening","bool");
x.t("strongly","recommended");
x.t("error","unknown");
x.t("error","adding");
x.t("4.7.5.4","initialization");
x.t("simulates","propagation");
x.t("spectrum","spreading");
x.t("spectrum","center");
x.t("spectrum","management");
x.t("spectrum","analysis");
x.t("occurs","line");
x.t("occurs","transmitting");
x.t("4.7.5.5","implement");
x.t("4.7.5.5","path");
x.t("4.7.5.5","include");
x.t("keeping","naming");
x.t("pathloss_db","propprofile");
x.t("pathloss_db","shadowing_db");
x.t("pathloss_db","pathlossitm");
x.t("pathloss_db","prop_pathlossfreespace");
x.t("pathloss_db","prop_pathlosstworay");
x.t("pathloss_db","pathlossmypathloss");
x.t("prop_calculatefading","implemented");
x.t("prop_calculatefading","add");
x.t("prop_calculatefading","calculate");
x.t("prop_calculatefading","message");
x.t("prop_calculatefading","call");
x.t("calculating","fading");
x.t("4.7.1","communication");
x.t("four-dimensional","matrix");
x.t("earth","pathloss");
x.t("earth","model");
x.t("4.7.5.6","model");
x.t("4.7.5.6","including");
x.t("appears","names");
x.t("first","step");
x.t("developed","simple");
x.t("clearly","indicates");
x.t("/manet_packet.cpp","figure");
x.t("myfadingmoel","qualnet");
x.t("cost","231-hata");
x.t("cost","231-walfish-ikegami");
x.t("number","channels");
x.t("number","wireless");
x.t("number","signals");
x.t("number","distribution");
x.t("number","nodes");
x.t("4.7.2","communication");
x.t("briefly","examine");
x.t("communicate","physical");
x.t("communicate","communication");
x.t("communicate","different");
x.t("communicate","phy");
x.t("numsignals","proprxinfo");
x.t("numsignals","number");
x.t("model\u2019s","shadowing");
x.t("model\u2019s","source");
x.t("model\u2019s","initialization");
x.t("model\u2019s","fading");
x.t("model\u2019s","name");
x.t("model\u2019s","path");
x.t("model\u2019s","header");
x.t("model\u2019s","configuration");
x.t("gui","new");
x.t("gui","settings");
x.t("gui","modify");
x.t("4.7.5.7","integrating");
x.t("4.7.5.7","4.7.5.1");
x.t("buf","rayleigh");
x.t("buf","(wasfound)");
x.t("buf","none");
x.t("buf","fast-rayleigh");
x.t("buf","myfading");
x.t("buf","myshadowing");
x.t("buf","mypathloss");
x.t("buf","[max_string_length]");
x.t("buf","constant");
x.t("buf","free-space");
x.t("buf","itm");
x.t("buf","lognormal");
x.t("buf","error_reporterror");
x.t("buf","ricean");
x.t("computed","together");
x.t("2012","scalable");
x.t("signal","obstruction");
x.t("signal","4.7.4.3");
x.t("signal","phy_signalendfromchannel");
x.t("signal","strength");
x.t("signal","dominant");
x.t("signal","transit");
x.t("signal","attenuation");
x.t("signal","amplitude");
x.t("signal","node");
x.t("signal","seen");
x.t("signal","phy");
x.t("cost231-walfish-ikegami","cost");
x.t("adjacent","streets");
x.t("comments","functions");
x.t("4.7.3","example");
x.t("4.7.3","communication");
x.t("propagation.h","4.7.4.2");
x.t("propagation.h","complete");
x.t("propagation.h","communication");
x.t("propagation.h","section");
x.t("implements","random");
x.t("function","4.7.5.4.3");
x.t("function","prop_calculatepathloss");
x.t("function","calculates");
x.t("function","fadingmyfading");
x.t("function","io_readdoubleinstance");
x.t("function","indicates");
x.t("function","initialization");
x.t("function","4.7.7.4");
x.t("function","path");
x.t("function","communication");
x.t("function","calculate");
x.t("function","4.7.5.5");
x.t("function","prop_calculatefading");
x.t("function","4.7.5.6");
x.t("function","function");
x.t("function","shadowingmyshadowing");
x.t("function","mypathloss");
x.t("function","return");
x.t("function","prop_globalinit");
x.t("function","given");
x.t("function","figure");
x.t("function","read");
x.t("function","itm");
x.t("function","propagation");
x.t("function","4.7.6.5");
x.t("function","model");
x.t("function","returns");
x.t("function","pathlossmypathloss");
x.t("user_models","library");
x.t("user_models","subdirectory");
x.t("user_models","section");
x.t("user_models","follow");
x.t("determining","fading");
x.t("determining","path");
x.t("elevationarray","txplatformheight");
x.t("txplatformheight","rxplatformheight");
x.t("txplatformheight","(float)");
x.t("txplatformheight","pathprofile-");
x.t("addon","example");
x.t("addon","add");
x.t("currenttime","float");
x.t("myshadowing","else");
x.t("myshadowing","list");
x.t("myshadowing","calculate");
x.t("myshadowing","function");
x.t("myshadowing","section");
x.t("myshadowing","qualnet");
x.t("myshadowing","figure");
x.t("myshadowing","propprofile-");
x.t("myshadowing","shadowingmodel");
x.t("shadowingmyshadowing","else");
x.t("shadowingmyshadowing","myshadowing");
x.t("shadowingmyshadowing","include");
x.t("may","lead");
x.t("may","necessary");
x.t("may","due");
x.t("may","model-specific");
x.t("different","shadowing");
x.t("different","bandwidths");
x.t("different","components");
x.t("different","channel");
x.t("different","certain");
x.t("different","fading");
x.t("different","channels");
x.t("different","communication");
x.t("different","steps");
x.t("different","pathloss");
x.t("different","frequencies");
x.t("different","layers");
x.t("4.7.4","communication");
x.t("io_readstringinstance","any_nodeid");
x.t("io_readstringinstance","functions");
x.t("io_readstringinstance","read");
x.t("reads","user-specified");
x.t("reads","values");
x.t("reads","factor");
x.t("reads","names");
x.t("detailed","description");
x.t("detailed","comments");
x.t("characteristics","path");
x.t("characteristics","pathloss");
x.t("characteristics","propagation");
x.t("pathloss-matrix","matrix-based");
x.t("index","instance");
x.t("index","frequency");
x.t("index","parameter-value");
x.t("index","used");
x.t("stores","default");
x.t("stores","characteristics");
x.t("stores","information");
x.t("fadingstretchinfactor","variable");
x.t("4.7.5","adding");
x.t("mypathloss","list");
x.t("mypathloss","param1");
x.t("mypathloss","mypathlossinitialize");
x.t("mypathloss","string");
x.t("mypathloss","pathloss_db");
x.t("mypathloss","function");
x.t("mypathloss","section");
x.t("mypathloss","qualnet");
x.t("mypathloss","pathlossmodel");
x.t("mypathloss","include");
x.t("mypathloss","value1");
x.t("mypathloss","propprofile-");
x.t("mypathloss","names");
x.t("step","integrating");
x.t("step","similar");
x.t("step","towards");
x.t("4-186","typedef");
x.t("4-186","adding");
x.t("loss","implement");
x.t("loss","refers");
x.t("loss","pair");
x.t("loss","calculation");
x.t("loss","fading");
x.t("loss","according");
x.t("loss","model-specific");
x.t("loss","parameters");
x.t("loss","model\u2019s");
x.t("loss","computed");
x.t("loss","may");
x.t("loss","include");
x.t("loss","absorption");
x.t("loss","value");
x.t("loss","matrix");
x.t("loss","models");
x.t("loss","refraction");
x.t("loss","done");
x.t("loss","model");
x.t("loss","following");
x.t("section","illustrate");
x.t("section","4.7.4.1");
x.t("section","4.7.4.2");
x.t("section","lists");
x.t("section","describes");
x.t("section","4.7.4.3");
x.t("section","4.7.5.4.1");
x.t("section","4.7.5.4.2");
x.t("section","4.7.5.4.3");
x.t("section","assumes");
x.t("section","4.7.7.1");
x.t("section","4.7.7.2");
x.t("section","4.7.7.3");
x.t("section","4.7.7.4");
x.t("section","provides");
x.t("section","4.7.5.1");
x.t("section","4.7.5.2");
x.t("section","4.7.5.3");
x.t("section","4.7.5.5");
x.t("section","4.7.5.6");
x.t("section","briefly");
x.t("section","4.7.5.7");
x.t("section","4.7.3");
x.t("section","4.10");
x.t("section","4.10.5");
x.t("section","gives");
x.t("section","4.7.6.1");
x.t("section","4.7.6.2");
x.t("section","4.7.6.3");
x.t("section","4.7.6.4");
x.t("section","4.7.6.5");
x.t("section","describe");
x.t("section","5.1.4");
x.t("231-walfish-ikegami","pathloss");
x.t("changes","need");
x.t("changes","common");
x.t("changes","characteristics");
x.t("narrow","band");
x.t("internal","communication");
x.t("format","fading");
x.t("format","path");
x.t("format","initialize");
x.t("format","step");
x.t("format","identifier");
x.t("format","specifying");
x.t("compile","section");
x.t("compile","created");
x.t("directory","qualnet_home");
x.t("prop_mypathloss.cpp","void");
x.t("prop_mypathloss.cpp","contain");
x.t("prop_mypathloss.cpp","strongly");
x.t("prop_mypathloss.cpp","constant");
x.t("typedef","enum");
x.t("4-187","mypathlossinitialize");
x.t("4-187","calling");
x.t("implementing","path");
x.t("/prop_plmatrix.cpp","(wireless_dir)");
x.t("4.7.6","adding");
x.t("node","currently");
x.t("node","potentially");
x.t("node","initialized");
x.t("node","destination");
x.t("node","int");
x.t("node","receiving");
x.t("node","node");
x.t("node","identifier");
x.t("node","located");
x.t("node","node2");
x.t("node","simulation");
x.t("node","maintains");
x.t("streets","urban");
x.t("qualnet_home","/libraries/wireless/src");
x.t("qualnet_home","/libraries");
x.t("qualnet_home","/include/propagation.h");
x.t("qualnet_home","/libraries/user_models");
x.t("qualnet_home","/libraries/wireless/makefile-common");
x.t("qualnet_home","/libraries/user_models/src");
x.t("qualnet_home","/main/phy.cpp");
x.t("qualnet_home","/include/api.h");
x.t("qualnet_home","/libraries/wireless/src/prop_itm.cpp");
x.t("qualnet_home","/include/fileio.h");
x.t("qualnet_home","/libraries/wireless/src/propagation.cpp");
x.t("qualnet_home","/include/phy.h");
x.t("important","fields");
x.t("important","organize");
x.t("limitedinterference","randomdistribution");
x.t("prop_channelwavelength","function");
x.t("added","directly");
x.t("added","qualnet");
x.t("calling","shadowing");
x.t("calling","path");
x.t("4-188","shows");
x.t("4-188","itm");
x.t("switch","propprofile-");
x.t("4.7.7","adding");
x.t("scenarios","line");
x.t("code","files");
x.t("code","components");
x.t("code","snippets");
x.t("code","added");
x.t("code","itm");
x.t("flat_binning","fadingmodel");
x.t("flat_binning","mypathloss");
x.t("reference","guide");
x.t("enable","phy");
x.t("end","lists");
x.t("end","signal");
x.t("steps","developing");
x.t("steps","described");
x.t("4.10","instructions");
x.t("organize","code");
x.t("identifier","parameter-name");
x.t("identifier","address");
x.t("identifier","index");
x.t("identifier","node");
x.t("identifier","subnet");
x.t("parameter-value","identifier");
x.t("parameter-value","value");
x.t("4-189","shows");
x.t("4-189","calling");
x.t("follow","instructions");
x.t("located","adjacent");
x.t("located","rxsignallist");
x.t("folder","qualnet_home");
x.t("folder","contains");
x.t("bool","phylistening");
x.t("bool","limitedinterference");
x.t("bool","wasfound");
x.t("return","default");
x.t("return","path");
x.t("return","number");
x.t("return","return");
x.t("return","figure");
x.t("return","case");
x.t("numchannels","fadingmodel");
x.t("numchannels","pathlossmodel");
x.t("numchannels","shadowingmodel");
x.t("wireless_srcs","(wireless_dir)");
x.t("&kfactor","(wasfound)");
x.t("decays","square");
x.t("square","distance");
x.t("square","brackets");
x.t("known","longley-rice");
x.t("environment","takes");
x.t("caused","signal");
x.t("header","files");
x.t("header","source");
x.t("header","file");
x.t("listening","channel");
x.t("throughout","section");
x.t("prop_globalinit","example");
x.t("prop_globalinit","shown");
x.t("prop_globalinit","implemented");
x.t("prop_globalinit","initialization");
x.t("prop_globalinit","reads");
x.t("prop_globalinit","section");
x.t("prop_globalinit","partitiondata");
x.t("prop_globalinit","include");
x.t("prop_globalinit","called");
x.t("given","name");
x.t("given","section");
x.t("[max_string_length]","sprintf");
x.t("[max_string_length]","propchannel");
x.t("strcmp","buf");
x.t("numsamples","pathloss_db");
x.t("numsamples","elevationarray");
x.t("numsamples","pathprofile-");
x.t("message","signalmsg");
x.t("qualnet","shadowing");
x.t("qualnet","illustrate");
x.t("qualnet","hints");
x.t("qualnet","needs");
x.t("qualnet","tree");
x.t("qualnet","source");
x.t("qualnet","shading");
x.t("qualnet","fadingmyfading");
x.t("qualnet","file");
x.t("qualnet","fading");
x.t("qualnet","add");
x.t("qualnet","communication");
x.t("qualnet","component");
x.t("qualnet","provides");
x.t("qualnet","simulates");
x.t("qualnet","4.7.1");
x.t("qualnet","gui");
x.t("qualnet","4.7.5.7");
x.t("qualnet","signal");
x.t("qualnet","shadowingmyshadowing");
x.t("qualnet","steps");
x.t("qualnet","qualnet");
x.t("qualnet","pathloss");
x.t("qualnet","configuration");
x.t("qualnet","making");
x.t("qualnet","4.7");
x.t("qualnet","modifications");
x.t("qualnet","corresponding");
x.t("qualnet","model");
x.t("qualnet","following");
x.t("qualnet","modify");
x.t("qualnet","pathlossmypathloss");
x.t("interference","inter-channel");
x.t("interference","path");
x.t("interference","occurs");
x.t("interference","taken");
x.t("interference","model");
x.t("pathloss","source");
x.t("pathloss","calculation");
x.t("pathloss","wireless");
x.t("pathloss","models");
x.t("pathloss","values");
x.t("pathloss","model");
x.t("communicating","across");
x.t("considers","line-of-sight");
x.t("considers","terrain");
x.t("frequencies","different");
x.t("e.g","folder");
x.t("e.g","implementation");
x.t("pathprofile","void");
x.t("pathprofile","double");
x.t("pathprofile","data");
x.t("variable","determines");
x.t("variable","implements");
x.t("whose","propagation");
x.t("4.10.5","integrate");
x.t("together","path");
x.t("seen","receiver");
x.t("taken","account");
x.t("pathlossmodel","shown");
x.t("pathlossmodel","free_space");
x.t("pathlossmodel","enumeration");
x.t("pathlossmodel","io_readstringinstance");
x.t("pathlossmodel","mypathloss");
x.t("pathlossmodel","figure");
x.t("pathlossmodel","itm");
x.t("pathlossmodel","defined");
x.t("pathlossmodel","case");
x.t("pathlossmodel","two_ray");
x.t("sampling","distance");
x.t("sampling","interval");
x.t("made","prop_calculatepathloss");
x.t("made","part");
x.t("made","prop_calculatefading");
x.t("climate","double");
x.t("climate","propprofile-");
x.t("(float)","rxplatformheight");
x.t("(float)","elevationsamplingdistance");
x.t("(float)","txplatformheight");
x.t("node-","propchannel");
x.t("existing","library");
x.t("/phy_802_11.cpp","(wireless_dir)");
x.t("layers","prototypes");
x.t("layers","protocol");
x.t("include","shadowing");
x.t("include","source");
x.t("include","statement");
x.t("include","stdlib.h");
x.t("include","api.h");
x.t("include","fading");
x.t("include","prop_mypathloss.h");
x.t("include","path");
x.t("include","standard");
x.t("include","myfading");
x.t("include","math.h");
x.t("include","model\u2019s");
x.t("include","myshadowing");
x.t("include","prototype");
x.t("include","string.h");
x.t("include","stdio.h");
x.t("configuration","parameter");
x.t("configuration","file");
x.t("configuration","parameters");
x.t("configuration","format");
x.t("instances","parameter");
x.t("instances","parameter-value");
x.t("partitiondata","partitiondata");
x.t("partitiondata","nodeinput");
x.t("sources","wireless_srcs");
x.t("absorption","table");
x.t("terrain","foliage");
x.t("terrain","effects");
x.t("terrain","data\\n");
x.t("terrain","data");
x.t("terrain","model");
x.t("terrain","integrated");
x.t("matrix","pathloss");
x.t("matrix","model");
x.t("value","parameter");
x.t("value","fading_db");
x.t("value","according");
x.t("value","wireless");
x.t("value","generic");
x.t("value","shadowing_db");
x.t("value","section");
x.t("value","used");
x.t("main","data");
x.t("interval","used");
x.t("similar","manner");
x.t("similar","adding");
x.t("default_sampling_distance","io_readdoubleinstance");
x.t("delays","signal");
x.t("gives","detailed");
x.t("several","building");
x.t("several","apis");
x.t("several","models");
x.t("omni-directional","line-of-sight");
x.t("constant","shadowing");
x.t("constant","else");
x.t("constant","shadowing_db");
x.t("constant","constant");
x.t("constant","lognormal");
x.t("constant","propprofile-");
x.t("constant","definitions");
x.t("implementation","4.7.5.2");
x.t("implementation","functions");
x.t("implementation","different");
x.t("implementation","code");
x.t("implementation","prop_itm.h");
x.t("implementation","itm");
x.t("prototype","mypathlossinitialize");
x.t("prototype","prop_releasesignal");
x.t("prototype","pathlossmypathloss");
x.t("activating","library");
x.t("already","exist");
x.t("figure","4-190");
x.t("figure","4-191");
x.t("figure","4-192");
x.t("figure","4-193");
x.t("figure","4-194");
x.t("figure","4-195");
x.t("figure","4-196");
x.t("figure","4-186");
x.t("figure","4-187");
x.t("figure","4-188");
x.t("figure","4-189");
x.t("declaration","applies");
x.t("declaration","applicable");
x.t("free-space","friis");
x.t("free-space","loss");
x.t("free-space","pathloss");
x.t("free-space","propprofile-");
x.t("propdata","int");
x.t("propdata","main");
x.t("prop_releasesignal","enable");
x.t("prop_releasesignal","prototype");
x.t("prop_releasesignal","contained");
x.t("process","path");
x.t("process","indicate");
x.t("process","adding");
x.t("compilation","process");
x.t("valuen","param1");
x.t("valuen","values");
x.t(".profile","propprofile");
x.t(".profile","switch");
x.t(".profile","propprofile-");
x.t("making","changes");
x.t("errormessage","error");
x.t("errormessage","[max_string_length]");
x.t("models","shadowing");
x.t("models","files");
x.t("models","enum");
x.t("models","always");
x.t("models","implemented");
x.t("models","new");
x.t("models","4.7.7.3");
x.t("models","fading");
x.t("models","add");
x.t("models","initialized");
x.t("models","path");
x.t("models","prototypes");
x.t("models","generic");
x.t("models","input");
x.t("models","section");
x.t("models","qualnet");
x.t("models","made");
x.t("models","4.7.6.4");
x.t("models","contained");
x.t("models","used");
x.t("models","associated");
x.t("models","comprise");
x.t("systems","model");
x.t("canyon","urban");
x.t("canyon","communicating");
x.t("takes","account");
x.t("takes","place");
x.t("department","defense");
x.t("represent","fast");
x.t("distribution","shadowing");
x.t("read","parameter");
x.t("read","user");
x.t("read","fading");
x.t("read","parameters");
x.t("read","input");
x.t("read","store");
x.t("read","configuration");
x.t("read","values");
x.t("read","using");
x.t("read","associated");
x.t("prop_itm.h","source");
x.t("prop_itm.h","prop_itm.cpp");
x.t("prop_itm.h","folder");
x.t("pl_matrix","flat_binning");
x.t("pl_matrix","opar");
x.t("shadowingdistribution","int");
x.t("shadowingdistribution","variable");
x.t("although","working");
x.t("/libraries/user_models/src","name");
x.t("polarization","propprofile-");
x.t("abort","return");
x.t("makefile-common","library");
x.t("makefile-common","created");
x.t("node2","int");
x.t("[0]",".profile");
x.t("medium","transmits");
x.t("medium","uses");
x.t("medium","physical");
x.t("medium","apis");
x.t("medium","organization");
x.t("medium","communication");
x.t("medium","perform");
x.t("medium","provides");
x.t("medium","developing");
x.t("medium","functions");
x.t("medium","calculate");
x.t("medium","communicate");
x.t("medium","stores");
x.t("medium","section");
x.t("medium","qualnet_home");
x.t("medium","models");
x.t("medium","4.7");
x.t("medium","data");
x.t("medium","utility");
x.t("medium","transmit");
x.t("medium","model");
x.t("4.7","communication");
x.t("nodes","interfaces");
x.t("nodes","taking");
x.t("nodes","currently");
x.t("nodes","parameter-name");
x.t("nodes","potentially");
x.t("nodes","ground");
x.t("nodes","add");
x.t("nodes","wireless");
x.t("nodes","work");
x.t("interfaced","qualnet");
x.t("variation","signal");
x.t("hopping","spectrum");
x.t("hopping","jamming");
x.t("output","files");
x.t("transmissions","node");
x.t("phy","entities");
x.t("phy","models");
x.t("phy","model");
x.t("/main/phy.cpp","contains");
x.t("separate","files");
x.t("separate","header");
x.t("string.h","include");
x.t("specifying","new");
x.t("specifying","path");
x.t("applicable","enclosed");
x.t("along","path");
x.t("metropolitan","areas");
x.t("itm","partitiondata-");
x.t("itm","propagation-sampling-distance");
x.t("itm","initialization");
x.t("itm","requires");
x.t("itm","path");
x.t("itm","irregular");
x.t("itm","int");
x.t("itm","understand");
x.t("itm","appears");
x.t("itm","implementation");
x.t("itm","propprofile-");
x.t("itm","model");
x.t("information","terrain");
x.t("information","transmissions");
x.t("information","propagation");
x.t("data","file");
x.t("data","structures");
x.t("data","structure");
x.t("street-microcell","street");
x.t("/include/api.h","file");
x.t("typical","path");
x.t("optional","included");
x.t("value1","paramn");
x.t("value1","valuen");
x.t("value1","value2");
x.t("/libraries/wireless/src/prop_itm.cpp","configurable");
x.t("/prop_itm.cpp","wireless_dir");
x.t("4-20","lists");
x.t("4-20","fading");
x.t("sight","communication");
x.t("sight","signal");
x.t("sight","transmitter");
x.t("lognormal","shadowing");
x.t("lognormal","else");
x.t("lognormal","myshadowing");
x.t("lognormal","propdata");
x.t("lognormal","distribution");
x.t("lognormal","lognormal");
x.t("lognormal","propprofile-");
x.t("jamming","frequency");
x.t("jamming","narrow");
x.t("defined","propagation.h");
x.t("defined","qualnet_home");
x.t("numphyslistenable","int");
x.t("numphyslistenable","number");
x.t("appropriate","recommend");
x.t("examples","prop_itm.h");
x.t("wasfound","double");
x.t("wasfound","char");
x.t("error_reporterror","itm");
x.t("error_reporterror","(errormessage)");
x.t("channelimag","propchannel");
x.t("value2","else");
x.t("propagation","tirem");
x.t("propagation","rayleigh");
x.t("propagation","two-ray");
x.t("propagation","initialization");
x.t("propagation","suburban");
x.t("propagation","path");
x.t("propagation","limit");
x.t("propagation","signals");
x.t("propagation","cost231-walfish-ikegami");
x.t("propagation","function");
x.t("propagation","pathloss-matrix");
x.t("propagation","delays");
x.t("propagation","free-space");
x.t("propagation","street-microcell");
x.t("propagation","model");
x.t("values","indexed");
x.t("values","user-specified");
x.t("values","path");
x.t("values","parameters");
x.t("values","input");
x.t("4-21","shadowing");
x.t("4-21","lists");
x.t("/include/fileio.h","void");
x.t("/include/fileio.h","file");
x.t("rxsignallist","double");
x.t("rxsignallist","list");
x.t("utility","apis");
x.t("case","free_space");
x.t("case","mypathloss");
x.t("case","code");
x.t("case","itm");
x.t("case","two_ray");
x.t("pathlossitm","numsamples");
x.t("(double)","numsamples");
x.t("4.7.6.1","decide");
x.t("4.7.6.1","including");
x.t("refraction","reflection");
x.t("structure","channel");
x.t("structure","explained");
x.t("structure","function");
x.t("structure","stores");
x.t("structure","used");
x.t("numphyslistening","number");
x.t("numphyslistening","bool");
x.t("described","section");
x.t("described","above");
x.t("described","detail");
x.t("propagation.cpp","void");
x.t("propagation.cpp","add");
x.t("propagation.cpp","include");
x.t("propagation.cpp","separate");
x.t("propagation.cpp","called");
x.t("called","calls");
x.t("called","prop_mypathloss.h");
x.t("called","communication");
x.t("called","src");
x.t("called","user_models");
x.t("called","function");
x.t("called","reads");
x.t("called","mypathloss");
x.t("called","prop_mypathloss.cpp");
x.t("specification","optional");
x.t("above","propagation-pathloss-model");
x.t("modifications","prop_globalinit");
x.t("channelindex","double");
x.t("channelindex","clocktype");
x.t("channelindex","true");
x.t("channelindex","const");
x.t("channelindex","&wasfound");
x.t("channelindex","channelindex");
x.t("channelindex","nodeinput");
x.t("4.7.6.2","determining");
x.t("4.7.6.2","modify");
x.t("channelreal","double");
x.t("arrayindexindouble","double");
x.t("protocol","resides");
x.t("protocol","stack");
x.t("protocol","models");
x.t("protocol","model");
x.t("note","partial");
x.t("propvar","int");
x.t("transmit","signal");
x.t("two","files");
x.t("propchannel","propprofile");
x.t("propchannel","int");
x.t("propchannel","[channelindex]");
x.t("propchannel","node2-");
x.t("propchannel","[0]");
x.t("propchannel","propchannel");
x.t("4.7.6.3","initialization");
x.t("4.7.6.3","modify");
x.t("done","function");
x.t("street","mobile-to-mobile");
x.t("street","micro-cell");
x.t("offset","wireless");
x.t("work","channel");
x.t("work","different");
x.t("based","name");
x.t("nodelistid","list");
x.t("nodelistid","int");
x.t("propprofile-","shadowingmean_db");
x.t("propprofile-","elevationsamplingdistance");
x.t("propprofile-","permittivity");
x.t("propprofile-","frequency");
x.t("propprofile-","fadingmodel");
x.t("propprofile-","pathlossmodel");
x.t("propprofile-","climate");
x.t("propprofile-","polarization");
x.t("propprofile-","refractivity");
x.t("propprofile-","shadowingmodel");
x.t("propprofile-","kfactor");
x.t("propprofile-","conductivity");
x.t("//for//","figure");
x.t("4.7.6.4","fading");
x.t("4.7.6.4","model");
x.t("factor","io_readdoubleinstance");
x.t("factor","specified");
x.t("obstacles","urban");
x.t("joint","spectrum");
x.t("/libraries/wireless/src/propagation.cpp","file");
x.t("/libraries/wireless/src/propagation.cpp","add");
x.t("/libraries/wireless/src/propagation.cpp","rest");
x.t("/libraries/wireless/src/propagation.cpp","qualnet_home");
x.t("/libraries/wireless/src/propagation.cpp","contains");
x.t("call","mypathloss\u2019s");
x.t("call","path");
x.t("call","model\u2019s");
x.t("created","files");
x.t("created","doesn\u2019t");
x.t("created","new");
x.t("created","model");
x.t("itminitialize","implemented");
x.t("itminitialize","reads");
x.t("itminitialize","stores");
x.t("itminitialize","propchannel");
x.t("itminitialize","itminitialize");
x.t("refractivity","else");
x.t("refractivity","io_readdoubleinstance");
x.t("refractivity","return");
x.t("refractivity","refractivity");
x.t("refractivity","default_refractivity");
x.t("default_refractivity","return");
x.t("recompile","qualnet");
x.t("/propagation.cpp","(wireless_dir)");
x.t("4.7.6.5","integrating");
x.t("4.7.6.5","4.7.6.1");
x.t(".\\n","buf");
x.t("propdata-","shadowingdistribution.getrandomnumber");
x.t("prop_pathlossfreespace","pathprofile-");
x.t("prop_pathlosstworay","pathprofile-");
x.t("model","shadowing");
x.t("model","characterizes");
x.t("model","library");
x.t("model","available");
x.t("model","just");
x.t("model","implement");
x.t("model","files");
x.t("model","description");
x.t("model","inter-channel");
x.t("model","layer");
x.t("model","source");
x.t("model","4.7.5.4.1");
x.t("model","4.7.5.4.2");
x.t("model","enabled");
x.t("model","estimates");
x.t("model","uses");
x.t("model","implemented");
x.t("model","calculates");
x.t("model","rayleigh");
x.t("model","look");
x.t("model","calls");
x.t("model","assumes");
x.t("model","two-ray");
x.t("model","prop_plmatrix.h");
x.t("model","list");
x.t("model","initialization");
x.t("model","fading");
x.t("model","add");
x.t("model","macro-cellular");
x.t("model","urban");
x.t("model","requires");
x.t("model","specified");
x.t("model","creating");
x.t("model","parameters");
x.t("model","programmer");
x.t("model","statistical");
x.t("model","place");
x.t("model","fast");
x.t("model","mypathlossinitialize");
x.t("model","myfading");
x.t("model","three");
x.t("model","functions");
x.t("model","keeping");
x.t("model","developed");
x.t("model","4.7.2");
x.t("model","gui");
x.t("model","myshadowing");
x.t("model","different");
x.t("model","may");
x.t("model","reads");
x.t("model","mypathloss");
x.t("model","section");
x.t("model","added");
x.t("model","known");
x.t("model","header");
x.t("model","qualnet");
x.t("model","considers");
x.t("model","existing");
x.t("model","include");
x.t("model","configuration");
x.t("model","similar");
x.t("model","represent");
x.t("model","although");
x.t("model","takes");
x.t("model","makefile-common");
x.t("model","called");
x.t("model","nodelistid");
x.t("model","created");
x.t("model","itminitialize");
x.t("model","model");
x.t("model","used");
x.t("model","using");
x.t("model","understanding");
x.t("model","distributed");
x.t("model","accounts");
x.t("model","modify");
x.t("model","propagation-pathloss-model");
x.t("model","pathlossmypathloss");
x.t("model","specify");
x.t("corresponding","model");
x.t("used","parameter");
x.t("used","physical");
x.t("used","multiple");
x.t("used","channel");
x.t("used","urban");
x.t("used","communication");
x.t("used","qualify");
x.t("used","myfading");
x.t("used","scenarios");
x.t("used","layers");
x.t("used","read");
x.t("used","simulation");
x.t("used","specify");
x.t("simulation","time");
x.t("simulation","initialization");
x.t("simulation","prop_globalinit");
x.t("management","wireless");
x.t("relevant","communication");
x.t("contained","file");
x.t("contained","qualnet_home");
x.t("contained","following");
x.t("following","statements");
x.t("following","statement");
x.t("following","list");
x.t("following","parameters");
x.t("following","prototypes");
x.t("following","format");
x.t("following","header");
x.t("following","include");
x.t("following","folders");
x.t("/include/phy.h","file");
x.t("two_ray","double");
x.t("two_ray","txplatformheight");
x.t("two_ray","pl_matrix");
x.t("two_ray","case");
x.t("shadowingmodel","shown");
x.t("shadowingmodel","enumeration");
x.t("shadowingmodel","myshadowing");
x.t("shadowingmodel","io_readstringinstance");
x.t("shadowingmodel","constant");
x.t("shadowingmodel","defined");
x.t("shadowingmodel","lognormal");
x.t("turn","call");
x.t("subnet","identifier");
x.t("propagation-refractivity","channelindex");
x.t("ricean","fading");
x.t("ricean","myfading");
x.t("ricean","int");
x.t("ricean","propprofile-");
x.t("ricean","factor");
x.t("ricean","shadowingmodel");
x.t("ricean","ricean");
x.t("additionally","following");
x.t("using","example");
x.t("using","functions");
x.t("using","function");
x.t("using","following");
x.t("understanding","discussed");
x.t("opar","flat_binning");
x.t("nodeinput","else");
x.t("nodeinput","propprofile");
x.t("nodeinput","propagation-fading-model");
x.t("nodeinput","propagation-ricean-k-factor");
x.t("nodeinput","propagation-shadowing-model");
x.t("nodeinput","propagation-sampling-distance");
x.t("nodeinput","bool");
x.t("nodeinput","propagation-refractivity");
x.t("nodeinput","nodeinput");
x.t("nodeinput","propagation-pathloss-model");
x.t("no_terrain_data","error_reporterror");
x.t("kfactor","else");
x.t("kfactor","kfactor");
x.t("propprofile0","propchannel");
x.t("calculated","along");
x.t("across","several");
x.t("path-loss","transmitter-receiver");
x.t("distributed","joint");
x.t("folders","source");
x.t("folders","section");
x.t("folders","relevant");
x.t("returns","wavelength");
x.t("adding","shadowing");
x.t("adding","new");
x.t("adding","fading");
x.t("adding","path");
x.t("adding","myfading");
x.t("adding","myshadowing");
x.t("adding","mypathloss");
x.t("adding","code");
x.t("adding","model");
x.t("subsequent","sections");
x.t("propchannel-","profile");
x.t("accounts","co-channel");
x.t("analysis","spectrum");
x.t("definitions","source");
x.t("definitions","api");
x.t("definitions","common");
x.t("definitions","macros");
x.t("associated","communication");
x.t("associated","parameters");
x.t("names","prop_");
x.t("names","shadowing");
x.t("names","components");
x.t("names","fading");
x.t("names","parameters");
x.t("names","different");
x.t("names","based");
x.t("maintains","instance");
x.t("performed","path");
x.t("performed","part");
x.t("performed","adding");
x.t("outline","developing");
x.t("modify","file");
x.t("modify","gui");
x.t("modify","function");
x.t("modify","qualnet_home");
x.t("modify","propagation");
x.t("towards","adding");
x.t("designate","files");
x.t("therefore","path");
x.t("(errormessage)","else");
x.t("transmitter","receiver");
x.t("matrix-based","pathloss");
x.t("effect","wide");
x.t("effect","changes");
x.t("bandwidth","inter-channel");
x.t("struct","propdata");
x.t("describe","tasks");
x.t("describe","steps");
x.t("stdio.h","include");
x.t("insert","following");
x.t("including","compiling");
x.t("including","myfading");
x.t("including","myshadowing");
x.t("including","mypathloss");
x.t("propagation-pathloss-model","mypathloss");
x.t("propagation-pathloss-model","itm");
x.t("propagation-pathloss-model","channelindex");
x.t("conductivity","propprofile-");
x.t("(wireless_dir)","/phy_cellular.cpp");
x.t("(wireless_dir)","/phy_abstract.cpp");
x.t("(wireless_dir)","/routing_aodv.cpp");
x.t("(wireless_dir)","/antenna_global.cpp");
x.t("(wireless_dir)","/manet_packet.cpp");
x.t("(wireless_dir)","/prop_plmatrix.cpp");
x.t("(wireless_dir)","/phy_802_11.cpp");
x.t("(wireless_dir)","/prop_itm.cpp");
x.t("(wireless_dir)","/propagation.cpp");
x.t("(wireless_dir)","/antenna.cpp");
x.t("/antenna.cpp","(wireless_dir)");
x.t("naming","coding");
x.t("naming","guidelines");
x.t("comprise","two");
x.t("even","compilation");
x.t("pathlossmypathloss","file");
x.t("pathlossmypathloss","mypathloss");
x.t("pathlossmypathloss","return");
x.t("pathlossmypathloss","header");
x.t("pathlossmypathloss","include");
x.t("&refractivity","(wasfound)");
x.t("5.1.4","2008");
x.t("5.1.4","4.7.6");
x.t("5.1.4","4.7.7");
x.t("transmitter-receiver","pairs");
x.t("integrated","rough");
x.t("attributes","antenna");
x.t("contains","source");
x.t("contains","prototypes");
x.t("contains","generic");
x.t("contains","implementation");
x.t("contains","information");
x.t("contains","definitions");
x.t("detail","subsequent");
x.t("generally","header");
x.t("specify","sampling");
x.t("specify","configuration");
x.t("io_readintinstance","io_readstringinstance");
x.t("pathprofile-","fromposition.common.c3");
x.t("pathprofile-","distance");
x.t("pathprofile-","toposition.common.c3");
x.t("integrate","user_models");
}
