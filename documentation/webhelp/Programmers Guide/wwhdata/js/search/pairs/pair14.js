function FileData_Pairs(x)
{
x.t("included","field");
x.t("example","give");
x.t("example","consider");
x.t("example","process");
x.t("example","elements");
x.t("example","following");
x.t("unlike","infoarray");
x.t("passed","down");
x.t("passed","parameters");
x.t("passed","function");
x.t("timers","timer");
x.t("timers","api");
x.t("timers","purpose");
x.t("clock","advanced");
x.t("creation","time");
x.t("below","refer");
x.t("below","layer");
x.t("below","infotype");
x.t("below","node");
x.t("below","originating");
x.t("below","layertype");
x.t("indicated","packetsize");
x.t("available","sending");
x.t("available","layer");
x.t("available","apis");
x.t("available","receiving");
x.t("available","qualnet");
x.t("available","application");
x.t("parameter","function");
x.t("parameter","packet");
x.t("parameter","message_send");
x.t("parameter","returns");
x.t("parameter","message_packetalloc");
x.t("manner","handled");
x.t("residing","particular");
x.t("protocols","operating");
x.t("else","destaddress");
x.t("provide","convenient");
x.t("newmsg","message_alloc");
x.t("newmsg","clocktype");
x.t("newmsg","delay");
x.t("message_getevent","function");
x.t("receives","packet");
x.t("rather","using");
x.t("exchanges","application");
x.t("version","information");
x.t("app_routing_rip","destaddress");
x.t("app_routing_rip","networkipgetinterfaceaddress");
x.t("app_routing_rip","msg_app_rip_regularupdatealarm");
x.t("messge_infoalloc","equivalent");
x.t("re-setting","timer");
x.t("2008","2012");
x.t("implement","events");
x.t("modeling","communication");
x.t("3.3.2.1","timer");
x.t("3.3.2.1","packet");
x.t("needs","transported");
x.t("needs","canceled");
x.t("needs","send");
x.t("shown","figure");
x.t("message_alloc","followed");
x.t("message_alloc","first");
x.t("message_alloc","function");
x.t("message_alloc","section");
x.t("message_alloc","node");
x.t("message_alloc","protocol");
x.t("resides","application");
x.t("lists","api");
x.t("(clocktype)","rip_startup_delay");
x.t("apptoudpsend","info");
x.t("apptoudpsend","message_returninfo");
x.t("within","protocol");
x.t("every","seconds");
x.t("scalable","network");
x.t("describes","implementation");
x.t("describes","send");
x.t("3.3.2.2","timer");
x.t("3.3.2.2","section");
x.t("static","void");
x.t("static","const");
x.t("uint8","sent");
x.t("table","qualnet");
x.t("table","3-1");
x.t("table","3-2");
x.t("table","seconds");
x.t("description","app_udpsendnewdata");
x.t("description","infoarray");
x.t("description","app_tcpsenddata");
x.t("refer","api");
x.t("sending","packets");
x.t("sending","node");
x.t("sending","packet");
x.t("user-specified","delay");
x.t("user-specified","priority");
x.t("ttl","ipdefttl");
x.t("ttl","figure");
x.t("installed","3.3.2.2.1");
x.t("events","example");
x.t("events","discussed");
x.t("events","implemented");
x.t("events","timer");
x.t("events","api");
x.t("events","messages");
x.t("events","adjacent");
x.t("events","qualnet");
x.t("events","figure");
x.t("events","although");
x.t("events","data");
x.t("events","defined");
x.t("events","received");
x.t("events","itself");
x.t("events","packet");
x.t("events","used");
x.t("layer","example");
x.t("layer","below");
x.t("layer","refer");
x.t("layer","table");
x.t("layer","source");
x.t("layer","responsible");
x.t("layer","discussed");
x.t("layer","timer");
x.t("layer","arrives");
x.t("layer","removes");
x.t("layer","fall");
x.t("layer","short");
x.t("layer","udp");
x.t("layer","api");
x.t("layer","network");
x.t("layer","layer-specific");
x.t("layer","prototypes");
x.t("layer","stack");
x.t("layer","destination");
x.t("layer","receiving");
x.t("layer","exchanging");
x.t("layer","functions");
x.t("layer","simulates");
x.t("layer","delay");
x.t("layer","occurrence");
x.t("layer","function");
x.t("layer","receive");
x.t("layer","transport");
x.t("layer","section");
x.t("layer","node");
x.t("layer","steps");
x.t("layer","adds");
x.t("layer","thus");
x.t("layer","qualnet");
x.t("layer","app_udpsendnewdatawithpriority");
x.t("layer","strips");
x.t("layer","info_type_statcategoryname");
x.t("layer","case");
x.t("layer","above");
x.t("layer","encapsulate");
x.t("layer","protocol");
x.t("layer","done");
x.t("layer","packet");
x.t("layer","using");
x.t("layer","adding");
x.t("layer","associated");
x.t("layer","occur");
x.t("instance","give");
x.t("instance","event");
x.t("instance","protocol");
x.t("instance","used");
x.t("enum","message_info_type_str");
x.t("source","address");
x.t("source","node");
x.t("source","code");
x.t("source","port");
x.t("rip_response","response");
x.t("once","message_packetalloc");
x.t("required","store");
x.t("components","class");
x.t("enumerations","type");
x.t("responsible","sending");
x.t("responsible","scheduling");
x.t("/main/app_util.cpp","shown");
x.t("/main/app_util.cpp","underlying");
x.t("void","ripsendresponse");
x.t("void","app_udpsendnewdatawithpriority");
x.t("void","transportudpsendtonetwork");
x.t("storing","information");
x.t("arguments","example");
x.t("discussed","section");
x.t("discussed","corresponding");
x.t("packetsize","field");
x.t("packetsize","size");
x.t("packetsize","member");
x.t("user","data");
x.t("situations","specific");
x.t("creates","new");
x.t("creates","sends");
x.t("creates","packet");
x.t("current","function");
x.t("current","simulation");
x.t("scheduler","message");
x.t("cancelled","arguments");
x.t("shows","example");
x.t("shows","code");
x.t("shows","main");
x.t("implemented","re-setting");
x.t("implemented","qualnet_home");
x.t("implemented","using");
x.t("field","passed");
x.t("field","indicated");
x.t("field","once");
x.t("field","enumerations");
x.t("field","packetsize");
x.t("field","info_type_default");
x.t("field","points");
x.t("field","type");
x.t("field","denotes");
x.t("field","size");
x.t("field","specified");
x.t("field","name");
x.t("field","char");
x.t("field","info_type_appname");
x.t("field","simulates");
x.t("field","stores");
x.t("field","section");
x.t("field","message");
x.t("field","3.3.1.1.1");
x.t("field","virtualpayloadsize");
x.t("field","info_type_abstractcfpropagation");
x.t("field","used");
x.t("field","using");
x.t("field","associated");
x.t("field","3.3.2.2.2");
x.t("field","unsigned");
x.t("field","struct");
x.t("packet\u2019s","creation");
x.t("declared","qualnet_home");
x.t("schedules","specified");
x.t("schedules","event");
x.t("schedules","packet");
x.t("handled","qualnet");
x.t("until","original");
x.t("uses","api");
x.t("nodeaddress","destaddress");
x.t("nodeaddress","sourceaddr");
x.t("nodeaddress","destaddr");
x.t("acndata","acndata.actiontype");
x.t("acndata","msg");
x.t("(msg)","payload");
x.t("(msg)","setipv4addressinfo");
x.t("(msg)","udphdr-");
x.t("last","step");
x.t("timer","events");
x.t("timer","indicating");
x.t("timer","receive");
x.t("timer","message");
x.t("timer","e.g");
x.t("timer","event");
x.t("timer","alarm");
x.t("0x01","message");
x.t("it\u2019s","creation");
x.t("info_type_default","default");
x.t("info_type_default","info");
x.t("points","space");
x.t("points","newly");
x.t("physical","layer");
x.t("travels","down");
x.t("travels","protocol");
x.t("provided","layer");
x.t("serve","add");
x.t("interface","index");
x.t("look","implementation");
x.t("ipproto_udp","false");
x.t("illustrated","figure");
x.t("essentially","allow");
x.t("type","size");
x.t("type","info");
x.t("type","messageinfoheader");
x.t("type","int");
x.t("type","sourceaddr");
x.t("type","messageinfotype");
x.t("type","different");
x.t("type","abstract");
x.t("type","given");
x.t("type","event");
x.t("type","information");
x.t("type","msg_app_rip_regularupdatealarm");
x.t("type","allocates");
x.t("type","used");
x.t("type","unsigned");
x.t("clocktype","delay");
x.t("clocktype","packetcreationtime");
x.t("std::vector","messageinfoheader");
x.t("calculations","3.3.1.2");
x.t("calculations","model");
x.t("freed","message");
x.t("freed","message_addinfo");
x.t("vary","layer");
x.t("vary","purpose");
x.t("providing","easy-to-use");
x.t("categories","exchanging");
x.t("payload","int");
x.t("payload","pointer");
x.t("payload","payloadsize");
x.t("3.3.1","events");
x.t("packets","rather");
x.t("packets","events");
x.t("packets","source");
x.t("packets","udp");
x.t("packets","tcp");
x.t("packets","via");
x.t("packets","particular");
x.t("packets","layers");
x.t("packets","specific");
x.t("packets","application");
x.t("packets","protocol");
x.t("packets","corresponding");
x.t("packets","using");
x.t("packets","across");
x.t("public","default");
x.t("time","std::vector");
x.t("time","periodic");
x.t("time","message");
x.t("time","infoarray");
x.t("time","buffer");
x.t("hence","allocated");
x.t("calculation","transmission");
x.t("4.1.2","infosize");
x.t("4.1.2","detailed");
x.t("explicitly","re-use");
x.t("calls","available");
x.t("calls","api");
x.t("calls","transport");
x.t("initially","variable");
x.t("response","response.command");
x.t("response","message");
x.t("response","defined");
x.t("trace","protocol");
x.t("rteindex","nodeaddress");
x.t("rteindex","rteindex");
x.t("rteindex","iptos_prec_internetcontrol");
x.t("random_nrand","dataptr-");
x.t("no_comment","trace_printtrace");
x.t("interchangeably","two");
x.t("multiple","copies");
x.t("multiple","instances");
x.t("down","layer");
x.t("down","protocol");
x.t("canceling","timers");
x.t("canceling","function");
x.t("3.3.2","types");
x.t("arrives","physical");
x.t("arrives","udp");
x.t("arrives","application");
x.t("however","sometimes");
x.t("followed","call");
x.t("copied","packet");
x.t("execution","simulation");
x.t("i.e","message");
x.t("retained","2008");
x.t("entities","layer");
x.t("apis","available");
x.t("apis","provide");
x.t("apis","shown");
x.t("apis","layer");
x.t("apis","discussed");
x.t("apis","provided");
x.t("apis","look");
x.t("apis","listed");
x.t("apis","layer-specific");
x.t("apis","parameters");
x.t("apis","generic");
x.t("apis","manipulate");
x.t("apis","understand");
x.t("apis","simplify");
x.t("apis","hides");
x.t("apis","may");
x.t("apis","message");
x.t("apis","several");
x.t("apis","specific");
x.t("apis","3.3.1.1.2");
x.t("apis","called");
x.t("apis","packet");
x.t("default","info");
x.t("default","constructor");
x.t("listed","below");
x.t("listed","qualnet_home");
x.t("removes","header");
x.t("removes","corresponding");
x.t("original","message");
x.t("original","packet");
x.t("queue","capacity");
x.t("//trace","information");
x.t("details","field");
x.t("details","message");
x.t("details","discrete-event");
x.t("details","scheduling");
x.t("instanceid","instance");
x.t("instanceid","multiple");
x.t("denotes","instance");
x.t("contents","unimportant");
x.t("contents","important");
x.t("element","array");
x.t("element","infoarray");
x.t("new","message");
x.t("new","header");
x.t("/libraries/developer/src/routing_rip.cpp","notice");
x.t("destaddress","networkipgetinterfacebroadcastaddress");
x.t("destaddress","interfaceindex");
x.t("destaddress","any_dest");
x.t("destaddress","networkipiswirednetwork");
x.t("certain","specifics");
x.t("access","space");
x.t("access","infoarray");
x.t("access","packet");
x.t("updates","every");
x.t("updates","packetsize");
x.t("updates","header");
x.t("advanced","may");
x.t("size","user");
x.t("size","field");
x.t("size","info");
x.t("size","specified");
x.t("size","name");
x.t("size","virtual");
x.t("size","part");
x.t("size","affects");
x.t("size","header");
x.t("size","packetcreationtime");
x.t("size","packet");
x.t("size","associated");
x.t("size","buffer");
x.t("message.h","complete");
x.t("fall","two");
x.t("command","rip");
x.t("desirable","bypass");
x.t("simulator","basics");
x.t("file","message.h");
x.t("file","qualnet_home");
x.t("short","instanceid");
x.t("short","eventtype");
x.t("short","infotype");
x.t("short","infosize");
x.t("short","protocoltype");
x.t("short","sourceport");
x.t("short","message_returnpacketsize");
x.t("short","layertype");
x.t("info","apptoudpsend");
x.t("info","field");
x.t("info","type");
x.t("info","actiondata");
x.t("info","messageinfoheader");
x.t("info","udp-");
x.t("info","variable");
x.t("info","pointer");
x.t("indicates","type");
x.t("found","file");
x.t("list","message");
x.t("appropriately","updates");
x.t("appropriately","sends");
x.t("appropriately","transport");
x.t("response.command","rip_response");
x.t("occupied","new");
x.t("/include/message.h","shown");
x.t("/include/message.h","implementation");
x.t("/include/message.h","used");
x.t("holding","info");
x.t("add","resource");
x.t("add","header");
x.t("add","additional");
x.t("complete","list");
x.t("udp","api");
x.t("udp","destination");
x.t("udp","transportdataudp");
x.t("udp","appends");
x.t("udp","function");
x.t("udp","transport");
x.t("udp","protocol");
x.t("api","message_alloc");
x.t("api","shown");
x.t("api","calls");
x.t("api","message_infoalloc");
x.t("api","message_removeheader");
x.t("api","functions");
x.t("api","function");
x.t("api","3.3.2.1.2");
x.t("api","message_returninfo");
x.t("api","reference");
x.t("api","app_udpsendnewdatawithpriority");
x.t("api","message_send");
x.t("api","message_free");
x.t("api","message_packetalloc");
x.t("api","message_addheader");
x.t("unless","specific");
x.t("initialized","message");
x.t("network","layer");
x.t("network","field");
x.t("network","technologies");
x.t("network","protocol");
x.t("network","packet");
x.t("remove","expired");
x.t("remove","correct");
x.t("entry","routing");
x.t("guide","file");
x.t("due","certain");
x.t("assist","timer");
x.t("message_cancelselfmsg","frees");
x.t("message_cancelselfmsg","function");
x.t("message_cancelselfmsg","section");
x.t("message_cancelselfmsg","node");
x.t("overview","layer-specific");
x.t("overview","message");
x.t("overview","using");
x.t("tcp","api");
x.t("tcp","destination");
x.t("tcp","transport");
x.t("tcp","protocol");
x.t("apptype","nodeaddress");
x.t("apptype","apptype");
x.t("apptype","application");
x.t("apptype","info-");
x.t("message_infoalloc","messge_infoalloc");
x.t("message_infoalloc","node");
x.t("udpstatsenabled","true");
x.t("false","info-");
x.t("accepts","pointer");
x.t("3.3","discrete-event");
x.t("circumstances","message");
x.t("eventtype","field");
x.t("eventtype","type");
x.t("eventtype","message's");
x.t("eventtype","fields");
x.t("specified","parameter");
x.t("specified","third");
x.t("specified","delay");
x.t("specified","message");
x.t("specified","event");
x.t("specified","packet");
x.t("puts","data");
x.t("cycle","packet");
x.t("layer-specific","apis");
x.t("layer-specific","api");
x.t("layer-specific","packet");
x.t("via","udp");
x.t("via","tcp");
x.t("ripresponsetype","type");
x.t("true","udp-");
x.t("name","down");
x.t("name","protocol");
x.t("stored","infoarray");
x.t("stored","elements");
x.t("enclosed","specified");
x.t("resulting","packet");
x.t("outgoinginterface","outgoinginterface");
x.t("outgoinginterface","char");
x.t("outgoinginterface","outgoing");
x.t("outgoinginterface","info-");
x.t("iptos_prec_internetcontrol","random_nrand");
x.t("communication","adjacent");
x.t("communication","different");
x.t("constructor","used");
x.t("char","payload");
x.t("char","info");
x.t("char","&response");
x.t("char","packet");
x.t("handler","locate");
x.t("acndata.actiontype","send");
x.t("cancel","message");
x.t("const","uint8");
x.t("message's","event");
x.t("virtual","data");
x.t("virtual","real");
x.t("part","user");
x.t("enumeration","type");
x.t("enumeration","explained");
x.t("message_removeheader","sends");
x.t("message_removeheader","function");
x.t("consumption","queue");
x.t("reserves","additional");
x.t("perform","function");
x.t("periodic","alarms");
x.t("provides","layer-specific");
x.t("provides","several");
x.t("parameters","api");
x.t("parameters","message_removeheader");
x.t("parameters","message_getlayer");
x.t("parameters","function");
x.t("parameters","message_returninfo");
x.t("parameters","message_returnpacket");
x.t("parameters","message_send");
x.t("parameters","message_free");
x.t("useful","information");
x.t("actiondata","acndata");
x.t("app","name");
x.t("expired","destination");
x.t("expired","route");
x.t("prototypes","functions");
x.t("frees","message");
x.t("frees","memory");
x.t("sends","user");
x.t("sends","packets");
x.t("sends","via");
x.t("sends","resulting");
x.t("sends","next");
x.t("sends","messages");
x.t("sends","message");
x.t("sends","packet");
x.t("place","using");
x.t("generic","used");
x.t("unimportant","serve");
x.t("specifics","protocol");
x.t("messageinfoheader","declared");
x.t("messageinfoheader","infoarray");
x.t("messageinfoheader","figure");
x.t("messageinfoheader","data");
x.t("explained","below");
x.t("explained","section");
x.t("transported","layers");
x.t("infotype","parameter");
x.t("infotype","type");
x.t("infotype","indicates");
x.t("info_type_appname","pass");
x.t("destination","user-specified");
x.t("destination","address");
x.t("destination","node");
x.t("destination","figure");
x.t("destination","app_tcpsendnewheadervirtualdata");
x.t("address","calls");
x.t("address","outgoinginterface");
x.t("address","expired");
x.t("address","sourceport");
x.t("address","packet");
x.t("stack","sending");
x.t("stack","layer");
x.t("stack","schedules");
x.t("stack","however");
x.t("stack","apis");
x.t("stack","layer-specific");
x.t("stack","receiving");
x.t("stack","node");
x.t("stack","examples");
x.t("stack","using");
x.t("composed","application");
x.t("copies","protocol");
x.t("int","packetsize");
x.t("int","rteindex");
x.t("int","outgoinginterface");
x.t("int","interfaceindex");
x.t("int","virtualpayloadsize");
x.t("int","payloadsize");
x.t("array","stores");
x.t("array","structure");
x.t("array","used");
x.t("fields","calls");
x.t("fields","appropriately");
x.t("fields","messageinfoheader");
x.t("fields","transport_layer");
x.t("fields","message");
x.t("fields","structure");
x.t("empty","info");
x.t("sets","fields");
x.t("sets","header");
x.t("sets","layertype");
x.t("segment","rip");
x.t("rip_startup_delay","trace_rip");
x.t("traceprotocoltype","traceprotocol");
x.t("&info-","sourceaddr");
x.t("&info-","destaddr");
x.t("third","parameter");
x.t("checksum","checksum");
x.t("checksum","calculated");
x.t("trace_transport_layer","packet_out");
x.t("allow","application");
x.t("structures","classes");
x.t("extra","information");
x.t("manipulate","infoarray");
x.t("earlier","free");
x.t("receiving","node");
x.t("receiving","protocol");
x.t("understand","available");
x.t("understand","message");
x.t("exchanging","packets");
x.t("resource","consumption");
x.t("sourceaddr","source");
x.t("sourceaddr","short");
x.t("sourceaddr","sourceaddr");
x.t("sourceaddr","info-");
x.t("outgoing","interface");
x.t("transportdataudp","udp");
x.t("transportdataudp","node-");
x.t("message_addheade","appropriately");
x.t("second","message_send");
x.t("functions","available");
x.t("functions","sending");
x.t("functions","responsible");
x.t("functions","creates");
x.t("functions","vary");
x.t("functions","found");
x.t("functions","event");
x.t("functions","send");
x.t("functions","defined");
x.t("functions","used");
x.t("store","extra");
x.t("store","additional");
x.t("store","sequence");
x.t("contention","free");
x.t("message_getlayer","function");
x.t("simplify","protocol");
x.t("hides","details");
x.t("overloaded","used");
x.t("trace_rip","figure");
x.t("transport_layer","transportprotocol_udp");
x.t("raw","message");
x.t("notice","initially");
x.t("sometimes","may");
x.t(".info","field");
x.t("equivalent","using");
x.t("transportdata.udp","transportudpheader");
x.t("travel","protocol");
x.t("give","overview");
x.t("give","message");
x.t("simulates","actual");
x.t("simulates","arrival");
x.t("simulates","data");
x.t("members","enumeration");
x.t("members","message");
x.t("delay","newmsg");
x.t("delay","user-specified");
x.t("delay","calculations");
x.t("delay","specified");
x.t("delay","traceprotocoltype");
x.t("delay","second");
x.t("delay","delay");
x.t("delay","event");
x.t("delay","alter");
x.t("delay","app_udpsendnewdatawithpriority");
x.t("delay","figure");
x.t("delay","data");
x.t("delay","note");
x.t("delay","app_udpsendnewheaderdatawithpriority");
x.t("delay","seconds");
x.t("infosize","field");
x.t("infosize","size");
x.t("finally","available");
x.t("next","layer");
x.t("next","updates");
x.t("next","function");
x.t("next","higher");
x.t("appends","header");
x.t("appends","application");
x.t("app_udpsendnewdata","sends");
x.t("rip_rte_size","rteindex");
x.t("transportprotocol_udp","msg_transport_fromappsend");
x.t("acndata.actioncomment","no_comment");
x.t("respectively","result");
x.t("occurs","current");
x.t("messages","qualnet");
x.t("messages","using");
x.t("protocoltype","field");
x.t("protocoltype","eventtype");
x.t("protocoltype","protocol");
x.t("headers","int");
x.t("headers","added");
x.t("affects","calculation");
x.t("message_info_header_str","unsigned");
x.t("space","occupied");
x.t("space","api");
x.t("space","packet");
x.t("space","removed");
x.t("unit","virtual");
x.t("life","cycle");
x.t("app_udpsendnewheaderdata","appends");
x.t("means","sending");
x.t("(apptoudpsend)","info");
x.t("ipdefttl","//trace");
x.t("first","step");
x.t("processing","message");
x.t("processing","event");
x.t("cancels","message");
x.t("occurrence","packet");
x.t("underlying","code");
x.t("number","table");
x.t("number","destination");
x.t("number","destaddr");
x.t("traceprotocol","trace");
x.t("traceprotocol","message");
x.t("traceprotocol","memcpy");
x.t("interfaceindex","else");
x.t("interfaceindex","app_routing_rip");
x.t("interfaceindex","destaddress");
x.t("interfaceindex","ripresponsetype");
x.t("interfaceindex","char");
x.t("networkipgetinterfacebroadcastaddress","node");
x.t("(short)","apptype");
x.t("2012","scalable");
x.t("indicating","route");
x.t("function","message_alloc");
x.t("function","description");
x.t("function","schedules");
x.t("function","removes");
x.t("function","message_cancelselfmsg");
x.t("function","accepts");
x.t("function","reserves");
x.t("function","parameters");
x.t("function","frees");
x.t("function","explained");
x.t("function","message_addheade");
x.t("function","overloaded");
x.t("function","cancels");
x.t("function","networkipreceivepacketfromtransportlayer");
x.t("function","node");
x.t("function","adds");
x.t("function","ripsendresponse");
x.t("function","assigns");
x.t("function","message");
x.t("function","message_returnpacket");
x.t("function","app_udpsendnewdatawithpriority");
x.t("function","additional");
x.t("function","takes");
x.t("function","allocates");
x.t("function","alarms");
x.t("function","called");
x.t("function","call");
x.t("function","transportudpsendtonetwork");
x.t("function","finishes");
x.t("function","pointer");
x.t("function","message_send");
x.t("function","returns");
x.t("function","message_addheader");
x.t("adjacent","layer");
x.t("adjacent","layers");
x.t("3.3.2.1.1","sending");
x.t("3.3.2.1.1","gives");
x.t("3.3.2.1.1","send");
x.t("design","section");
x.t("udp-","udpstatsenabled");
x.t("udp-","statistics-");
x.t("length","unsigned");
x.t("msgtocancelptr","function");
x.t("msgtocancelptr","pointer");
x.t("exchange","apis");
x.t("exchange","layers");
x.t("exchange","data");
x.t("different","entities");
x.t("different","layers");
x.t("different","purposes");
x.t("different","elements");
x.t("private","static");
x.t("receive","message");
x.t("receive","event");
x.t("receive","acknowledgment");
x.t("messageinfotype","declared");
x.t("messageinfotype","enumeration");
x.t("messageinfotype","figure");
x.t("particular","layer");
x.t("particular","port");
x.t("processes","packet");
x.t("3.3.2.1.2","sending");
x.t("3.3.2.1.2","gives");
x.t("chapter","understand");
x.t("may","required");
x.t("may","desirable");
x.t("may","due");
x.t("canceled","function");
x.t("stores","packet\u2019s");
x.t("stores","additional");
x.t("stores","information");
x.t("stores","packet");
x.t("detailed","description");
x.t("message_returninfo","(msg)");
x.t("message_returninfo","function");
x.t("message_returninfo","used");
x.t("decremented","size");
x.t("step","repeated");
x.t("step","app_udpsendnewdatawithpriority");
x.t("index","payload");
x.t("msg-","packet");
x.t("networkipreceivepacketfromtransportlayer","node");
x.t("networkipreceivepacketfromtransportlayer","send");
x.t("basics","3.3");
x.t("section","3.3.2.1");
x.t("section","describes");
x.t("section","3.3.2.2");
x.t("section","4.1.2");
x.t("section","3.3.2.1.1");
x.t("section","3.3.2.1.2");
x.t("section","chapter");
x.t("section","3.3.1.1");
x.t("section","3.3.1.2");
x.t("section","3.3.1.1.1");
x.t("section","packet");
x.t("section","describe");
x.t("types","events");
x.t("types","listed");
x.t("types","defined");
x.t("internal","protocol");
x.t("allocated","memory");
x.t("allocated","header");
x.t("allocated","using");
x.t("typedef","enum");
x.t("typedef","struct");
x.t("transport","layer");
x.t("transport","layer-specific");
x.t("msg_transport_fromappsend","respectively");
x.t("msg_transport_fromappsend","event");
x.t("msg_transport_fromappsend","message_packetalloc");
x.t("qualnet_home","/main/app_util.cpp");
x.t("qualnet_home","/libraries/developer/src/routing_rip.cpp");
x.t("qualnet_home","/include/message.h");
x.t("qualnet_home","//libraries/developer/src/transport_udp.cpp");
x.t("qualnet_home","/include/api.h");
x.t("qualnet_home","/main/message.cpp");
x.t("added","different");
x.t("added","packet");
x.t("important","hence");
x.t("transmission","time");
x.t("transmission","packets");
x.t("transmission","delay");
x.t("transmission","delays");
x.t("calling","message_send");
x.t("purpose","example");
x.t("purpose","manner");
x.t("node","newmsg");
x.t("node","receives");
x.t("node","app_routing_rip");
x.t("node","needs");
x.t("node","layer");
x.t("node","schedules");
x.t("node","apptype");
x.t("node","sends");
x.t("node","int");
x.t("node","receiving");
x.t("node","transport_layer");
x.t("node","interfaceindex");
x.t("node","msgtocancelptr");
x.t("node","node");
x.t("node","level");
x.t("node","header");
x.t("node","message");
x.t("node","msg");
x.t("node","app_layer");
x.t("node","packet");
x.t("node","pointer");
x.t("node","across");
x.t("node","sent");
x.t("simply","layer-specific");
x.t("capacity","transmission");
x.t("expected","section");
x.t("self","message");
x.t("code","schedules");
x.t("code","segment");
x.t("code","functions");
x.t("code","qualnet");
x.t("reference","guide");
x.t("steps","process");
x.t("often","used");
x.t("abstract","contention");
x.t("adds","header");
x.t("level","protocol");
x.t("thus","providing");
x.t("ripsendresponse","uses");
x.t("ripsendresponse","implemented");
x.t("ripsendresponse","section");
x.t("ripsendresponse","node");
x.t("assigns","destination");
x.t("sizeof","(apptoudpsend)");
x.t("sizeof","(transportudpheader)");
x.t("time-out","timer");
x.t("message","newmsg");
x.t("message","message_getevent");
x.t("message","needs");
x.t("message","layer");
x.t("message","storing");
x.t("message","packetsize");
x.t("message","user");
x.t("message","cancelled");
x.t("message","freed");
x.t("message","type");
x.t("message","explicitly");
x.t("message","multiple");
x.t("message","canceling");
x.t("message","3.3.2");
x.t("message","i.e");
x.t("message","retained");
x.t("message","apis");
x.t("message","size");
x.t("message","short");
x.t("message","appropriately");
x.t("message","initialized");
x.t("message","api");
x.t("message","message_cancelselfmsg");
x.t("message","specified");
x.t("message","sets");
x.t("message","third");
x.t("message","store");
x.t("message","next");
x.t("message","private");
x.t("message","decremented");
x.t("message","section");
x.t("message","allocated");
x.t("message","self");
x.t("message","node");
x.t("message","often");
x.t("message","message");
x.t("message","variable");
x.t("message","qualnet");
x.t("message","infoarray");
x.t("message","msg");
x.t("message","holds");
x.t("message","incremented");
x.t("message","message_getprotocol");
x.t("message","information");
x.t("message","defined");
x.t("message","message_returninfosize");
x.t("message","structure");
x.t("message","message_returnactualpacketsize");
x.t("message","itself");
x.t("message","packet");
x.t("message","used");
x.t("message","scheduled");
x.t("message","class");
x.t("message","using");
x.t("message","message_packetalloc");
x.t("message","routeindex");
x.t("message","operations");
x.t("message","sent");
x.t("message","message_addheader");
x.t("memory","whose");
x.t("memory","associated");
x.t("affect","transmission");
x.t("message_info_type_str","info_type_undefined");
x.t("given","info");
x.t("header","passed");
x.t("header","user");
x.t("header","size");
x.t("header","sends");
x.t("header","fields");
x.t("header","transport");
x.t("header","header");
x.t("header","graphically");
x.t("header","information");
x.t("header","packe");
x.t("header","packet");
x.t("header","transportudpsendtonetwork");
x.t("header","using");
x.t("header","containing");
x.t("previous","step");
x.t("operating","layer");
x.t("discrete-event","simulation");
x.t("qualnet","3.3.2.1");
x.t("qualnet","scheduler");
x.t("qualnet","simulator");
x.t("qualnet","3.3");
x.t("qualnet","communication");
x.t("qualnet","provides");
x.t("qualnet","section");
x.t("qualnet","types");
x.t("qualnet","message");
x.t("qualnet","implementation");
x.t("qualnet","two");
x.t("qualnet","protocol");
x.t("qualnet","packet");
x.t("qualnet","class");
x.t("qualnet","terms");
x.t("event","physical");
x.t("event","type");
x.t("event","instanceid");
x.t("event","udp");
x.t("event","eventtype");
x.t("event","handler");
x.t("event","next");
x.t("event","occurs");
x.t("event","protocoltype");
x.t("event","adjacent");
x.t("event","types");
x.t("event","message");
x.t("event","event");
x.t("event","occurred");
x.t("event","allocate");
x.t("event","information");
x.t("event","called");
x.t("event","scheduled");
x.t("event","operations");
x.t("event","associated");
x.t("event","(message)");
x.t("3.3.1.1","timer");
x.t("3.3.1.1","vary");
x.t("3.3.1.1","message");
x.t("actual","data");
x.t("actual","packet");
x.t("whose","contents");
x.t("whose","size");
x.t("variable","user");
x.t("variable","response");
x.t("variable","char");
x.t("variable","msg");
x.t("variable","filled");
x.t("e.g","timer");
x.t("repeated","layer");
x.t("sourceport","source");
x.t("sourceport","nodeaddress");
x.t("sourceport","sourceport");
x.t("sourceport","setipv4addressinfo");
x.t("sourceport","udphdr-");
x.t("sourceport","info-");
x.t("ripresponse","response");
x.t("trace_printtrace","node");
x.t("infoarray","field");
x.t("infoarray","api");
x.t("infoarray","assist");
x.t("infoarray","array");
x.t("infoarray","fields");
x.t("infoarray","figure");
x.t("infoarray","[0]");
x.t("infoarray","member");
x.t("pointed","info");
x.t("3.3.1.2","table");
x.t("3.3.1.2","message");
x.t("3.3.1.2","used");
x.t("3.3.1.2","pass");
x.t("destaddr","destination");
x.t("destaddr","int");
x.t("destaddr","destaddr");
x.t("destaddr","info-");
x.t("any_dest","app_udpsendnewdatawithpriority");
x.t("msg","apptoudpsend");
x.t("msg","message_alloc");
x.t("msg","trace_transport_layer");
x.t("msg","transportdataudp");
x.t("msg","delay");
x.t("msg","sizeof");
x.t("msg","trace_application_layer");
x.t("msg","payloadsize");
x.t("msg","using");
x.t("msg","info-");
x.t("node-","transportdata.udp");
x.t("occurred","timer");
x.t("consider","time-out");
x.t("consider","following");
x.t("acknowledgment","expected");
x.t("acknowledgment","transmitted");
x.t("layers","included");
x.t("layers","place");
x.t("layers","3.3.2.1.1");
x.t("layers","section");
x.t("layers","nodes");
x.t("layers","packet");
x.t("instances","protocol");
x.t("alter","fields");
x.t("message_returnpacket","(msg)");
x.t("message_returnpacket","function");
x.t("message_returnpacket","used");
x.t("main","components");
x.t("additional","members");
x.t("additional","space");
x.t("additional","information");
x.t("value","field");
x.t("value","app_udpsendnewheaderdata");
x.t("value","app_udpsendnewheadervirtualdatawithpriority");
x.t("message_addinfo","info_type_default");
x.t("message_addinfo","function");
x.t("3-1","lists");
x.t("3-1","api");
x.t("app_udpsendnewdatawithpriority","implemented");
x.t("app_udpsendnewdatawithpriority","sends");
x.t("app_udpsendnewdatawithpriority","function");
x.t("app_udpsendnewdatawithpriority","node");
x.t("app_udpsendnewdatawithpriority","send");
x.t("app_udpsendnewdatawithpriority","schedule");
x.t("app_udpsendnewdatawithpriority","allocates");
x.t("app_udpsendnewdatawithpriority","used");
x.t("app_udpsendnewdatawithpriority","layertype");
x.t("rip_header_size","rip_rte_size");
x.t("convenient","means");
x.t("setipv4addressinfo","&info-");
x.t("allocate","new");
x.t("allocate","packet");
x.t("alarm","remove");
x.t("alarm","send");
x.t("implementation","protocols");
x.t("implementation","details");
x.t("implementation","layer-specific");
x.t("implementation","function");
x.t("implementation","code");
x.t("implementation","app_udpsendnewdatawithpriority");
x.t("holds","information");
x.t("figure","3-2");
x.t("figure","3-3");
x.t("figure","3-4");
x.t("figure","3-5");
x.t("figure","3-6");
x.t("figure","3-7");
x.t("figure","3-8");
x.t("3-2","lists");
x.t("3-2","shows");
x.t("3-2","api");
x.t("3-2","message");
x.t("specific","layer");
x.t("specific","type");
x.t("specific","circumstances");
x.t("specific","particular");
x.t("free","message");
x.t("free","propagation");
x.t("several","apis");
x.t("several","api");
x.t("incremented","size");
x.t("message_getprotocol","function");
x.t("send","packets");
x.t("send","acndata.actioncomment");
x.t("send","particular");
x.t("send","packet");
x.t("send","route");
x.t("gives","overview");
x.t("developer","simply");
x.t("delays","via");
x.t("numroutes","int");
x.t("networkipgetinterfaceaddress","node");
x.t("bypass","layer-specific");
x.t("transmitted","unlike");
x.t("transmitted","element");
x.t("transmitted","packet");
x.t("3-3","messageinfoheader");
x.t("3-3","typedef");
x.t("info_type_dscpname","info_type_transstatsdbcontent");
x.t("info_type_netstatsdbcontent","messageinfotype");
x.t("process","listed");
x.t("process","case");
x.t("originating","protocol");
x.t("packet_out","&acndata");
x.t("trace_udp","udphdr");
x.t("represent","event");
x.t("3-4","messageinfotype");
x.t("3-4","users");
x.t("takes","infotype");
x.t("although","packet");
x.t("updateseed","(clocktype)");
x.t("[0]",".info");
x.t("//libraries/developer/src/transport_udp.cpp","shown");
x.t("graphically","illustrated");
x.t("context","qualnet");
x.t("nodes","section");
x.t("nodes","information");
x.t("nodes","packet");
x.t("3.3.1.1.1","details");
x.t("3.3.1.1.1","allocated");
x.t("3.3.1.1.1","message");
x.t("purposes","timer");
x.t("arrival","packet");
x.t("strips","header");
x.t("3-5","3.3.2.2");
x.t("3-5","shows");
x.t("3-5","life");
x.t("3-5","protocol");
x.t("3-5","using");
x.t("app_tcpsendnewheadervirtualdata","sends");
x.t("&response","rip_header_size");
x.t("schedule","events");
x.t("schedule","msg_transport_fromappsend");
x.t("app_layer","app_routing_rip");
x.t("sequence","number");
x.t("data","layer");
x.t("data","clocktype");
x.t("data","packets");
x.t("data","copied");
x.t("data","via");
x.t("data","sends");
x.t("data","structures");
x.t("data","whose");
x.t("data","variable");
x.t("data","transmitted");
x.t("data","context");
x.t("data","structure");
x.t("data","packet");
x.t("data","payloadsize");
x.t("data","tostype");
x.t("data","sent");
x.t("information","needs");
x.t("information","user");
x.t("information","timer");
x.t("information","stored");
x.t("information","acndata.actiontype");
x.t("information","next");
x.t("information","typedef");
x.t("information","added");
x.t("information","message");
x.t("information","affect");
x.t("information","event");
x.t("information","infoarray");
x.t("information","used");
x.t("information","contained");
x.t("information","associated");
x.t("information","rip");
x.t("/include/api.h","example");
x.t("/include/api.h","packet");
x.t("correct","entry");
x.t("3.3.1.1.2","message");
x.t("3-6","sending");
x.t("3-6","shows");
x.t("trace_application_layer","packet_out");
x.t("msg_app_rip_regularupdatealarm","delay");
x.t("msg_app_rip_regularupdatealarm","rip");
x.t("defined","file");
x.t("defined","unit");
x.t("defined","qualnet_home");
x.t("defined","variable");
x.t("defined","using");
x.t("info_type_statcategoryname","info_type_dscpname");
x.t("message_returninfosize","function");
x.t("newly","allocated");
x.t("received","within");
x.t("received","transport");
x.t("3-7","void");
x.t("3-7","implementation");
x.t("memcpy","function");
x.t("memcpy","message_returnpacket");
x.t("result","calling");
x.t("future","time");
x.t("examples","timer");
x.t("application","layer");
x.t("application","type");
x.t("application","short");
x.t("application","header");
x.t("application","schedule");
x.t("virtualpayloadsize","size");
x.t("packetcreationtime","packet");
x.t("packetcreationtime","class");
x.t("propagation","info");
x.t("locate","remove");
x.t("routing","table");
x.t("allocates","new");
x.t("allocates","element");
x.t("allocates","message");
x.t("allocates","packet");
x.t("values","passed");
x.t("packe","field");
x.t("case","infoarray");
x.t("case","originating");
x.t("case","using");
x.t("3-8","void");
x.t("3-8","adding");
x.t("statistics-","numpktfromapp");
x.t("numpktfromapp","message_addheader");
x.t("udphdr-","checksum");
x.t("udphdr-","length");
x.t("udphdr-","sourceport");
x.t("udphdr-","destport");
x.t("alarms","implemented");
x.t("alarms","essentially");
x.t("called","layer");
x.t("called","message");
x.t("called","packet");
x.t("structure","points");
x.t("structure","type");
x.t("structure","explained");
x.t("structure","fields");
x.t("structure","sets");
x.t("structure","function");
x.t("structure","values");
x.t("structure","used");
x.t("message_returnactualpacketsize","function");
x.t("above","until");
x.t("above","msgtocancelptr");
x.t("encapsulate","message");
x.t("port","number");
x.t("described","section");
x.t("classes","implement");
x.t("two","categories");
x.t("two","types");
x.t("protocol","residing");
x.t("protocol","resides");
x.t("protocol","static");
x.t("protocol","layer");
x.t("protocol","creates");
x.t("protocol","field");
x.t("protocol","packets");
x.t("protocol","removes");
x.t("protocol","puts");
x.t("protocol","sends");
x.t("protocol","stack");
x.t("protocol","travel");
x.t("protocol","appends");
x.t("protocol","design");
x.t("protocol","receive");
x.t("protocol","processes");
x.t("protocol","transport");
x.t("protocol","adds");
x.t("protocol","event");
x.t("protocol","figure");
x.t("protocol","developer");
x.t("protocol","application");
x.t("protocol","development");
x.t("protocol","associated");
x.t("users","add");
x.t("priority","ipproto_udp");
x.t("priority","clocktype");
x.t("priority","value");
x.t("priority","priority");
x.t("priority","packet");
x.t("priority","app_udpsendnewheadervirtualdatawithpriority");
x.t("priority","info-");
x.t("&acndata","networkipreceivepacketfromtransportlayer");
x.t("&acndata","message_send");
x.t("done","udp");
x.t("note","delay");
x.t("itself","freed");
x.t("itself","function");
x.t("itself","future");
x.t("packet","passed");
x.t("packet","exchanges");
x.t("packet","events");
x.t("packet","layer");
x.t("packet","field");
x.t("packet","timer");
x.t("packet","it\u2019s");
x.t("packet","travels");
x.t("packet","arrives");
x.t("packet","removes");
x.t("packet","info");
x.t("packet","network");
x.t("packet","enclosed");
x.t("packet","parameters");
x.t("packet","sends");
x.t("packet","frees");
x.t("packet","composed");
x.t("packet","simulates");
x.t("packet","finally");
x.t("packet","next");
x.t("packet","delay");
x.t("packet","headers");
x.t("packet","adjacent");
x.t("packet","function");
x.t("packet","receive");
x.t("packet","exchange");
x.t("packet","header");
x.t("packet","event");
x.t("packet","qualnet");
x.t("packet","infoarray");
x.t("packet","acknowledgment");
x.t("packet","defined");
x.t("packet","received");
x.t("packet","application");
x.t("packet","case");
x.t("packet","protocol");
x.t("packet","class");
x.t("packet","using");
x.t("packet","including");
x.t("packet","sent");
x.t("real","data");
x.t("networkipiswirednetwork","node");
x.t("call","message_cancelselfmsg");
x.t("call","above");
x.t("call","message_packetalloc");
x.t("(transportudpheader)","trace_udp");
x.t("simulation","clock");
x.t("simulation","time");
x.t("simulation","qualnet");
x.t("used","timers");
x.t("used","modeling");
x.t("used","implement");
x.t("used","sending");
x.t("used","layer");
x.t("used","situations");
x.t("used","interchangeably");
x.t("used","access");
x.t("used","size");
x.t("used","add");
x.t("used","unless");
x.t("used","cancel");
x.t("used","perform");
x.t("used","store");
x.t("used","processing");
x.t("used","function");
x.t("used","different");
x.t("used","send");
x.t("used","represent");
x.t("used","simulate");
x.t("model","actual");
x.t("pointer","layer");
x.t("pointer","user");
x.t("pointer","original");
x.t("pointer","node");
x.t("pointer","message");
x.t("pointer","packet");
x.t("pointer","associated");
x.t("pointer","buffer");
x.t("contained","struct");
x.t("info_type_abstractcfpropagation","type");
x.t("elements","array");
x.t("elements","infoarray");
x.t("/main/message.cpp","message");
x.t("scheduled","earlier");
x.t("scheduled","calling");
x.t("re-use","message");
x.t("corresponding","section");
x.t("corresponding","header");
x.t("corresponding","protocol");
x.t("payloadsize","size");
x.t("payloadsize","message_infoalloc");
x.t("payloadsize","traceprotocol");
x.t("payloadsize","used");
x.t("payloadsize","tostype");
x.t("destport","(short)");
x.t("destport","udphdr-");
x.t("destport","info-");
x.t("transportudpsendtonetwork","implemented");
x.t("transportudpsendtonetwork","api");
x.t("transportudpsendtonetwork","next");
x.t("transportudpsendtonetwork","node");
x.t("following","function");
x.t("following","code");
x.t("finishes","execution");
x.t("class","instance");
x.t("class","apis");
x.t("class","explained");
x.t("class","members");
x.t("class","section");
x.t("class","message");
x.t("class","affect");
x.t("class","described");
x.t("class","packet");
x.t("class","used");
x.t("class","class");
x.t("using","message_alloc");
x.t("using","udp");
x.t("using","api");
x.t("using","tcp");
x.t("using","layer-specific");
x.t("using","raw");
x.t("using","function");
x.t("using","message");
x.t("using","message_addinfo");
x.t("using","memcpy");
x.t("using","message_send");
x.t("info_type_undefined","empty");
x.t("message_send","message_alloc");
x.t("message_send","schedules");
x.t("message_send","last");
x.t("message_send","function");
x.t("message_send","node");
x.t("message_send","previous");
x.t("message_send","packet");
x.t("message_free","function");
x.t("message_free","figure");
x.t("scheduling","events");
x.t("containing","useful");
x.t("calculated","actiondata");
x.t("setting","timers");
x.t("terms","event");
x.t("time-outs","internal");
x.t("pass","parameters");
x.t("pass","app");
x.t("route","updates");
x.t("route","stored");
x.t("route","expired");
x.t("route","routing");
x.t("returns","packetsize");
x.t("returns","eventtype");
x.t("returns","protocoltype");
x.t("returns","pointer");
x.t("returns","associated");
x.t("returns","layertype");
x.t("message_packetalloc","function");
x.t("message_packetalloc","node");
x.t("message_packetalloc","allocate");
x.t("message_packetalloc","called");
x.t("message_packetalloc","protocol");
x.t("message_packetalloc","payloadsize");
x.t("across","network");
x.t("development","qualnet");
x.t("routeindex","ripresponse");
x.t("routeindex","routeindex");
x.t("routeindex","dataptr-");
x.t("transportudpheader","msg-");
x.t("transportudpheader","udphdr");
x.t("udphdr","apptoudpsend");
x.t("udphdr","transportudpheader");
x.t("message_returnpacketsize","(msg)");
x.t("adding","header");
x.t("3.3.2.2.1","setting");
x.t("operations","3.3.1");
x.t("operations","message");
x.t("operations","3.3.1.1");
x.t("associated","timer");
x.t("associated","apis");
x.t("associated","info");
x.t("associated","infosize");
x.t("associated","message");
x.t("associated","event");
x.t("associated","data");
x.t("simulate","exchange");
x.t("simulate","transmission");
x.t("simulate","actual");
x.t("simulate","time-outs");
x.t("member","array");
x.t("member","message");
x.t("info_type_transstatsdbcontent","info_type_netstatsdbcontent");
x.t("occur","specified");
x.t("occur","delay");
x.t("easy-to-use","functions");
x.t("filled","information");
x.t("tostype","priority");
x.t("3.3.2.2.2","canceling");
x.t("describe","message");
x.t("including","headers");
x.t("struct","info");
x.t("struct","message_info_header_str");
x.t("struct","value");
x.t("unsigned","short");
x.t("unsigned","routeindex");
x.t("app_udpsendnewheadervirtualdatawithpriority","sends");
x.t("app_udpsendnewheadervirtualdatawithpriority","function");
x.t("dataptr-","numroutes");
x.t("dataptr-","updateseed");
x.t("info-","ttl");
x.t("info-","outgoinginterface");
x.t("info-","sourceaddr");
x.t("info-","sourceport");
x.t("info-","destaddr");
x.t("info-","priority");
x.t("info-","destport");
x.t("sent","layer");
x.t("sent","0x01");
x.t("sent","public");
x.t("sent","receiving");
x.t("sent","next");
x.t("sent","traceprotocol");
x.t("sent","itself");
x.t("buffer","size");
x.t("buffer","holding");
x.t("buffer","stores");
x.t("buffer","pointed");
x.t("(message)","occur");
x.t("message_addheader","sets");
x.t("message_addheader","function");
x.t("message_addheader","node");
x.t("message_addheader","used");
x.t("removed","header");
x.t("app_udpsendnewheaderdatawithpriority","appends");
x.t("layertype","layer");
x.t("layertype","field");
x.t("layertype","protocoltype");
x.t("higher","layer");
x.t("app_tcpsenddata","sends");
x.t("rip","version");
x.t("rip","command");
x.t("rip","implementation");
x.t("rip","protocol");
x.t("seconds","installed");
x.t("seconds","current");
x.t("seconds","timer");
}
