function FileData_Pairs(x)
{
x.t("readable","writeasstring");
x.t("example","interface");
x.t("example","listenercallback");
x.t("example","listeners");
x.t("example","code");
x.t("tag","new");
x.t("tag","catch");
x.t("exist","path");
x.t("available","new");
x.t("2008","2012");
x.t("readasstring","example");
x.t("readasstring","writeasstring");
x.t("readasstring","functions");
x.t("readasstring","function");
x.t("scalable","network");
x.t("callback","function");
x.t("void","operator");
x.t("arguments","qsh");
x.t("enabled","typical");
x.t("enabled","addlistener");
x.t("enabled","removelisteners");
x.t("try","interface-");
x.t("uses","dynamic");
x.t("shows","sample");
x.t("last","time");
x.t("interface","uses");
x.t("interface","external");
x.t("interface","may");
x.t("interface","reads");
x.t("interface","dynamic");
x.t("interface","7.2");
x.t("listener","tag");
x.t("listener","d_listenerpercent");
x.t("listener","added");
x.t("listener","object");
x.t("sample","string");
x.t("sample","code");
x.t("external","interface");
x.t("hierarchy","partition");
x.t("time","callback");
x.t("public","virtual");
x.t("public","d_listenercallback");
x.t("whenever","variable");
x.t("removes","listeners");
x.t("access","dynamic");
x.t("writeasstring","function");
x.t("writeasstring","executeasstring");
x.t("new","listener");
x.t("new","qshlistenercallback");
x.t("new","d_listener");
x.t("thrown","causing");
x.t("d_exception","e.getfullerrorstring");
x.t("objects","created");
x.t("printf","error");
x.t("printf","variable");
x.t("printf","value");
x.t("listenercallback","public");
x.t("listenercallback","class");
x.t("invoked","sample");
x.t("qsh","listener");
x.t("qsh","printf");
x.t("dynamichierarchy.readasstring","node/1/cbr/1024/numpktssent");
x.t("api","external");
x.t("api","calling");
x.t("api","7.2");
x.t("api","following");
x.t("d_listenerpercent","invokes");
x.t("remove","listeners");
x.t("network","technologies");
x.t("throws","exception");
x.t("overloads","operator");
x.t("newvalue","printf");
x.t("350","class");
x.t("path","exist");
x.t("path","const");
x.t("path","resolve");
x.t("path","function");
x.t("path","invalid");
x.t("7-5","example");
x.t("7-5","shows");
x.t("errstring.c","str");
x.t("dynamichierarchy.removelisteners","node/1/cbr/1024/numpktssent");
x.t("7-6","example");
x.t("7-6","shows");
x.t("changed","350");
x.t("changed","newvalue.c");
x.t("part","code");
x.t("virtual","void");
x.t("const","std::string");
x.t("7-7","shows");
x.t("7-7","sample");
x.t("/include/dynamic.h","readasstring");
x.t("frees","memory");
x.t("makes","call");
x.t("partition","structure");
x.t("writes","value");
x.t("std::string","newvalue");
x.t("std::string","errstring");
x.t("std::string","value");
x.t("std::string","listenertype");
x.t("segment","listener");
x.t("segment","makes");
x.t("string","printed");
x.t("prints","result");
x.t("second","part");
x.t("functions","readasstring");
x.t("functions","writeasstring");
x.t("functions","d_hierarchy");
x.t("error","errstring.c");
x.t("error","message");
x.t("invokes","callback");
x.t("qshlistenercallback","catch");
x.t("resolve","object");
x.t("2012","scalable");
x.t("function","readasstring");
x.t("function","whenever");
x.t("function","removes");
x.t("function","invoked");
x.t("function","throws");
x.t("function","writes");
x.t("function","reads");
x.t("function","adds");
x.t("function","value");
x.t("function","defined");
x.t("function","executes");
x.t("function","addlistener");
x.t("function","removelisteners");
x.t("d_listenercallback","public");
x.t("d_listenercallback","objects");
x.t("may","access");
x.t("may","remove");
x.t("reads","value");
x.t("cannot","read");
x.t("newvalue.c","str");
x.t("listeners","calling");
x.t("listeners","object");
x.t("node/1/cbr/1024/numpktssent","listener");
x.t("node/1/cbr/1024/numpktssent","qsh");
x.t("node/1/cbr/1024/numpktssent","path");
x.t("node/1/cbr/1024/numpktssent","changed");
x.t("node/1/cbr/1024/numpktssent","prints");
x.t("node/1/cbr/1024/numpktssent","value");
x.t("node/1/cbr/1024/numpktssent","removed");
x.t("changes","compared");
x.t("qualnet_home","/include/dynamic.h");
x.t("calling","functions");
x.t("calling","function");
x.t("added","figure");
x.t("added","object");
x.t("code","segment");
x.t("code","function");
x.t("invalid","object");
x.t("adds","new");
x.t("given","path");
x.t("listening","enabled");
x.t("memory","function");
x.t("message","printed");
x.t("d_hierarchy","class");
x.t("executable","addlistener");
x.t("causing","error");
x.t("printed","callback");
x.t("printed","std::string");
x.t("variable","changed");
x.t("variable","changes");
x.t("compared","last");
x.t("errstring","try");
x.t("errstring","qsh");
x.t("value","printf");
x.t("value","std::string");
x.t("value","node/1/cbr/1024/numpktssent");
x.t("value","value.c");
x.t("value","object");
x.t("(errstring)","printf");
x.t("similar","listening");
x.t("writable","executeasstring");
x.t("figure","7-5");
x.t("figure","7-6");
x.t("figure","7-7");
x.t("value.c","str");
x.t("exception","thrown");
x.t("exception","path");
x.t("partition-","dynamichierarchy.readasstring");
x.t("partition-","dynamichierarchy.removelisteners");
x.t("partition-","dynamichierarchy.addlistener");
x.t("read","exception");
x.t("dynamic","hierarchy");
x.t("dynamic","api");
x.t("str","std::string");
x.t("str","figure");
x.t("str","catch");
x.t("dynamichierarchy.addlistener","node/1/cbr/1024/numpktssent");
x.t("typical","external");
x.t("defined","overloads");
x.t("defined","qualnet_home");
x.t("defined","listening");
x.t("result","path");
x.t("0.10","arguments");
x.t("listenertype","0.10");
x.t("structure","external");
x.t("executes","object");
x.t("7.2","using");
x.t("work","similar");
x.t("call","function");
x.t("created","listener");
x.t("following","functions");
x.t("using","dynamic");
x.t("class","available");
x.t("class","listenercallback");
x.t("class","figure");
x.t("class","defined");
x.t("executeasstring","function");
x.t("executeasstring","figure");
x.t("executeasstring","work");
x.t("interface-","partition-");
x.t("addlistener","example");
x.t("addlistener","external");
x.t("addlistener","function");
x.t("addlistener","removelisteners");
x.t("catch","d_exception");
x.t("e.getfullerrorstring","errstring");
x.t("e.getfullerrorstring","(errstring)");
x.t("member","functions");
x.t("operator","const");
x.t("operator","second");
x.t("d_listener","d_listenercallback");
x.t("removed","std::string");
x.t("object","readable");
x.t("object","frees");
x.t("object","function");
x.t("object","cannot");
x.t("object","node/1/cbr/1024/numpktssent");
x.t("object","given");
x.t("object","executable");
x.t("object","writable");
x.t("removelisteners","example");
x.t("removelisteners","2008");
x.t("removelisteners","function");
x.t("removelisteners","d_hierarchy");
x.t("removelisteners","member");
}
