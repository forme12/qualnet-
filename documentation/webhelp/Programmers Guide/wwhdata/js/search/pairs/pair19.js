function FileData_Pairs(x)
{
x.t("passed","down");
x.t("supports","multicast");
x.t("supports","following");
x.t("label","switching");
x.t("label","switch");
x.t("label","switched");
x.t("example","user");
x.t("example","field");
x.t("example","udp");
x.t("example","place");
x.t("example","deliverpacket");
x.t("example","function");
x.t("example","code");
x.t("example","non-mandatory");
x.t("example","include");
x.t("example","implementation");
x.t("example","data");
x.t("example","application");
x.t("example","protocol");
x.t("example","created");
x.t("example","following");
x.t("example","adding");
x.t("(rsvp)","control");
x.t("4.3.4.3","transport");
x.t("4.3.4.3","message");
x.t("msg_transport_fromnetwork","corresponds");
x.t("msg_transport_fromnetwork","networktotransportinfo");
x.t("msg_transport_fromnetwork","transportudpsendtoapp");
x.t("msg_transport_fromnetwork","used");
x.t("msg_transport_fromnetwork","message_setlayer");
x.t("4.3.5","adding");
x.t("timers","addition");
x.t("timers","4.3.5.6");
x.t("timers","section");
x.t("timers","transport");
x.t("coding","different");
x.t("/libraries","called");
x.t("statements","include");
x.t("included","parameter");
x.t("included","state");
x.t("included","list");
x.t("included","enumeration");
x.t("included","protocol's");
x.t("searching","keyword");
x.t("dynamichierarchy","figure");
x.t("myprotocol\u2019s","event");
x.t("unlike","udp");
x.t("//----------------------------------------------------------","protocol");
x.t("255","description");
x.t("255","figure");
x.t("ip_p","switch");
x.t("routeadvertisementtype","type");
x.t("provide","reliable");
x.t("provide","protocol's");
x.t("provide","data");
x.t("protocols","4.3.5");
x.t("protocols","files");
x.t("protocols","always");
x.t("protocols","instance");
x.t("protocols","trace");
x.t("protocols","udp");
x.t("protocols","add");
x.t("protocols","enumerated");
x.t("protocols","initializing");
x.t("protocols","enumeration");
x.t("protocols","write");
x.t("protocols","sendtoudp");
x.t("protocols","communicate");
x.t("protocols","exchange");
x.t("protocols","transport");
x.t("protocols","typedef");
x.t("protocols","section");
x.t("protocols","node");
x.t("protocols","qualnet");
x.t("protocols","running");
x.t("protocols","several");
x.t("protocols","figure");
x.t("protocols","constant");
x.t("protocols","services");
x.t("protocols","4.3.6.1");
x.t("protocols","case");
x.t("library","example");
x.t("library","description");
x.t("library","doesn\u2019t");
x.t("library","functions");
x.t("library","addon");
x.t("library","function");
x.t("library","e.g");
x.t("library","qualnet");
x.t("library","called");
x.t("library","modify");
x.t("4.3.4.4","complete");
x.t("4.3.4.4","network");
x.t("below","msg_app_fromtransport");
x.t("below","initialized");
x.t("below","msg_transport_fromappsend");
x.t("below","typedef");
x.t("below","udplayer-");
x.t("msg_transport_fromappopen","message");
x.t("illustrate","different");
x.t("illustrate","process");
x.t("available","layer");
x.t("available","qualnet");
x.t("available","specific");
x.t("manner","initialization");
x.t("manner","helpful");
x.t("placed","library");
x.t("exist","create");
x.t("parameter","example");
x.t("parameter","ipproto_udp");
x.t("parameter","new");
x.t("parameter","follows");
x.t("parameter","index");
x.t("parameter","enable");
x.t("parameter","configuration");
x.t("parameter","declaration");
x.t("parameter","specification");
x.t("parameter","protocol");
x.t("parameter","statistics");
x.t("transport-protocol-myprotocol","parameter\\n");
x.t("transport-protocol-myprotocol","&wasfound");
x.t("transport-protocol-myprotocol","define");
x.t("myprotcol","node-");
x.t("else","destaddress");
x.t("else","printf");
x.t("else","found");
x.t("else","strcmp");
x.t("else","error_reporterror");
x.t("udptoapprecv","info");
x.t("udptoapprecv","message_returninfo");
x.t("4.3.6","special");
x.t("receives","packet");
x.t("defines","events");
x.t("msg_app_fromtransdatasent","message");
x.t("hints","naming");
x.t("just","entry");
x.t("just","string");
x.t("lead","unexpected");
x.t("/main/partition.cpp","calls");
x.t("/main/partition.cpp","section");
x.t("transportudp","unknown");
x.t("message_getevent","(msg)");
x.t("previoushopaddress","networkdataip");
x.t("2008","2012");
x.t("resides","functionality");
x.t("resides","application");
x.t("shown","below");
x.t("shown","section");
x.t("shown","figure");
x.t("multimedia","enterprise");
x.t("implement","rsvp-te");
x.t("implement","prefix");
x.t("implement","udp");
x.t("implement","protocol\u2019s");
x.t("implement","congestion");
x.t("files","placed");
x.t("files","just");
x.t("files","create");
x.t("files","rsvp-te");
x.t("files","having");
x.t("files","needed");
x.t("files","transport_udp.h");
x.t("files","udp");
x.t("files","final");
x.t("files","contain");
x.t("files","first");
x.t("files","clearly");
x.t("files","section");
x.t("files","transport");
x.t("files","qualnet_home");
x.t("files","important");
x.t("files","throughout");
x.t("files","header");
x.t("files","qualnet");
x.t("files","developer");
x.t("files","models");
x.t("files","transport_rsvp.h");
x.t("files","examples");
x.t("files","described");
x.t("files","following");
x.t("files","folders");
x.t("files","associated");
x.t("files","generally");
x.t("lists","protocols");
x.t("lists","among");
x.t("lists","transport");
x.t("lists","header");
x.t("subdirectory","qualnet_home");
x.t("needs","included");
x.t("needs","added");
x.t("needs","additional");
x.t("trace_any_protocol","state");
x.t("trace_any_protocol","traceprotocoltype");
x.t("apptoudpsend","info");
x.t("apptoudpsend","message_returninfo");
x.t("nettotransinfo-","sourceaddr");
x.t("transport-layer","protocols");
x.t("d_int32","numpkttoapp");
x.t("d_int32","numpktfromapp");
x.t("every","time");
x.t("4.3.5.10","finalization");
x.t("scalable","network");
x.t("delivery","provide");
x.t("delivery","udp");
x.t("delivery","transport");
x.t("delivery","service");
x.t("description","found");
x.t("description","add");
x.t("description","qualnet");
x.t("description","data");
x.t("description","event/message");
x.t("description","protocol");
x.t("description","transportprotocol");
x.t("create","files");
x.t("create","instance");
x.t("create","single");
x.t("create","function");
x.t("create","directory");
x.t("create","header");
x.t("create","output");
x.t("describes","implement");
x.t("describes","apis");
x.t("describes","develop");
x.t("describes","steps");
x.t("describes","event");
x.t("describes","main");
x.t("describes","modify");
x.t("refer","file");
x.t("refer","qualnet");
x.t("sendtorsvp","sendtotransport");
x.t("sendtorsvp","node");
x.t("sending","packets");
x.t("sending","receiving");
x.t("sending","packet");
x.t("tree","compile");
x.t("4.3.5.11","protocol");
x.t("4.3.5.11","including");
x.t("tracing","qualnet");
x.t("user-specified","delay");
x.t("user-specified","configuration");
x.t("user-specified","priority");
x.t("3.3.2.2","discusses");
x.t("auxiliary","service");
x.t("ttl","figure");
x.t("ttl","break");
x.t("ttl","tostype");
x.t("msg_transport_rsvp_pathrefresh","case");
x.t("static","void");
x.t("layer","unlike");
x.t("layer","protocols");
x.t("layer","receives");
x.t("layer","resides");
x.t("layer","files");
x.t("layer","shown");
x.t("layer","uses");
x.t("layer","maintained");
x.t("layer","forwarded");
x.t("layer","packets");
x.t("layer","removes");
x.t("layer","apis");
x.t("layer","listed");
x.t("layer","determines");
x.t("layer","initialization");
x.t("layer","organization");
x.t("layer","msg_prop_signalarrival");
x.t("layer","udp");
x.t("layer","network");
x.t("layer","api");
x.t("layer","msg_app_fromtranslistenresult");
x.t("layer","processed");
x.t("layer","communication");
x.t("layer","follows");
x.t("layer","protocol\u2019s");
x.t("layer","enables");
x.t("layer","direct");
x.t("layer","provides");
x.t("layer","sends");
x.t("layer","stack");
x.t("layer","tcp/ip");
x.t("layer","string");
x.t("layer","outgoing");
x.t("layer","developing");
x.t("layer","functions");
x.t("layer","request");
x.t("layer","appends");
x.t("layer","means");
x.t("layer","communicate");
x.t("layer","tostype_priority");
x.t("layer","number");
x.t("layer","function");
x.t("layer","define");
x.t("layer","stores");
x.t("layer","transport");
x.t("layer","section");
x.t("layer","qualnet_home");
x.t("layer","connection-oriented");
x.t("layer","enable");
x.t("layer","level");
x.t("layer","thus");
x.t("layer","header");
x.t("layer","event");
x.t("layer","st-");
x.t("layer","4.3");
x.t("layer","send");
x.t("layer","prototype");
x.t("layer","msg_app_fromtransopenresult");
x.t("layer","services");
x.t("layer","myprotocol");
x.t("layer","data");
x.t("layer","node_processevent");
x.t("layer","transport_finalize");
x.t("layer","routing");
x.t("layer","application");
x.t("layer","finalization");
x.t("layer","case");
x.t("layer","4.3.1.3");
x.t("layer","protocol");
x.t("layer","msg_transport_fromapplisten");
x.t("layer","communicates");
x.t("layer","transportudpsendtonetwork");
x.t("layer","similarly");
x.t("layer","using");
x.t("layer","message_send");
x.t("rsvp-te","example");
x.t("rsvp-te","extension");
x.t("rsvp-te","transport_initialize");
x.t("rsvp-te","check");
x.t("rsvp-te","write");
x.t("rsvp-te","4.3.5.7");
x.t("rsvp-te","control");
x.t("rsvp-te","function");
x.t("rsvp-te","event");
x.t("rsvp-te","implementation");
x.t("rsvp-te","reservation");
x.t("rsvp-te","protocol");
x.t("rsvp-te","former");
x.t("rsvp-te","model");
x.t("rsvp-te","used");
x.t("source","files");
x.t("source","tree");
x.t("source","(server)");
x.t("source","file");
x.t("source","destination");
x.t("source","address");
x.t("source","header");
x.t("mechanism","tcp");
x.t("mechanism","means");
x.t("mechanism","maintains");
x.t("events","handled");
x.t("events","timer");
x.t("events","unknown");
x.t("events","add");
x.t("events","messages");
x.t("events","data");
x.t("various","tcp");
x.t("various","functions");
x.t("enum","declarations");
x.t("enum","transportprotocol_udp");
x.t("enum","trace_undefined");
x.t("enum","message/event");
x.t("enum","special");
x.t("variables","required");
x.t("variables","protocol\u2019s");
x.t("variables","section");
x.t("variables","transport");
x.t("variables","whose");
x.t("variables","defined");
x.t("variables","structure");
x.t("variables","update");
x.t("4.3.5.12","4.3.5.1");
x.t("4.3.5.12","integrating");
x.t("instructions","creating");
x.t("instructions","given");
x.t("having","header");
x.t("always","mandatory");
x.t("always","add");
x.t("instance","parameter");
x.t("instance","udp");
x.t("instance","initializing");
x.t("instance","buf");
x.t("instance","identifier");
x.t("instance","protocol");
x.t("any_address","nodeinput");
x.t("required","example");
x.t("required","e.g");
x.t("related","variables");
x.t("stands","destination");
x.t("4-1","transport");
x.t("(udp)","user");
x.t("(udp)","offers");
x.t("improve","performance");
x.t("improve","runtime");
x.t("components","new");
x.t("components","udp");
x.t("components","common");
x.t("components","transport");
x.t("components","protocol");
x.t("void","transport_initialize");
x.t("void","tcp");
x.t("void","sendrouteadvertisement");
x.t("void","myprotocolvariable");
x.t("void","sendtoudp");
x.t("void","deliverpacket");
x.t("void","rsvplayer");
x.t("void","transportudpinit");
x.t("void","rsvpvariable");
x.t("void","transportudplayer");
x.t("void","transportudpsendtoapp");
x.t("void","transport_finalize");
x.t("void","transportudpsendtonetwork");
x.t("void","transportudpfinalize");
x.t("void","transport_processevent");
x.t("regular","tcp");
x.t("flag","indicates");
x.t("flag","accordingly");
x.t("flag","indicate");
x.t("flag","corresponding");
x.t("/main/app_util.cpp","example");
x.t("/main/app_util.cpp","contains");
x.t("snippets","look");
x.t("recommend","adding");
x.t("4-49","typedef");
x.t("4-49","adding");
x.t("performs","switch");
x.t("performs","task");
x.t("performs","following");
x.t("observed","qualnet");
x.t("responsible","printing");
x.t("user","datagram");
x.t("user","specified");
x.t("user","input");
x.t("user","qualnet");
x.t("user","specify");
x.t("cbr","constant");
x.t("cbr","myprotocol");
x.t("transportdata","field");
x.t("transportdata","4.3.5.4");
x.t("transportdata","transportdataudp");
x.t("transportdata","point");
x.t("transportdata","include");
x.t("transportdata","main");
x.t("transportdata","modify");
x.t("enabled","example");
x.t("enabled","searching");
x.t("enabled","transport-protocol-myprotocol");
x.t("enabled","void");
x.t("enabled","initialization");
x.t("enabled","udp");
x.t("enabled","4.3.5.9.3");
x.t("enabled","calling");
x.t("enabled","disabled");
x.t("enabled","rsvpvariable");
x.t("enabled","making");
x.t("enabled","myprotocol-statistics");
x.t("enabled","myprotocol");
x.t("enabled","protocol");
x.t("msg_app_fromtransport","message_setinstanceid");
x.t("msg_app_fromtransport","destination");
x.t("msg_app_fromtransport","message");
x.t("discussed","snippets");
x.t("discussed","section");
x.t("parameter-name","name");
x.t("parameter-name","index");
x.t("nodeid","any_address");
x.t("tables","default");
x.t("tables","used");
x.t("msg_prop_signalend","101");
x.t("creates","header");
x.t("4-60","example");
x.t("4-60","declaring");
x.t("(networktotransportinfo)","infoptr");
x.t("/transport_tcp.cpp","(developer_srcdir)");
x.t("uses","udp");
x.t("uses","network");
x.t("uses","store");
x.t("uses","several");
x.t("guaranteed","delivery");
x.t("implemented","network_ip.cpp");
x.t("implemented","file");
x.t("implemented","transport_udp.cpp");
x.t("implemented","qualnet_home");
x.t("implemented","qualnet");
x.t("implemented","using");
x.t("traverse","protocol");
x.t("last","trace_any_protocol");
x.t("last","code");
x.t("transporttcpinit","node");
x.t("field","transportdata");
x.t("field","udpstatsenabled");
x.t("field","message");
x.t("field","header");
x.t("field","protocol");
x.t("field","used");
x.t("handled","respective");
x.t("handled","node");
x.t("shows","code");
x.t("shows","outline");
x.t("(msg)","udptoapprecv");
x.t("(msg)","int");
x.t("(msg)","setipv4addressinfo");
x.t("(msg)","case");
x.t("(msg)","udphdr-");
x.t("(msg)","info-");
x.t("(msg)","rsvphandlepacket");
x.t("program","work");
x.t("schedules","packet");
x.t("acndata","acndata.actiontype");
x.t("ipproto_myprotocol","255");
x.t("ipproto_myprotocol","sendtomyprotocol");
x.t("ipproto_myprotocol","defined");
x.t("4-61","static");
x.t("4-61","performs");
x.t("4-61","delivering");
x.t("packet\u2019s","header");
x.t("nodeaddress","previoushopaddress");
x.t("nodeaddress","destaddress");
x.t("nodeaddress","sourceaddress");
x.t("nodeaddress","destinationaddress");
x.t("extension","reno");
x.t("extension","rsvp");
x.t("mdp","suited");
x.t("mdp","udp");
x.t("inter-network","core");
x.t("mode","4.3.1.2");
x.t("state","variables");
x.t("state","new");
x.t("state","initialization");
x.t("state","declare");
x.t("state","allocating");
x.t("state","store");
x.t("state","section");
x.t("state","end");
x.t("state","header");
x.t("state","variable");
x.t("state","figure");
x.t("state","information");
x.t("state","structure");
x.t("state","protocol");
x.t("tahoe","tcp");
x.t("tahoe","include");
x.t("support","basic");
x.t("provided","refer");
x.t("provided","udp");
x.t("provided","myprotocol");
x.t("look","complete");
x.t("protocol-specific","event");
x.t("protocol-specific","configuration");
x.t("interface","static");
x.t("interface","address");
x.t("interface","functions");
x.t("interface","index");
x.t("interface","any_dest");
x.t("interface","figure");
x.t("interface","broadcast");
x.t("statement","file");
x.t("statement","indicates");
x.t("statement","handle");
x.t("statement","include");
x.t("statement","protocol");
x.t("timer","events");
x.t("timer","itself");
x.t("points","newly");
x.t("&node-","partitiondata-");
x.t("partitiondata-","dynamichierarchy");
x.t("ipproto_udp","description");
x.t("ipproto_udp","false");
x.t("ipproto_udp","sendtoudp");
x.t("ipproto_udp","constant");
x.t("ipproto_udp","defined");
x.t("leak","memory");
x.t("4-62","sending");
x.t("4-62","implemented");
x.t("(rsvp-te)","rsvp-te");
x.t("(rsvp-te)","reservation");
x.t("(rsvp-te)","used");
x.t("suited","reliable");
x.t("newreno","tcp");
x.t("exit","fast");
x.t("basic","rsvp");
x.t("type","msg_transport_fromnetwork");
x.t("type","lists");
x.t("type","files");
x.t("type","tcp");
x.t("type","int");
x.t("type","error_assert");
x.t("type","received");
x.t("type","note");
x.t("type","used");
x.t("type","either");
x.t("type","transportprotocol");
x.t("open","tcp");
x.t("close","tcp");
x.t("doesn\u2019t","already");
x.t("maintained","new");
x.t("traces","packets");
x.t("retval","false");
x.t("retval","transportdataudp");
x.t("sample","code");
x.t("assert","(false)");
x.t("forwarded","application");
x.t("4-63","shows");
x.t("4-63","transport");
x.t("/transport_abstract_tcp_timer.cpp","(developer_srcdir)");
x.t("hence","incur");
x.t("establishment","udp");
x.t("packets","traverse");
x.t("packets","udp");
x.t("packets","delivered");
x.t("packets","destination");
x.t("packets","may");
x.t("packets","transport");
x.t("packets","myprotocol");
x.t("packets","received");
x.t("packets","collecting");
x.t("packets","application");
x.t("packets","protocol");
x.t("packets","sent");
x.t("trace","protocols");
x.t("trace","lists");
x.t("trace","facilitate");
x.t("time","trace");
x.t("time","udp");
x.t("mandatory","udp");
x.t("mandatory","include");
x.t("mandatory","optional");
x.t("mandatory","protocol");
x.t("mandatory","service");
x.t("calls","initialization");
x.t("calls","api");
x.t("calls","function");
x.t("calls","transport");
x.t("calls","appropriate");
x.t("calls","finalization");
x.t("4.3.5.6.2.1","describes");
x.t("4.3.5.6.2.1","udp");
x.t("no_comment","trace_printtrace");
x.t("/libraries/developer/src/app_cbr.cpp","include");
x.t("ipproto_tcp","description");
x.t("ipproto_tcp","sendtotcp");
x.t("ipproto_tcp","constant");
x.t("4-64","implemented");
x.t("4-64","4.3.5.9.5");
x.t("4-64","finalization");
x.t("wired","interface");
x.t("down","next");
x.t("(server)","receivers");
x.t("acknowledgement","(nack)");
x.t("i.e","unreliable");
x.t("i.e","ack");
x.t("connection","state");
x.t("connection","establishment");
x.t("connection","closed");
x.t("connection","request");
x.t("connection","information");
x.t("connection","received");
x.t("connection","management");
x.t("connection","msg_transport_fromappclose");
x.t("connection","4.3.4.2");
x.t("rate","example");
x.t("variants","abstract");
x.t("variants","qualnet");
x.t("network_ip.h","file");
x.t("network_ip.h","follow");
x.t("network_ip.h","protocol");
x.t("network_ip.h","returns");
x.t("network_ip.h","contains");
x.t("sections","create");
x.t("however","recommended");
x.t("multiple","instances");
x.t("explains","implementation");
x.t("explains","read");
x.t("partition_initializenodes","implemented");
x.t("partition_initializenodes","calls");
x.t("transportdata.myprotocolenabled","false");
x.t("transportdata.myprotocolenabled","true");
x.t("unknown","type");
x.t("unknown","setting");
x.t("inside","switch");
x.t("4.3.5.6.2.2","describes");
x.t("4.3.5.6.2.2","rsvp-te");
x.t("recv","acndata.actioncomment");
x.t("trigger","initialize");
x.t("/libraries/developer/makefile-common","shown");
x.t("4-65","recompile");
x.t("4-65","adding");
x.t("removes","udp");
x.t("removes","transport");
x.t("removes","header");
x.t("require","guaranteed");
x.t("networks","without");
x.t("needed","communicate");
x.t("needed","protocol");
x.t("partial","description");
x.t("apis","implemented");
x.t("apis","listed");
x.t("apis","inter-layer");
x.t("apis","enumerated");
x.t("apis","parameters");
x.t("apis","communicate");
x.t("apis","enable");
x.t("apis","used");
x.t("apis","message_setlayer");
x.t("apis","app_tcpopenconnection");
x.t("4.2.4.1","file");
x.t("listed","below");
x.t("listed","section");
x.t("default","assert");
x.t("default","variant");
x.t("default","invalid");
x.t("default","value");
x.t("default","values");
x.t("default","case");
x.t("udp-statistics","&retval");
x.t("channel","layer");
x.t("(ipprotocolnumber)","delivery");
x.t("4-66","shows");
x.t("4-66","setting");
x.t("consists","two");
x.t("bulk","transfer");
x.t("certain","applications");
x.t("start","congestion");
x.t("new","library");
x.t("new","info");
x.t("new","protocol\u2019s");
x.t("new","transport");
x.t("new","event");
x.t("new","protocol");
x.t("transport_initialize","implemented");
x.t("transport_initialize","calls");
x.t("transport_initialize","initialization");
x.t("transport_initialize","first");
x.t("transport_initialize","reads");
x.t("transport_initialize","section");
x.t("transport_initialize","node");
x.t("transport_initialize","call");
x.t("prefix","file");
x.t("among","information");
x.t("updates","udp");
x.t("details","viewing");
x.t("single","string");
x.t("compiling","files");
x.t("bellmanford","function");
x.t("destaddress","networkipgetinterfacebroadcastaddress");
x.t("destaddress","any_dest");
x.t("destaddress","networkipiswirednetwork");
x.t("top","datagram");
x.t("top","generic");
x.t("includes","default");
x.t("includes","selective");
x.t("includes","optional");
x.t("includes","following");
x.t("network_ip.cpp","void");
x.t("network_ip.cpp","api");
x.t("network_ip.cpp","function");
x.t("network_ip.cpp","contains");
x.t("network_ip.cpp","specify");
x.t("transport_udp.h","implement");
x.t("transport_udp.h","source");
x.t("transport_udp.h","transport_udp.cpp");
x.t("transport_udp.h","include");
x.t("transport_udp.h","used");
x.t("trace_myprotcol","last");
x.t("printf","transportudp");
x.t("printf","transport");
x.t("size","using");
x.t("passes","networkipreceivepacketfromtransportlayer");
x.t("rsvpinitapplication","node");
x.t("rsvpinitapplication","called");
x.t("printing","statistics");
x.t("(tcp)","tcp");
x.t("omits","features");
x.t("http","4.3.1.4");
x.t("determines","whether");
x.t("determines","resources");
x.t("file","example");
x.t("file","defines");
x.t("file","files");
x.t("file","source");
x.t("file","network_ip.h");
x.t("file","default");
x.t("file","network_ip.cpp");
x.t("file","includes");
x.t("file","api.h");
x.t("file","udp");
x.t("file","transport.cpp");
x.t("file","transport_udp.cpp");
x.t("file","sets");
x.t("file","function");
x.t("file","may");
x.t("file","section");
x.t("file","format");
x.t("file","qualnet_home");
x.t("file","end");
x.t("file","transport_myprotocol.cpp");
x.t("file","e.g");
x.t("file","qualnet");
x.t("file","transport.h");
x.t("file","include");
x.t("file","value");
x.t("file","makefile-common");
x.t("file","data");
x.t("file","typical");
x.t("file","called");
x.t("file","transport_myprotocol.h");
x.t("file","relevant");
x.t("file","statistics");
x.t("file","names");
x.t("file","contains");
x.t("initialization","function");
x.t("initialization","section");
x.t("initialization","transport");
x.t("initialization","message");
x.t("initialization","event");
x.t("initialization","process");
x.t("initialization","routine");
x.t("indicates","tcp");
x.t("indicates","name");
x.t("indicates","whether");
x.t("indicates","protocol");
x.t("indicates","model");
x.t("indicates","statistics");
x.t("list","protocols");
x.t("list","trace");
x.t("list","apis");
x.t("list","summarizes");
x.t("list","transport");
x.t("found","api");
x.t("found","node-");
x.t("api.h","shown");
x.t("api.h","section");
x.t("api.h","message");
x.t("api.h","include");
x.t("api.h","protocol");
x.t("need","performed");
x.t("user-developed","models");
x.t("stdlib.h","include");
x.t("status","parameter-name");
x.t("status","protocol");
x.t("finds","whether");
x.t("(wasfound)","strcmp");
x.t("(false)","abort");
x.t("msg_transport_protocol_newevent1","msg_transport_protocol_newevent2");
x.t("info","udptoapprecv");
x.t("info","apptoudpsend");
x.t("info","field");
x.t("info","address");
x.t("info","udp-");
x.t("short","message_returnpacketsize");
x.t("simulator","leak");
x.t("simulator","end");
x.t("increments","value");
x.t("io_printstat","function");
x.t("io_printstat","node");
x.t("io_printstat","print");
x.t("add","source");
x.t("add","entry");
x.t("add","transport");
x.t("add","end");
x.t("add","code");
x.t("add","constant");
x.t("add","dynamic");
x.t("add","protocol");
x.t("udp","receives");
x.t("udp","implement");
x.t("udp","user-specified");
x.t("udp","rsvp-te");
x.t("udp","performs");
x.t("udp","void");
x.t("udp","user");
x.t("udp","field");
x.t("udp","4.3.5.6.2.2");
x.t("udp","initialization");
x.t("udp","increments");
x.t("udp","add");
x.t("udp","tcp");
x.t("udp","suitable");
x.t("udp","follows");
x.t("udp","provides");
x.t("udp","sends");
x.t("udp","int");
x.t("udp","understand");
x.t("udp","transportdataudp");
x.t("udp","functions");
x.t("udp","4.3.5.9");
x.t("udp","4.3.5.9.2");
x.t("udp","smaller");
x.t("udp","appears");
x.t("udp","function");
x.t("udp","cannot");
x.t("udp","define");
x.t("udp","transport");
x.t("udp","section");
x.t("udp","header");
x.t("udp","transportudpinittrace");
x.t("udp","qualnet");
x.t("udp","event");
x.t("udp","node-");
x.t("udp","any_dest");
x.t("udp","implementation");
x.t("udp","data");
x.t("udp","protocol");
x.t("udp","connectionless");
x.t("udp","pointer");
x.t("udp","pass");
x.t("udp","statistics");
x.t("udp","transportudpfinalize");
x.t("datagram","delivery");
x.t("datagram","protocol");
x.t("enterprise","model");
x.t("simplifies","omits");
x.t("organization","files");
x.t("complete","description");
x.t("complete","list");
x.t("complete","code");
x.t("actions","creates");
x.t("actions","need");
x.t("actions","reads");
x.t("flags","connection");
x.t("msg_prop_signalarrival","100");
x.t("msg_transport_protocol_newevent2","msg_default");
x.t("beginning","packet");
x.t("during","protocol");
x.t("during","simulation");
x.t("/adaptation.cpp","(developer_srcdir)");
x.t("network","layer");
x.t("network","technologies");
x.t("network","layers");
x.t("network","packet");
x.t("requested","present");
x.t("api","sending");
x.t("api","message_infoalloc");
x.t("api","message_removeheader");
x.t("api","composed");
x.t("api","function");
x.t("api","networkipreceivepacketfromtransportlayer");
x.t("api","reference");
x.t("api","message_returnpacket");
x.t("api","used");
x.t("api","message_free");
x.t("api","message_returnpacketsize");
x.t("api","message_addheader");
x.t("guide","details");
x.t("guide","4.3.4.1");
x.t("entry","trace_any_protocol");
x.t("entry","msg_default");
x.t("entry","myprotocol");
x.t("entry","trace_myprotocol");
x.t("applies","instances");
x.t("applies","nodes");
x.t("initialized","process");
x.t("initialized","bottom");
x.t("check","enabled");
x.t("check","protocol");
x.t("message_setinstanceid","msg");
x.t("remove","udp");
x.t("tcp","rsvp-te");
x.t("tcp","regular");
x.t("tcp","open");
x.t("tcp","close");
x.t("tcp","variants");
x.t("tcp","connection");
x.t("tcp","apis");
x.t("tcp","new");
x.t("tcp","transport_initialize");
x.t("tcp","udp");
x.t("tcp","listen");
x.t("tcp","provides");
x.t("tcp","indicate");
x.t("tcp","reno");
x.t("tcp","lastly");
x.t("tcp","congestion");
x.t("tcp","means");
x.t("tcp","notify");
x.t("tcp","implements");
x.t("tcp","different");
x.t("tcp","define");
x.t("tcp","variant");
x.t("tcp","transmission");
x.t("tcp","connection-oriented");
x.t("tcp","abstract");
x.t("tcp","bool");
x.t("tcp","implementation");
x.t("tcp","models");
x.t("tcp","protocol");
x.t("tcp","based");
x.t("tcp","call");
x.t("tcp","pointer");
x.t("tcp","pass");
x.t("tcp","versions");
x.t("unreliable","datagram");
x.t("unreliable","connectionless");
x.t("end-to-end","rate-based");
x.t("features","improve");
x.t("features","udp");
x.t("features","tcp");
x.t("tcp-based","applications");
x.t("traffic","engineering");
x.t("overview","flow");
x.t("4.3.5.6.1","describes");
x.t("4.3.5.6.1","declare");
x.t("4.3.5.6.1","modifying");
x.t("recommended","user-developed");
x.t("recommended","separate");
x.t("udpstatsenabled","false");
x.t("udpstatsenabled","true");
x.t("udpstatsenabled","transportdataudp");
x.t("udpstatsenabled","whether");
x.t("false","else");
x.t("false","initialization");
x.t("false","char");
x.t("false","udp-");
x.t("false","invalid");
x.t("false","strcmp");
x.t("false","depending");
x.t("false","figure");
x.t("false","error_reporterror");
x.t("false","info-");
x.t("parameter\\n","else");
x.t("message_infoalloc","copies");
x.t("message_infoalloc","node");
x.t("(address)","memcpy");
x.t("(address)","info-");
x.t("(address)","udplayer-");
x.t("sure","protocol");
x.t("ipheader-","ip_p");
x.t("built","top");
x.t("rate-based","congestion");
x.t("delivered","incur");
x.t("delivered","lsp");
x.t("byte","stream");
x.t("selective","retransmissions");
x.t("selective","acknowledgements");
x.t("inter-layer","communication");
x.t("msg_app_fromtranslistenresult","message");
x.t("writing","transport");
x.t("summarizes","actions");
x.t("declare","new");
x.t("declare","initialize");
x.t("declare","structure");
x.t("declare","statistics");
x.t("4.3.5.6.2","describes");
x.t("4.3.5.6.2","write");
x.t("4.3.5.6.2","implementing");
x.t("4.3.5.6.2","integrate");
x.t("desired","section");
x.t("specified","user");
x.t("specified","interface");
x.t("specified","enumerated");
x.t("specified","programmer");
x.t("specified","format");
x.t("specified","qualnet");
x.t("specified","configuration");
x.t("true","else");
x.t("true","false");
x.t("true","sprintf");
x.t("true","transportmyprotocolinit");
x.t("true","udp-");
x.t("true","myprotocolfinalize");
x.t("true","udplayer-");
x.t("handle","events");
x.t("handle","message");
x.t("handle","event");
x.t("eventtype","case");
x.t("processed","transport");
x.t("processed","otherwise");
x.t("msg_transport_rsvp_initiateexplicitroute","default");
x.t("cycle","required");
x.t("directly","myprotocolfinalize");
x.t("directly","finalization");
x.t("requires","following");
x.t("sendrouteadvertisement","implemented");
x.t("sendrouteadvertisement","node");
x.t("path","source");
x.t("path","d_hierarchy");
x.t("path","(lsp)");
x.t("incur","delay");
x.t("incur","minimum");
x.t("suitable","certain");
x.t("slow","start");
x.t("common","transport");
x.t("common","sources");
x.t("/libraries/multimedia_enterprise/src","folder");
x.t("/libraries/multimedia_enterprise/src","definitions");
x.t("settings","files");
x.t("guidelines","section");
x.t("guidelines","qualnet");
x.t("name","parameter");
x.t("name","files");
x.t("name","interface");
x.t("name","indicates");
x.t("name","specified");
x.t("name","enumeration");
x.t("name","different");
x.t("name","statistic");
x.t("name","read");
x.t("name","protocol");
x.t("functionality","component");
x.t("creating","files");
x.t("creating","instance");
x.t("creating","activating");
x.t("/libraries/user_models","called");
x.t("stored","transportdata");
x.t("enclosed","square");
x.t("mem_alloc","allocate");
x.t("outgoinginterface","info-");
x.t("definition","associate");
x.t("performance","cost");
x.t("performance","examples");
x.t("avoidance","fast");
x.t("communication","enumerated");
x.t("communication","section");
x.t("communication","transport");
x.t("communication","application");
x.t("communication","protocol");
x.t("enumerated","file");
x.t("enumerated","data");
x.t("closed","4.3.4.3");
x.t("transport.cpp","function");
x.t("transport.cpp","section");
x.t("transport.cpp","include");
x.t("transport.cpp","transport_finalize");
x.t("transport.cpp","protocol");
x.t("protocol\u2019s","source");
x.t("protocol\u2019s","state");
x.t("protocol\u2019s","initialization");
x.t("protocol\u2019s","header");
x.t("protocol\u2019s","event");
x.t("protocol\u2019s","configuration");
x.t("tasks","need");
x.t("tasks","declare");
x.t("tasks","initialize");
x.t("initialize","timers");
x.t("initialize","myprotcol");
x.t("initialize","rsvp-te");
x.t("initialize","state");
x.t("initialize","data");
x.t("initialize","protocol");
x.t("initialize","statistics");
x.t("traceenabled","above");
x.t("follows","transport-protocol-");
x.t("follows","write");
x.t("follows","latter");
x.t("follows","protocol");
x.t("char","buf");
x.t("char","ipprotocolnumber");
x.t("allocating","memory");
x.t("discusses","detail");
x.t("corresponds","receiving");
x.t("(udptoapprecv)","info");
x.t("acndata.actiontype","recv");
x.t("acndata.actiontype","send");
x.t("enables","deliver");
x.t("acongestionexperienced","break");
x.t("5.2.3","adding");
x.t("wireless","interface");
x.t("enumeration","type");
x.t("enumeration","file");
x.t("enumeration","traceprotocoltype");
x.t("enumeration","transportprotocol");
x.t("direct","tcp");
x.t("listen","port");
x.t("initializing","timers");
x.t("initializing","sending");
x.t("initializing","state");
x.t("initializing","data");
x.t("initializing","statistics");
x.t("dispatcher","rsvp-te");
x.t("dispatcher","includes");
x.t("dispatcher","udp");
x.t("dispatcher","4.3.5.6.1");
x.t("dispatcher","4.3.5.6.2");
x.t("dispatcher","protocol's");
x.t("dispatcher","function");
x.t("dispatcher","transport");
x.t("dispatcher","section");
x.t("dispatcher","informs");
x.t("dispatcher","enable");
x.t("dispatcher","include");
x.t("dispatcher","finalization");
x.t("dispatcher","protocol");
x.t("dispatcher","transport_processevent");
x.t("4.3.5.1","naming");
x.t("component","file");
x.t("component","appropriate");
x.t("part","initialization");
x.t("part","separate");
x.t("stats","transportudpstat");
x.t("brackets","specification");
x.t("brackets","used");
x.t("accordingly","example");
x.t("accordingly","protocol");
x.t("const","nodeinput");
x.t("message_removeheader","schedules");
x.t("message_removeheader","node");
x.t("/transport_in_pcb.cpp","(developer_srcdir)");
x.t("/transport_tcp_output.cpp","figure");
x.t("snippet","bellmanford");
x.t("provides","extension");
x.t("provides","unreliable");
x.t("provides","overview");
x.t("provides","reliable");
x.t("provides","supplemental");
x.t("provides","detailed");
x.t("provides","transport");
x.t("provides","services");
x.t("provides","service");
x.t("provides","outline");
x.t("mpls","section");
x.t("mpls","multiprotocol");
x.t("mpls","nodes");
x.t("receivers","top");
x.t("reduced","fidelity");
x.t("window","protection");
x.t("boolean","flag");
x.t("boolean","variable");
x.t("parameters","description");
x.t("parameters","create");
x.t("parameters","specified");
x.t("parameters","stores");
x.t("parameters","section");
x.t("parameters","calling");
x.t("parameters","node");
x.t("parameters","identifier");
x.t("parameters","configuration");
x.t("parameters","protocol");
x.t("parameters","call");
x.t("4.3.5.2","creating");
x.t("4.3.5.2","include");
x.t("4.3.5.2","modify");
x.t("programmer","name");
x.t("programmer","number");
x.t("helpful","examine");
x.t("src","create");
x.t("partition.h","include");
x.t("actiondata","acndata");
x.t("integrating","new");
x.t("integrating","network");
x.t("integrating","transport");
x.t("integrating","application");
x.t("integrating","protocol");
x.t("network-layer","transport-layer");
x.t("ipheadertype","msg-");
x.t("ipheadertype","ipheader");
x.t("updating","statistics");
x.t("alternatively","statistics");
x.t("sends","data");
x.t("sends","application");
x.t("sends","packet");
x.t("appended","packet");
x.t("generic","udp/ip");
x.t("reservations","lsp");
x.t("macros","functions");
x.t("prototypes","interface");
x.t("prototypes","functions");
x.t("indicate","error");
x.t("indicate","whether");
x.t("indicate","application");
x.t("indicate","protocol");
x.t("4.3.5.3","true");
x.t("4.3.5.3","define");
x.t("4.3.5.3","including");
x.t("place","initialization");
x.t("place","transport");
x.t("place","folder");
x.t("declarations","source");
x.t("standard","library");
x.t("transport-protocol-","protocol_name");
x.t("&wasfound","buf");
x.t("transporttcplayer","node");
x.t("incominginterfaceindex","actiondata");
x.t("incominginterfaceindex","incominginterfaceindex");
x.t("incominginterfaceindex","networktotransportinfo");
x.t("incominginterfaceindex","memcpy");
x.t("incominginterfaceindex","message_send");
x.t("incominginterfaceindex","infoptr-");
x.t("identified","ipprotocolnumber");
x.t("sendtomyprotocol","node");
x.t("sendtomyprotocol","deliver");
x.t("sendtomyprotocol","appropriate");
x.t("networkdata.networkvar","nodeaddress");
x.t("determine","whether");
x.t("(developer_srcdir)","/transport_tcp.cpp");
x.t("(developer_srcdir)","/transport_abstract_tcp_timer.cpp");
x.t("(developer_srcdir)","/adaptation.cpp");
x.t("(developer_srcdir)","/transport_in_pcb.cpp");
x.t("(developer_srcdir)","/transport_tcp_output.cpp");
x.t("(developer_srcdir)","/transport_abstract_tcp_usrreq.cpp");
x.t("(developer_srcdir)","/adaptation_aal5.cpp");
x.t("(developer_srcdir)","/transport_tcp_input.cpp");
x.t("(developer_srcdir)","/transport_myprotocol.cpp");
x.t("numberinterfaces","nodeaddress");
x.t("stack","shown");
x.t("stack","layer");
x.t("stack","list");
x.t("stack","qualnet_home");
x.t("stack","node");
x.t("stack","nodes");
x.t("allows","data");
x.t("fast","recovery");
x.t("fast","retransmit");
x.t("modification","fast");
x.t("destination","address");
x.t("destination","quality");
x.t("destination","function");
x.t("destination","port");
x.t("destination","protocol");
x.t("composed","several");
x.t("sendtotransport","section");
x.t("transport_udp.cpp","transport_udp.h");
x.t("transport_udp.cpp","initialization");
x.t("transport_udp.cpp","qualnet_home");
x.t("transport_udp.cpp","folder");
x.t("transport_udp.cpp","finalization");
x.t("segments","two");
x.t("4.3.5.4","create");
x.t("4.3.5.4","decide");
x.t("4.3.5.4","defining");
x.t("4.3.5.4","statistics");
x.t("decide","format");
x.t("myprotocolvariable","pointer");
x.t("address","parameter");
x.t("address","2008");
x.t("address","interface");
x.t("address","wired");
x.t("address","specified");
x.t("address","destination");
x.t("address","sourceaddress");
x.t("address","any_dest");
x.t("address","destinationaddress");
x.t("address","broadcast");
x.t("address","incoming");
x.t("std::string","path");
x.t("explained","section");
x.t("modifying","transport");
x.t("respective","event");
x.t("final","step");
x.t("sprintf","create");
x.t("sprintf","buf");
x.t("tcp/ip","protocol");
x.t("lsp","tunnel");
x.t("lsp","established");
x.t("examine","files");
x.t("examine","implementation");
x.t("int","incominginterfaceindex");
x.t("int","interfaceindex");
x.t("int","node-");
x.t("int","tcptype");
x.t("develop","code");
x.t("write","myprotocol\u2019s");
x.t("write","initialization");
x.t("write","functions");
x.t("write","function");
x.t("write","myprotocolfinalize");
x.t("write","finalization");
x.t("write","protocol");
x.t("string","parameter");
x.t("string","file");
x.t("string","udp");
x.t("string","indicating");
x.t("string","myprotocol");
x.t("string","containing");
x.t("traceprotocoltype","shown");
x.t("traceprotocoltype","file");
x.t("traceprotocoltype","figure");
x.t("4.3.5.5","initialization");
x.t("sets","destination");
x.t("sets","length");
x.t("sets","experiment");
x.t("copies","source");
x.t("sourceaddress","nodeaddress");
x.t("sourceaddress","address");
x.t("sourceaddress","destinationaddress");
x.t("sourceaddress","setipv4addressinfo");
x.t("trace_transport_layer","packet_out");
x.t("trace_transport_layer","packet_in");
x.t("checksum","checksum");
x.t("checksum","calculated");
x.t("record","statistics");
x.t("fields","transportudpstat");
x.t("reliable","delivery");
x.t("reliable","transport");
x.t("reliable","multicast");
x.t("switching","developer");
x.t("switching","paths");
x.t("stream","protocol");
x.t("reno","improve");
x.t("reno","includes");
x.t("reno","omits");
x.t("reno","simplifies");
x.t("reno","tcp");
x.t("reno","configuration");
x.t("reno","except");
x.t("reno","including");
x.t("three","tcp");
x.t("retransmissions","abstract");
x.t("resource","reservations");
x.t("contain","name");
x.t("contain","detailed");
x.t("contain","following");
x.t("structures","variables");
x.t("structures","provided");
x.t("structures","needed");
x.t("structures","initialization");
x.t("structures","store");
x.t("structures","functions");
x.t("structures","transport");
x.t("structures","defined");
x.t("structures","note");
x.t("structures","protocol");
x.t("input","files");
x.t("input","file");
x.t("input","specified");
x.t("input","configuration");
x.t("transportdataudp","shown");
x.t("transportdataudp","udp");
x.t("transportdataudp","true");
x.t("transportdataudp","boolean");
x.t("transportdataudp","udplayer");
x.t("transportdataudp","node-");
x.t("transportdataudp","transportudpstat");
x.t("transportdataudp","mem_malloc");
x.t("transportdataudp","contains");
x.t("outgoing","packet");
x.t("flow","transport");
x.t("receiving","packets");
x.t("receiving","packet");
x.t("understand","transport");
x.t("problems","even");
x.t("defining","data");
x.t("protocol's","initialization");
x.t("protocol's","header");
x.t("protocol's","event");
x.t("protocol's","finalization");
x.t("addition","initializing");
x.t("4.3.5.6","implementing");
x.t("sourceaddr","sourceaddress");
x.t("sourceaddr","sizeof");
x.t("sourceaddr","&sourceaddress");
x.t("sourceaddr","break");
x.t("sourceaddr","info-");
x.t("developing","transport");
x.t("developing","protocol");
x.t("developing","adding");
x.t("congestion","avoidance");
x.t("congestion","control");
x.t("lastly","udp");
x.t("quality","service");
x.t("present","qualnet");
x.t("techniques","4.3.2");
x.t("functions","available");
x.t("functions","source");
x.t("functions","layer");
x.t("functions","apis");
x.t("functions","file");
x.t("functions","structures");
x.t("functions","collect");
x.t("functions","transportmyprotocolinit");
x.t("functions","qualnet_home");
x.t("functions","code");
x.t("functions","header");
x.t("functions","similar");
x.t("functions","read");
x.t("functions","belonging");
x.t("functions","turn");
x.t("functions","used");
x.t("functions","including");
x.t("functions","insert");
x.t("functions","specify");
x.t("/include/transport.h","file");
x.t("/include/transport.h","section");
x.t("/main/transport.cpp","file");
x.t("/main/transport.cpp","contains");
x.t("request","open");
x.t("request","tcp");
x.t("request","accepted");
x.t("accepted","rejected");
x.t("unexpected","problems");
x.t("store","user");
x.t("store","state");
x.t("store","information");
x.t("retrieves","input");
x.t("4.3.5.7","integrating");
x.t("app_tcpserverlisten","app_tcpcloseconnection");
x.t("transport_layer","transportprotocol_udp");
x.t("/include/main.h","stands");
x.t("(mdp)","reliable");
x.t("(mdp)","transport");
x.t("(mdp)","multicast");
x.t("(nack)","based");
x.t("sendtoudp","shown");
x.t("sendtoudp","sendtotcp");
x.t("sendtoudp","node");
x.t("sendtoudp","deliver");
x.t("sendtoudp","delivers");
x.t("4.3.5.8","void");
x.t("4.3.5.8","integrating");
x.t("4.3.5.8","define");
x.t("collect","stats");
x.t("collect","report");
x.t("collect","statistics");
x.t("4.3.5.9.1","initialize");
x.t("4.3.5.9.1","4.3.5.5");
x.t("4.3.5.9.1","define");
x.t("4.3.5.9.1","declaring");
x.t("strongly","recommended");
x.t("error","adding");
x.t("io_readstring","node-");
x.t("io_readstring","defined");
x.t("transportdata.udp","udp");
x.t("transportdata.udp","null");
x.t("transportdata.udp","transportudpstat");
x.t("transportdata.udp","transportudpheader");
x.t("point","newly");
x.t("supplemental","auxiliary");
x.t("message_setevent","msg");
x.t("message_setevent","message_send");
x.t("networktotransportinfo","nettotransinfo");
x.t("networktotransportinfo","message_returninfo");
x.t("networktotransportinfo","infoptr");
x.t("nettotransinfo","networktotransportinfo");
x.t("configured","record");
x.t("next","layer");
x.t("delay","features");
x.t("delay","section");
x.t("delay","associated");
x.t("transportprotocol_udp","message_infoalloc");
x.t("transportprotocol_udp","transportprotocol_tcp");
x.t("transportprotocol_udp","transportudplayer");
x.t("deliverpacket","shown");
x.t("deliverpacket","calls");
x.t("deliverpacket","network_ip.cpp");
x.t("deliverpacket","node");
x.t("deliverpacket","include");
x.t("deliverpacket","call");
x.t("4.3.5.9.2","initializing");
x.t("4.3.5.9.2","update");
x.t("keeping","naming");
x.t("syntax","parameter");
x.t("occurs","first");
x.t("occurs","layers");
x.t("hold","protocol");
x.t("appends","udp");
x.t("acndata.actioncomment","no_comment");
x.t("msg_transport_rsvp_resvrefresh","case");
x.t("4.3.5.9","collecting");
x.t("messages","tcp");
x.t("messages","contain");
x.t("messages","messages");
x.t("messages","broadcasting");
x.t("messages","message");
x.t("messages","protocol");
x.t("smaller","header");
x.t("means","apis");
x.t("means","messages");
x.t("means","although");
x.t("minimum","transmission");
x.t("options","namely");
x.t("sendtotcp","sendtorsvp");
x.t("sendtotcp","node");
x.t("4.3.5.9.3","updating");
x.t("4.3.5.9.3","write");
x.t("appears","names");
x.t("first","handled");
x.t("first","finds");
x.t("first","step");
x.t("clearly","indicates");
x.t("collection","create");
x.t("collection","variables");
x.t("collection","flag");
x.t("collection","enabled");
x.t("collection","disabled");
x.t("collection","protocol");
x.t("transportdata.tcp","null");
x.t("&retval","buf");
x.t("life","cycle");
x.t("unconditionally","protocol");
x.t("developer_srcs","(developer_srcdir)");
x.t("issues","transport");
x.t("udp/ip","multicast");
x.t("control","mechanism");
x.t("control","mode");
x.t("control","algorithms");
x.t("control","protocol");
x.t("control","algorithm");
x.t("cost","reduced");
x.t("number","instance");
x.t("number","packets");
x.t("number","new");
x.t("number","udp");
x.t("number","tcp");
x.t("number","rsvp");
x.t("number","transport");
x.t("number","ipprotocolnumber");
x.t("number","already");
x.t("number","pointers");
x.t("number","myprotocol");
x.t("number","read");
x.t("number","protocol");
x.t("number","sent");
x.t("briefly","examine");
x.t("communicate","network");
x.t("communicate","different");
x.t("communicate","transport");
x.t("communicate","application");
x.t("processing","event");
x.t("processing","finalization");
x.t("processing","packet");
x.t("transportprotocol_tcp","transporttcplayer");
x.t("transportprotocol_tcp","transportprotocol_rsvp");
x.t("notify","application");
x.t("4.3.5.9.4","printing");
x.t("4.3.5.9.4","add");
x.t("gui","new");
x.t("gui","during");
x.t("gui","settings");
x.t("gui","modify");
x.t("transportmyprotocolinit","initialization");
x.t("transportmyprotocolinit","node");
x.t("transportmyprotocolinit","protocol");
x.t("transportmyprotocolinit","transportmyprotocollayer");
x.t("buf","retval");
x.t("buf","packets");
x.t("buf","(wasfound)");
x.t("buf","sprintf");
x.t("buf","udp-");
x.t("buf","[max_string_length]");
x.t("buf","node-");
x.t("buf","figure");
x.t("initializes","fields");
x.t("initializes","protocol");
x.t("10000","figure");
x.t("destinationaddr","sizeof");
x.t("destinationaddr","destinationaddress");
x.t("tostype_priority","infoptr-");
x.t("msg_transport_rsvp_initapp","trigger");
x.t("msg_transport_rsvp_initapp","rsvpinitapplication");
x.t("interfaceindex","ttl");
x.t("interfaceindex","nodeaddress");
x.t("interfaceindex","break");
x.t("networkdataip","networkdataip");
x.t("networkdataip","node-");
x.t("delivering","packets");
x.t("&infoptr-","sourceaddr");
x.t("&infoptr-","destinationaddr");
x.t("viewing","dynamic");
x.t("broadcasting","packets");
x.t("networkipgetinterfacebroadcastaddress","node");
x.t("networkipgetinterfacebroadcastaddress","defined");
x.t("networkipgetinterfacebroadcastaddress","used");
x.t("2012","scalable");
x.t("connection-mode","transmissions");
x.t("implements","extension");
x.t("implements","connection");
x.t("implements","three");
x.t("implements","congestion");
x.t("implements","transport");
x.t("implements","switch");
x.t("fidelity","tahoe");
x.t("namely","slow");
x.t("namely","big");
x.t("tunnel","without");
x.t("comments","functions");
x.t("function","included");
x.t("function","shown");
x.t("function","needs");
x.t("function","responsible");
x.t("function","partition_initializenodes");
x.t("function","transport_initialize");
x.t("function","rsvpinitapplication");
x.t("function","initialization");
x.t("function","file");
x.t("function","io_printstat");
x.t("function","udp");
x.t("function","handle");
x.t("function","sendrouteadvertisement");
x.t("function","mem_alloc");
x.t("function","sends");
x.t("function","sendtomyprotocol");
x.t("function","determine");
x.t("function","sprintf");
x.t("function","write");
x.t("function","retrieves");
x.t("function","io_readstring");
x.t("function","sendtoudp");
x.t("function","deliverpacket");
x.t("function","messages");
x.t("function","unconditionally");
x.t("function","transportmyprotocolinit");
x.t("function","initializes");
x.t("function","networkipgetinterfacebroadcastaddress");
x.t("function","may");
x.t("function","4.3.5.10.2");
x.t("function","networkipreceivepacketfromtransportlayer");
x.t("function","rsvplayer");
x.t("function","transport");
x.t("function","section");
x.t("function","transportudpinit");
x.t("function","given");
x.t("function","myprotocolfinalize");
x.t("function","qualnet");
x.t("function","include");
x.t("function","app_udpsendnewdatawithpriority");
x.t("function","message_getprotocol");
x.t("function","figure");
x.t("function","specific");
x.t("function","deliver");
x.t("function","transportudplayer");
x.t("function","myprotocol");
x.t("function","transportudpsendtoapp");
x.t("function","transport_finalize");
x.t("function","node_processevent");
x.t("function","defined");
x.t("function","4.3.5.5.3.2");
x.t("function","finalization");
x.t("function","print");
x.t("function","called");
x.t("function","protocol");
x.t("function","transportmyprotocollayer");
x.t("function","call");
x.t("function","contained");
x.t("function","transportudpsendtonetwork");
x.t("function","partition_finalize");
x.t("function","4.3.5.5.3");
x.t("function","transportudpfinalize");
x.t("function","transport_processevent");
x.t("function","rsvphandlepacket");
x.t("4.3.5.9.5","alternatively");
x.t("4.3.5.9.5","call");
x.t("4.3.5.9.5","adding");
x.t("4.3.5.10.1","modifying");
x.t("4.3.5.10.1","write");
x.t("user_models","library");
x.t("user_models","subdirectory");
x.t("user_models","section");
x.t("user_models","follow");
x.t("4-50","typedef");
x.t("4-50","adding");
x.t("determining","protocol");
x.t("commonly","performs");
x.t("udp-","udpstatsenabled");
x.t("udp-","statistics-");
x.t("udp-","statistics");
x.t("design","msg_special_timer");
x.t("&destinationaddress","sizeof");
x.t("&destinationaddress","infoptr-");
x.t("length","field");
x.t("length","unsigned");
x.t("reporting","statistics");
x.t("approach","function");
x.t("indicating","layer");
x.t("indicating","protocol");
x.t("addon","example");
x.t("addon","add");
x.t("receive","events");
x.t("receive","messages");
x.t("receive","event");
x.t("receive","process");
x.t("rsvp","(rsvp-te)");
x.t("rsvp","define");
x.t("rsvp","message");
x.t("rsvp","establishing");
x.t("rsvp","called");
x.t("rsvp","service");
x.t("determination","mpls");
x.t("may","lead");
x.t("may","protocol-specific");
x.t("may","mandatory");
x.t("may","initialize");
x.t("may","receive");
x.t("may","lost");
x.t("may","include");
x.t("recovery","i.e");
x.t("recovery","lite");
x.t("recovery","sack");
x.t("against","wrapped");
x.t("different","components");
x.t("different","steps");
x.t("different","event");
x.t("different","layers");
x.t("whether","rsvp-te");
x.t("whether","collect");
x.t("whether","protocol");
x.t("whether","statistics");
x.t("define","ipproto_myprotocol");
x.t("define","ipproto_udp");
x.t("define","ipproto_tcp");
x.t("define","configuration");
x.t("define","data");
x.t("define","appropriate");
x.t("define","protocol");
x.t("define","ipproto_rsvp");
x.t("4.3.5.10.2","implementing");
x.t("4.3.5.10.2","call");
x.t("trace_ip","trace_cbr");
x.t("4-51","adding");
x.t("4-51","struct");
x.t("specifies","tcp");
x.t("reads","source");
x.t("reads","destination");
x.t("reads","configuration");
x.t("transportdata.myprotocolvariable","null");
x.t("cannot","allocate");
x.t("msg_special_timer","message");
x.t("exchange","packets");
x.t("exchange","data");
x.t("3.3.2.1.2","explains");
x.t("/transport_abstract_tcp_usrreq.cpp","(developer_srcdir)");
x.t("detailed","description");
x.t("detailed","traces");
x.t("detailed","comments");
x.t("stores","boolean");
x.t("stores","information");
x.t("stores","appropriate");
x.t("networkipreceivepacketfromtransportlayer","4.3.4.4");
x.t("networkipreceivepacketfromtransportlayer","function");
x.t("networkipreceivepacketfromtransportlayer","node");
x.t("networkipreceivepacketfromtransportlayer","defined");
x.t("networkipreceivepacketfromtransportlayer","integer");
x.t("step","shown");
x.t("step","integrating");
x.t("step","towards");
x.t("index","instance");
x.t("index","info");
x.t("index","destination");
x.t("index","parameter-value");
x.t("3.4.1","node");
x.t("4-52","transportudpinit");
x.t("4-52","calling");
x.t("4-52","gives");
x.t("starting","protocol");
x.t("destined","transport");
x.t("destined","transport_processevent");
x.t("msg-","eventtype");
x.t("msg-","packet");
x.t("message_returninfo","(msg)");
x.t("rsvplayer","shown");
x.t("rsvplayer","calls");
x.t("rsvplayer","node");
x.t("report","statistics");
x.t("transport","protocols");
x.t("transport","layer");
x.t("transport","mdp");
x.t("transport","udp");
x.t("transport","protocol\u2019s");
x.t("transport","transport");
x.t("transport","qualnet");
x.t("transport","services");
x.t("transport","data");
x.t("transport","protocol");
x.t("transport","service");
x.t("transport","model");
x.t("section","4.3.4.3");
x.t("section","4.3.4.4");
x.t("section","illustrate");
x.t("section","multimedia");
x.t("section","describes");
x.t("section","4.3.5.11");
x.t("section","3.3.2.2");
x.t("section","4.3.5.12");
x.t("section","4.3.5.6.2.1");
x.t("section","4-64");
x.t("section","explains");
x.t("section","4.3.5.6.2.2");
x.t("section","4.2.4.1");
x.t("section","4.3.5.6.1");
x.t("section","4.3.5.6.2");
x.t("section","5.2.3");
x.t("section","provides");
x.t("section","4.3.5.2");
x.t("section","4.3.5.3");
x.t("section","4.3.5.4");
x.t("section","4.3.5.8");
x.t("section","4.3.5.9.1");
x.t("section","4.3.5.9.2");
x.t("section","4.3.5.9.3");
x.t("section","briefly");
x.t("section","4.3.5.9.4");
x.t("section","4.3.5.9.5");
x.t("section","4.3.5.10.1");
x.t("section","4.3.5.10.2");
x.t("section","3.3.2.1.2");
x.t("section","3.4.1");
x.t("section","3.4.2");
x.t("section","3.4.3");
x.t("section","4.10");
x.t("section","header");
x.t("section","4.10.5");
x.t("section","gives");
x.t("section","4.4.4.2");
x.t("section","4.3.5.5.3.1");
x.t("section","4.3.5.5.3.2");
x.t("section","4.3.5.5.1");
x.t("section","4.3.5.5.2");
x.t("section","4.3.5.5.3");
x.t("section","describe");
x.t("section","4.3.4.1");
x.t("section","4.3.3");
x.t("section","5.1.4");
x.t("section","4.3.4.2");
x.t("variant","extension");
x.t("variant","reno");
x.t("variant","implements");
x.t("variant","lite");
x.t("variant","configuration");
x.t("variant","extends");
x.t("variant","based");
x.t("variant","used");
x.t("typedef","enum");
x.t("typedef","struct");
x.t("types","included");
x.t("types","always");
x.t("types","channel");
x.t("types","added");
x.t("types","exchanged");
x.t("types","protocol");
x.t("types","used");
x.t("types","struct");
x.t("msg_transport_fromappsend","corresponds");
x.t("msg_transport_fromappsend","message");
x.t("msg_transport_fromappsend","transportudpsendtonetwork");
x.t("format","protocol-specific");
x.t("format","initialize");
x.t("format","specifying");
x.t("format","protocol");
x.t("compile","section");
x.t("compile","created");
x.t("directory","qualnet_home");
x.t("handling","routines");
x.t("handling","packet");
x.t("trace_cbr","trace_myprotcol");
x.t("keyword","transport-protocol-");
x.t("implementing","rsvp-te");
x.t("implementing","udp");
x.t("implementing","event");
x.t("implementing","protocol");
x.t("4-53","udp");
x.t("4-53","function");
x.t("4-53","update");
x.t("3.4.2","event");
x.t("internal","design");
x.t("declaring","new");
x.t("declaring","initializing");
x.t("declaring","protocol");
x.t("declaring","statistics");
x.t("changes","common");
x.t("switch","message_getevent");
x.t("switch","statement");
x.t("switch","(ipprotocolnumber)");
x.t("switch","path");
x.t("switch","msg-");
x.t("switch","calling");
x.t("switch","message");
x.t("switch","message_getprotocol");
x.t("switch","protocol");
x.t("lost","packets");
x.t("transmission","delay");
x.t("transmission","control");
x.t("algorithms","namely");
x.t("lite","tcp");
x.t("lite","used");
x.t("big","window");
x.t("node","routeadvertisementtype");
x.t("node","else");
x.t("node","destaddress");
x.t("node","initialization");
x.t("node","initialized");
x.t("node","char");
x.t("node","const");
x.t("node","4.3.5.10.1");
x.t("node","reporting");
x.t("node","transport");
x.t("node","node");
x.t("node","identifier");
x.t("node","level");
x.t("node","message");
x.t("node","qualnet");
x.t("node","msg");
x.t("node","finalization");
x.t("node","structure");
x.t("node","used");
x.t("node","pointer");
x.t("node","nodeinput");
x.t("node","transportudpfinalize");
x.t("qualnet_home","/libraries");
x.t("qualnet_home","/main/partition.cpp");
x.t("qualnet_home","/main/app_util.cpp");
x.t("qualnet_home","/libraries/developer/src/app_cbr.cpp");
x.t("qualnet_home","/libraries/developer/makefile-common");
x.t("qualnet_home","/libraries/multimedia_enterprise/src");
x.t("qualnet_home","/libraries/user_models");
x.t("qualnet_home","/include/transport.h");
x.t("qualnet_home","/main/transport.cpp");
x.t("qualnet_home","/include/main.h");
x.t("qualnet_home","/libraries/developer/src/routing_bellmanford.cpp");
x.t("qualnet_home","/libraries/developer/src/network_ip.h");
x.t("qualnet_home","/libraries/user_models/src");
x.t("qualnet_home","/include/api.h");
x.t("qualnet_home","/main/node.cpp");
x.t("qualnet_home","/include/trace.h");
x.t("qualnet_home","/include/fileio.h");
x.t("qualnet_home","/libraries/developer/src");
x.t("qualnet_home","/libraries/developer/src/network_ip.cpp");
x.t("rejected","msg_app_fromtransdatasent");
x.t("important","organize");
x.t("important","free");
x.t("added","needs");
x.t("added","transport_initialize");
x.t("added","network");
x.t("added","transport");
x.t("added","added");
x.t("added","qualnet");
x.t("added","msg_default");
x.t("added","transport_finalize");
x.t("transportprotocol_myprotocol","transportprotocol");
x.t("assigned","value");
x.t("calling","myprotocol\u2019s");
x.t("calling","function");
x.t("calling","event");
x.t("calling","protocol");
x.t("transportudpinit","node");
x.t("transportudpinit","calling");
x.t("transportudpinit","depending");
x.t("transportudpinit","defined");
x.t("transportudpinit","allocates");
x.t("transportinitudp","updates");
x.t("informs","appropriate");
x.t("4-54","shows");
x.t("4-54","transport");
x.t("3.4.3","finalization");
x.t("client","tcp");
x.t("client","server");
x.t("connection-oriented","byte");
x.t("connection-oriented","protocol");
x.t("end","lists");
x.t("end","systems");
x.t("end","simulation");
x.t("code","files");
x.t("code","needs");
x.t("code","various");
x.t("code","components");
x.t("code","udp");
x.t("code","directly");
x.t("code","snippet");
x.t("code","segments");
x.t("code","deliverpacket");
x.t("code","added");
x.t("code","calling");
x.t("code","fragment");
x.t("code","executes");
x.t("code","transport_processevent");
x.t("reference","guide");
x.t("steps","writing");
x.t("steps","integrating");
x.t("steps","developing");
x.t("steps","implementing");
x.t("steps","described");
x.t("4.10","instructions");
x.t("organize","code");
x.t("identifier","instance");
x.t("identifier","parameter-name");
x.t("identifier","address");
x.t("identifier","node");
x.t("identifier","port");
x.t("identifier","subnet");
x.t("identifier","buffer");
x.t("parameter-value","identifier");
x.t("parameter-value","value");
x.t("enable","disable");
x.t("enable","application");
x.t("enable","protocol");
x.t("enable","statistics");
x.t("task","initialization");
x.t("memset","udp-");
x.t("4-55","enum");
x.t("4-55","declaring");
x.t("invalid","rsvp");
x.t("invalid","event");
x.t("error_assert","false");
x.t("follow","example");
x.t("follow","instructions");
x.t("/adaptation_aal5.cpp","(developer_srcdir)");
x.t("abstract","tcp");
x.t("folder","qualnet_home");
x.t("folder","contains");
x.t("disabled","example");
x.t("disabled","configuration");
x.t("disabled","protocol");
x.t("bool","retval");
x.t("bool","udpstatsenabled");
x.t("bool","traceenabled");
x.t("bool","wasfound");
x.t("bool","myprotocolenabled");
x.t("bool","rsvpprotocol");
x.t("level","initialization");
x.t("level","dispatcher");
x.t("level","functions");
x.t("thus","occurs");
x.t("sizeof","(networktotransportinfo)");
x.t("sizeof","(address)");
x.t("sizeof","(udptoapprecv)");
x.t("sizeof","(transportudpheader)");
x.t("sizeof","(transportdataudp)");
x.t("sizeof","(transportudpstat)");
x.t("4-56","event");
x.t("statistic","variables");
x.t("statistic","name");
x.t("statistic","collection");
x.t("statistic","value");
x.t("hierarchically","node");
x.t("connectionless-mode","transmissions");
x.t("header","files");
x.t("header","source");
x.t("header","ipproto_myprotocol");
x.t("header","file");
x.t("header","beginning");
x.t("header","add");
x.t("header","tcp");
x.t("header","message_removeheader");
x.t("header","appended");
x.t("header","sets");
x.t("header","message");
x.t("header","data");
x.t("header","received");
x.t("header","packet");
x.t("header","using");
x.t("(mpls)","networks");
x.t("message","type");
x.t("message","calls");
x.t("message","removes");
x.t("message","info");
x.t("message","processed");
x.t("message","processing");
x.t("message","reads");
x.t("message","destined");
x.t("message","types");
x.t("message","important");
x.t("message","msg");
x.t("message","packet");
x.t("message","break");
x.t("message","using");
x.t("message","message_free");
x.t("transportprotocol_rsvp","transportprotocol_myprotocol");
x.t("transportprotocol_rsvp","case");
x.t("transportprotocol_rsvp","transportprotocol");
x.t("throughout","section");
x.t("given","name");
x.t("given","section");
x.t("transport_myprotocol.cpp","contain");
x.t("transport_myprotocol.cpp","strongly");
x.t("transport_myprotocol.cpp","include");
x.t("transport_myprotocol.cpp","constant");
x.t("operating","transport");
x.t("operating","protocol");
x.t("square","brackets");
x.t("[max_string_length]","transportdataudp");
x.t("[max_string_length]","bool");
x.t("[max_string_length]","node-");
x.t("strcmp","buf");
x.t("memory","void");
x.t("memory","tables");
x.t("memory","state");
x.t("memory","udp");
x.t("memory","message");
x.t("memory","statistics");
x.t("transportudpinittrace","node");
x.t("enabled\\n","transportmyprotocollayer");
x.t("100","msg_prop_signalend");
x.t("4-57","every");
x.t("4-57","performs");
x.t("4-57","processing");
x.t("qualnet","supports");
x.t("qualnet","protocols");
x.t("qualnet","hints");
x.t("qualnet","needs");
x.t("qualnet","lists");
x.t("qualnet","describes");
x.t("qualnet","tree");
x.t("qualnet","rsvp-te");
x.t("qualnet","source");
x.t("qualnet","4.3.5.12");
x.t("qualnet","cbr");
x.t("qualnet","mdp");
x.t("qualnet","support");
x.t("qualnet","add");
x.t("qualnet","tcp");
x.t("qualnet","component");
x.t("qualnet","provides");
x.t("qualnet","gui");
x.t("qualnet","transport");
x.t("qualnet","steps");
x.t("qualnet","qualnet");
x.t("qualnet","ftp");
x.t("qualnet","configuration");
x.t("qualnet","4.3");
x.t("qualnet","hosts");
x.t("qualnet","making");
x.t("qualnet","configure");
x.t("qualnet","protocol");
x.t("qualnet","following");
x.t("qualnet","4.3.1");
x.t("qualnet","4.3.3");
x.t("qualnet","user\u2019s");
x.t("multicast","bulk");
x.t("multicast","transport");
x.t("multicast","protocol");
x.t("multicast","dissemination");
x.t("ftp","ftp/gen");
x.t("variable","example");
x.t("variable","always");
x.t("variable","indicates");
x.t("variable","assigned");
x.t("variable","bool");
x.t("variable","non-mandatory");
x.t("variable","transportudpstat");
x.t("variable","protocol");
x.t("variable","myprotocolenabled");
x.t("event","msg_transport_fromnetwork");
x.t("event","events");
x.t("event","msg_app_fromtransport");
x.t("event","type");
x.t("event","dispatcher");
x.t("event","occurs");
x.t("event","msg_transport_rsvp_initapp");
x.t("event","rsvplayer");
x.t("event","types");
x.t("event","transport");
x.t("event","msg_transport_fromappsend");
x.t("event","handling");
x.t("event","event");
x.t("e.g","transportinitudp");
x.t("e.g","enable");
x.t("e.g","folder");
x.t("e.g","allocate");
x.t("myprotocolfinalize","protocol's");
x.t("myprotocolfinalize","function");
x.t("myprotocolfinalize","transport");
x.t("myprotocolfinalize","additional");
x.t("myprotocolfinalize","(node)");
x.t("myprotocolfinalize","print");
x.t("myprotocolfinalize","statistics");
x.t("myprotocolfinalize","therefore");
x.t("upon","input");
x.t("upon","value");
x.t("d_hierarchy","&node-");
x.t("//switch//","figure");
x.t("101","message");
x.t("udplayer","transportdataudp");
x.t("sourceport","memcpy");
x.t("sourceport","udphdr-");
x.t("sourceport","info-");
x.t("trace_printtrace","node");
x.t("4-58","parameter");
x.t("4-58","performs");
x.t("4-58","processing");
x.t("printed","directly");
x.t("whose","values");
x.t("4.10.5","integrate");
x.t("transport.h","complete");
x.t("transport.h","section");
x.t("non-mandatory","rsvp-te");
x.t("non-mandatory","protocol");
x.t("made","part");
x.t("collected","protocol");
x.t("node-","nodeid");
x.t("node-","transportdata.myprotocolenabled");
x.t("node-","networkdata.networkvar");
x.t("node-","numberinterfaces");
x.t("node-","transportdata.udp");
x.t("node-","transportdata.tcp");
x.t("node-","transportdata.myprotocolvariable");
x.t("null","transporttcpinit");
x.t("null","printf");
x.t("null","io_readstring");
x.t("null","node-");
x.t("msg","msg_transport_fromnetwork");
x.t("msg","msg_app_fromtransport");
x.t("msg","trace_transport_layer");
x.t("msg","int");
x.t("msg","transportdataudp");
x.t("msg","transport_layer");
x.t("msg","switch");
x.t("msg","sizeof");
x.t("msg","figure");
x.t("msg","app_layer");
x.t("msg","getipv4address");
x.t("msg","priority");
x.t("msg","transport_delay");
x.t("msg","break");
x.t("msg","process_immediately");
x.t("msg","tostype");
x.t("msg","info-");
x.t("msg","update");
x.t("msg_default","10000");
x.t("msg_default","event");
x.t("msg_default","otherwise");
x.t("numpkttoapp","io_printstat");
x.t("numpkttoapp","destination");
x.t("numpkttoapp","4.3.5.9.4");
x.t("numpkttoapp","function");
x.t("numpkttoapp","transportudpstat");
x.t("destaddr","&destinationaddress");
x.t("destaddr","info-");
x.t("4-59","event");
x.t("any_dest","library");
x.t("any_dest","instance");
x.t("any_dest","wireless");
x.t("any_dest","transport");
x.t("any_dest","constant");
x.t("any_dest","figure");
x.t("existing","library");
x.t("layers","below");
x.t("layers","qualnet");
x.t("layers","latter");
x.t("layers","protocol");
x.t("include","statement");
x.t("include","network_ip.h");
x.t("include","stdlib.h");
x.t("include","api.h");
x.t("include","protocol\u2019s");
x.t("include","partition.h");
x.t("include","boolean");
x.t("include","standard");
x.t("include","prototypes");
x.t("include","functions");
x.t("include","function");
x.t("include","switch");
x.t("include","code");
x.t("include","statistic");
x.t("include","variable");
x.t("include","fourth");
x.t("include","prototype");
x.t("include","string.h");
x.t("include","information");
x.t("include","protocol");
x.t("include","transport_myprotocol.h");
x.t("include","following");
x.t("include","pointer");
x.t("include","stdio.h");
x.t("fourth","congestion");
x.t("configuration","parameter");
x.t("configuration","shown");
x.t("configuration","file");
x.t("configuration","parameters");
x.t("configuration","specifies");
x.t("configuration","format");
x.t("configuration","variable");
x.t("configuration","struct");
x.t("transport_rsvp.cpp","qualnet_home");
x.t("transport_rsvp.cpp","transport_rsvp.h");
x.t("trace_undefined","trace_tcp");
x.t("instances","parameter");
x.t("instances","parameter-value");
x.t("fragment","transport_processevent");
x.t("message_returnpacket","(msg)");
x.t("message_returnpacket","allocates");
x.t("destinationaddress","acongestionexperienced");
x.t("destinationaddress","int");
x.t("destinationaddress","networktotransportinfo");
x.t("destinationaddress","interfaceindex");
x.t("destinationaddress","break");
x.t("destinationaddress","infoptr-");
x.t("destinationaddress","unsigned");
x.t("ipprotocolnumber","example");
x.t("ipprotocolnumber","ipheader-");
x.t("ipprotocolnumber","contained");
x.t("ipprotocolnumber","unsigned");
x.t("st-","numpkttoapp");
x.t("st-","numpktfromapp");
x.t("sources","developer_srcs");
x.t("4.3","transport");
x.t("multiprotocol","label");
x.t("multiprotocol","switching");
x.t("core","efficient");
x.t("additional","options");
x.t("additional","event");
x.t("additional","protocol");
x.t("establishing","label");
x.t("considering","layer");
x.t("main","data");
x.t("running","layer");
x.t("running","transport");
x.t("running","node");
x.t("tcptype","void");
x.t("tcptype","variable");
x.t("rsvpvariable","udp");
x.t("rsvpvariable","bool");
x.t("rsvpvariable","pointer");
x.t("similar","manner");
x.t("similar","udp");
x.t("hosts","operating");
x.t("value","calls");
x.t("value","during");
x.t("value","numpkttoapp");
x.t("value","configuration");
x.t("value","read");
x.t("value","used");
x.t("value","associated");
x.t("allocate","memory");
x.t("allocate","memory\\n");
x.t("transportlayer_myprotocol","node-");
x.t("interacts","network");
x.t("interacts","application");
x.t("routines","event");
x.t("app_udpsendnewdatawithpriority","shown");
x.t("app_udpsendnewdatawithpriority","new");
x.t("setipv4addressinfo","&infoptr-");
x.t("/libraries/developer/src/routing_bellmanford.cpp","sets");
x.t("figure","4-1");
x.t("figure","4-49");
x.t("figure","4-60");
x.t("figure","4-61");
x.t("figure","4-62");
x.t("figure","4-63");
x.t("figure","4-64");
x.t("figure","4-65");
x.t("figure","4-66");
x.t("figure","4-50");
x.t("figure","4-51");
x.t("figure","4-52");
x.t("figure","4-53");
x.t("figure","4-54");
x.t("figure","4-55");
x.t("figure","4-56");
x.t("figure","4-57");
x.t("figure","4-58");
x.t("figure","4-59");
x.t("figure","3-7");
x.t("gives","example");
x.t("gives","detailed");
x.t("suite","consists");
x.t("send","acndata.actioncomment");
x.t("send","receive");
x.t("send","data");
x.t("send","packet");
x.t("developer","library");
x.t("developer","model");
x.t("adaptive","end-to-end");
x.t("constant","ipproto_myprotocol");
x.t("constant","ipproto_udp");
x.t("constant","ipproto_tcp");
x.t("constant","definition");
x.t("constant","bit");
x.t("constant","defined");
x.t("constant","ipproto_rsvp");
x.t("constant","definitions");
x.t("implementation","supports");
x.t("implementation","apis");
x.t("implementation","transport_udp.h");
x.t("implementation","udp");
x.t("implementation","4.3.5.2");
x.t("implementation","functions");
x.t("implementation","networkipreceivepacketfromtransportlayer");
x.t("implementation","code");
x.t("implementation","qualnet");
x.t("implementation","app_udpsendnewdatawithpriority");
x.t("reservation","protocol");
x.t("several","apis");
x.t("several","macros");
x.t("prototype","initialization");
x.t("prototype","file");
x.t("prototype","function");
x.t("prototype","finalization");
x.t("prototype","transportmyprotocollayer");
x.t("activating","library");
x.t("already","exist");
x.t("already","used");
x.t("declaration","applies");
x.t("declaration","applicable");
x.t("declaration","transportudpstat");
x.t("depending","upon");
x.t("message_getprotocol","(msg)");
x.t("message_getprotocol","returns");
x.t("free","message");
x.t("free","memory");
x.t("specific","application");
x.t("specific","protocol");
x.t("ipheader","ipheadertype");
x.t("/transport_tcp_input.cpp","(developer_srcdir)");
x.t("transmitted","source");
x.t("transmitted","msg_app_fromtransdatareceived");
x.t("extends","tahoe");
x.t("extends","reno");
x.t("acknowledgements","selective");
x.t("msg_app_fromtransopenresult","message");
x.t("/libraries/developer/src/network_ip.h","file");
x.t("/libraries/developer/src/network_ip.h","section");
x.t("process","indicate");
x.t("process","transport");
x.t("process","message");
x.t("process","adding");
x.t("process","performed");
x.t("deliver","packets");
x.t("deliver","packet");
x.t("compilation","process");
x.t("trace_udp","trace_ip");
x.t("trace_udp","send");
x.t("trace_udp","udphdr");
x.t("transportudplayer","shown");
x.t("transportudplayer","calls");
x.t("transportudplayer","node");
x.t("packet_out","&acndata");
x.t("making","changes");
x.t("making","call");
x.t("(node)","node-");
x.t("(node)","figure");
x.t("(node)","transporttcpfinalize");
x.t("broadcast","address");
x.t("broadcast","messages");
x.t("models","mpls");
x.t("models","qualnet");
x.t("models","made");
x.t("models","comprise");
x.t("services","provide");
x.t("services","provided");
x.t("services","connection-mode");
x.t("reliably","transmitted");
x.t("although","packets");
x.t("systems","implements");
x.t("established","two");
x.t("read","user-specified");
x.t("read","user");
x.t("read","packet\u2019s");
x.t("read","protocol\u2019s");
x.t("read","input");
x.t("read","message");
x.t("read","configuration");
x.t("4.4.4.2","prototype");
x.t("myprotocol","void");
x.t("myprotocol","transportdata");
x.t("myprotocol","list");
x.t("myprotocol","file");
x.t("myprotocol","sure");
x.t("myprotocol","boolean");
x.t("myprotocol","provides");
x.t("myprotocol","string");
x.t("myprotocol","receive");
x.t("myprotocol","define");
x.t("myprotocol","section");
x.t("myprotocol","added");
x.t("myprotocol","enabled\\n");
x.t("myprotocol","myprotocolfinalize");
x.t("myprotocol","non-mandatory");
x.t("myprotocol","include");
x.t("myprotocol","figure");
x.t("myprotocol","application");
x.t("myprotocol","call");
x.t("myprotocol","following");
x.t("myprotocol","transportprotocol");
x.t("myprotocol","names");
x.t("myprotocol","modify");
x.t("/libraries/user_models/src","name");
x.t("myprotocol-statistics","decide");
x.t("takes","place");
x.t("pointers","tables");
x.t("abort","memset");
x.t("abort","figure");
x.t("abort","break");
x.t("latter","approach");
x.t("latter","case");
x.t("transportudpsendtoapp","receives");
x.t("transportudpsendtoapp","shown");
x.t("transportudpsendtoapp","node");
x.t("transportudpsendtoapp","figure");
x.t("template","write");
x.t("makefile-common","library");
x.t("makefile-common","created");
x.t("4.3.6.1","setting");
x.t("transmissions","connectionless-mode");
x.t("transmissions","application");
x.t("transfer","data");
x.t("sequence","number");
x.t("sequence","numbers");
x.t("nodes","parameter-name");
x.t("nodes","packets");
x.t("nodes","network");
x.t("output","files");
x.t("dynamic","statistics");
x.t("separate","library");
x.t("separate","header");
x.t("transport_rsvp.h","implement");
x.t("transport_rsvp.h","transport_rsvp.cpp");
x.t("string.h","include");
x.t("trace_tcp","trace_udp");
x.t("specifying","new");
x.t("specifying","protocol\u2019s");
x.t("applicable","enclosed");
x.t("experiment","section");
x.t("schedule","timer");
x.t("belonging","protocol");
x.t("udp-statistics.\\n","buf");
x.t("app_layer","udphdr-");
x.t("getipv4address","nettotransinfo-");
x.t("data","delivery");
x.t("data","type");
x.t("data","udp");
x.t("data","structures");
x.t("data","transport");
x.t("data","types");
x.t("data","node");
x.t("data","client");
x.t("data","reliably");
x.t("data","structure");
x.t("data","packet");
x.t("data","using");
x.t("data","across");
x.t("data","therefore");
x.t("optional","included");
x.t("optional","configuration");
x.t("optional","adaptive");
x.t("/include/api.h","file");
x.t("/include/api.h","message");
x.t("information","protocols");
x.t("information","flags");
x.t("information","may");
x.t("information","transport");
x.t("information","sequence");
x.t("information","protocol");
x.t("transport_finalize","void");
x.t("transport_finalize","calls");
x.t("transport_finalize","section");
x.t("transport_finalize","node");
x.t("transport_finalize","defined");
x.t("typical","protocol");
x.t("facilitate","tracing");
x.t("protocol_name","status");
x.t("protocol_name","boolean");
x.t("configure","protocol");
x.t("routine","deliver");
x.t("routine","protocol");
x.t("node_processevent","calls");
x.t("node_processevent","defined");
x.t("/main/node.cpp","event");
x.t("4.3.1.1","multicast");
x.t("bit","rate");
x.t("protection","against");
x.t("ack","highest");
x.t("received","events");
x.t("received","exit");
x.t("received","network");
x.t("received","event");
x.t("received","myprotocol");
x.t("received","application");
x.t("received","msg_app_fromtranscloseresult");
x.t("received","packet");
x.t("examples","tcp-based");
x.t("examples","transport_udp.cpp");
x.t("ftp/gen","http");
x.t("engineering","(rsvp-te)");
x.t("engineering","keeping");
x.t("switched","paths");
x.t("(lsps)","multiprotocol");
x.t("defined","network_ip.h");
x.t("defined","transport_udp.h");
x.t("defined","network_ip.cpp");
x.t("defined","protocol\u2019s");
x.t("defined","transport.cpp");
x.t("defined","transport_udp.cpp");
x.t("defined","step");
x.t("defined","qualnet_home");
x.t("defined","transport.h");
x.t("defined","structure");
x.t("defined","following");
x.t("4.3.5.5.3.1","creating");
x.t("4.3.5.5.3.1","initialize");
x.t("appropriate","recommend");
x.t("appropriate","protocol-specific");
x.t("appropriate","parameters");
x.t("appropriate","section");
x.t("appropriate","transport");
x.t("appropriate","data");
x.t("appropriate","routine");
x.t("/include/trace.h","example");
x.t("wasfound","false");
x.t("error_reporterror","myprotocol");
x.t("error_reporterror","expecting");
x.t("newly","created");
x.t("exchanged","simulation");
x.t("memcpy","&destinationaddress");
x.t("memcpy","&sourceaddress");
x.t("memcpy","info-");
x.t("3-7","sends");
x.t("application","layer");
x.t("application","uses");
x.t("application","network");
x.t("application","transport");
x.t("application","client");
x.t("application","data");
x.t("application","server");
x.t("4.3.1.2","user");
x.t("runtime","performance");
x.t("highest","sequence");
x.t("routing","techniques");
x.t("/include/fileio.h","file");
x.t("/include/fileio.h","requires");
x.t("/include/fileio.h","utility");
x.t("finalization","functions");
x.t("finalization","function");
x.t("finalization","finalization");
x.t("/libraries/developer/src","however");
x.t("/libraries/developer/src","code");
x.t("/libraries/developer/src","folder");
x.t("/libraries/developer/src","definitions");
x.t("collecting","reporting");
x.t("collecting","statistics");
x.t("4.3.5.5.3.2","initializing");
x.t("4.3.5.5.3.2","call");
x.t("case","msg_transport_fromnetwork");
x.t("case","msg_transport_rsvp_pathrefresh");
x.t("case","ipproto_myprotocol");
x.t("case","ipproto_udp");
x.t("case","ipproto_tcp");
x.t("case","msg_transport_rsvp_initiateexplicitroute");
x.t("case","transportprotocol_udp");
x.t("case","msg_transport_rsvp_resvrefresh");
x.t("case","transportprotocol_tcp");
x.t("case","msg_transport_rsvp_initapp");
x.t("case","msg_transport_fromappsend");
x.t("case","switch");
x.t("case","transportprotocol_rsvp");
x.t("case","configuration");
x.t("case","transportlayer_myprotocol");
x.t("case","protocol");
x.t("case","ipproto_rsvp");
x.t("case","msg_transport_rsvp_helloextension");
x.t("disable","protocol");
x.t("utility","function");
x.t("values","observed");
x.t("values","schedule");
x.t("allocates","new");
x.t("allocates","memory");
x.t("statistics-","numpkttoapp");
x.t("statistics-","numpktfromapp");
x.t("udphdr-","checksum");
x.t("udphdr-","length");
x.t("udphdr-","sourceport");
x.t("udphdr-","destport");
x.t("numpktfromapp","d_int32");
x.t("numpktfromapp","io_printstat");
x.t("numpktfromapp","message_addheader");
x.t("heterogeneous","inter-network");
x.t("efficient","negative");
x.t("4.3.1.3","transmission");
x.t("retransmit","reno");
x.t("called","simulator");
x.t("called","handle");
x.t("called","src");
x.t("called","fast");
x.t("called","user_models");
x.t("called","function");
x.t("called","transport");
x.t("called","hierarchically");
x.t("called","transport_myprotocol.cpp");
x.t("called","reservation");
x.t("called","myprotocol");
x.t("called","print");
x.t("called","transport_myprotocol.h");
x.t("structure","included");
x.t("structure","rsvp-te");
x.t("structure","void");
x.t("structure","transportdata");
x.t("structure","uses");
x.t("structure","calls");
x.t("structure","indicates");
x.t("structure","udp");
x.t("structure","tcp");
x.t("structure","transportdataudp");
x.t("structure","hold");
x.t("structure","function");
x.t("structure","node");
x.t("structure","e.g");
x.t("structure","defined");
x.t("structure","structure");
x.t("structure","used");
x.t("structure","additionally");
x.t("structure","definitions");
x.t("port","msg_transport_fromappopen");
x.t("port","number");
x.t("port","numbers");
x.t("port","message_setlayer");
x.t("described","section");
x.t("described","detail");
x.t("print","string");
x.t("print","protocol");
x.t("print","statistics");
x.t("above","declaration");
x.t("specification","optional");
x.t("protocol","(rsvp)");
x.t("protocol","example");
x.t("protocol","//----------------------------------------------------------");
x.t("protocol","available");
x.t("protocol","parameter");
x.t("protocol","provide");
x.t("protocol","just");
x.t("protocol","resides");
x.t("protocol","shown");
x.t("protocol","refer");
x.t("protocol","various");
x.t("protocol","layer");
x.t("protocol","source");
x.t("protocol","rsvp-te");
x.t("protocol","(udp)");
x.t("protocol","enabled");
x.t("protocol","cbr");
x.t("protocol","discussed");
x.t("protocol","implemented");
x.t("protocol","state");
x.t("protocol","points");
x.t("protocol","type");
x.t("protocol","hence");
x.t("protocol","mandatory");
x.t("protocol","calls");
x.t("protocol","includes");
x.t("protocol","(tcp)");
x.t("protocol","list");
x.t("protocol","initialization");
x.t("protocol","status");
x.t("protocol","determines");
x.t("protocol","udp");
x.t("protocol","add");
x.t("protocol","network");
x.t("protocol","check");
x.t("protocol","traffic");
x.t("protocol","built");
x.t("protocol","desired");
x.t("protocol","creating");
x.t("protocol","name");
x.t("protocol","stored");
x.t("protocol","follows");
x.t("protocol","initialize");
x.t("protocol","accordingly");
x.t("protocol","provides");
x.t("protocol","programmer");
x.t("protocol","parameters");
x.t("protocol","indicate");
x.t("protocol","identified");
x.t("protocol","stack");
x.t("protocol","allows");
x.t("protocol","explained");
x.t("protocol","write");
x.t("protocol","string");
x.t("protocol","functions");
x.t("protocol","store");
x.t("protocol","(mdp)");
x.t("protocol","4.3.5.9.1");
x.t("protocol","configured");
x.t("protocol","syntax");
x.t("protocol","life");
x.t("protocol","number");
x.t("protocol","gui");
x.t("protocol","function");
x.t("protocol","commonly");
x.t("protocol","implements");
x.t("protocol","may");
x.t("protocol","destined");
x.t("protocol","transport");
x.t("protocol","section");
x.t("protocol","handling");
x.t("protocol","added");
x.t("protocol","disabled");
x.t("protocol","header");
x.t("protocol","message");
x.t("protocol","operating");
x.t("protocol","qualnet");
x.t("protocol","event");
x.t("protocol","myprotocolfinalize");
x.t("protocol","non-mandatory");
x.t("protocol","transport_rsvp.cpp");
x.t("protocol","configuration");
x.t("protocol","include");
x.t("protocol","tcptype");
x.t("protocol","similar");
x.t("protocol","interacts");
x.t("protocol","running");
x.t("protocol","suite");
x.t("protocol","implementation");
x.t("protocol","prototype");
x.t("protocol","figure");
x.t("protocol","models");
x.t("protocol","myprotocol");
x.t("protocol","takes");
x.t("protocol","data");
x.t("protocol","received");
x.t("protocol","finalization");
x.t("protocol","application");
x.t("protocol","called");
x.t("protocol","structure");
x.t("protocol","protocol");
x.t("protocol","typically");
x.t("protocol","call");
x.t("protocol","numbers");
x.t("protocol","used");
x.t("protocol","rsvpprotocol");
x.t("protocol","using");
x.t("protocol","understanding");
x.t("protocol","4.3.5.5.1");
x.t("protocol","4.3.5.5.2");
x.t("protocol","statistics");
x.t("protocol","therefore");
x.t("protocol","struct");
x.t("protocol","including");
x.t("protocol","4.3.4");
x.t("two","protocols");
x.t("two","files");
x.t("two","mpls");
x.t("two","additional");
x.t("4.3.1.4","reservation");
x.t("transmit","data");
x.t("note","partial");
x.t("note","processing");
x.t("msg_transport_fromapplisten","message");
x.t("transport_myprotocol.h","statements");
x.t("transport_myprotocol.h","example");
x.t("transport_myprotocol.h","4.3.5.11");
x.t("transport_myprotocol.h","source");
x.t("transport_myprotocol.h","4.3.5.6.2.1");
x.t("transport_myprotocol.h","4.3.5.3");
x.t("transport_myprotocol.h","contain");
x.t("transport_myprotocol.h","functions");
x.t("transport_myprotocol.h","4.3.5.8");
x.t("transport_myprotocol.h","section");
x.t("transport_myprotocol.h","4.3.5.5.3.1");
x.t("transport_myprotocol.h","application");
x.t("transportmyprotocollayer","void");
x.t("transportmyprotocollayer","protocol's");
x.t("transportmyprotocollayer","node");
x.t("transportmyprotocollayer","myprotocolfinalize");
x.t("transportmyprotocollayer","protocol");
x.t("transportmyprotocollayer","using");
x.t("trace_myprotocol","traceprotocoltype");
x.t("transportudpstat","shown");
x.t("transportudpstat","udp");
x.t("transportudpstat","transportdataudp");
x.t("transportudpstat","initializes");
x.t("transportudpstat","udp-");
x.t("transportudpstat","data");
x.t("transportudpstat","defined");
x.t("transportudpstat","statistics");
x.t("transportudpstat","mem_malloc");
x.t("message/event","description");
x.t("event/message","types");
x.t("otherwise","program");
x.t("otherwise","simulator");
x.t("infoptr","networktotransportinfo");
x.t("infoptr","message_setevent");
x.t("priority","user-specified");
x.t("priority","nodeaddress");
x.t("priority","ipproto_udp");
x.t("priority","message_infoalloc");
x.t("priority","ipheadertype");
x.t("priority","sourceaddress");
x.t("priority","memcpy");
x.t("priority","priority");
x.t("priority","infoptr-");
x.t("&acndata","remove");
x.t("&acndata","networkipreceivepacketfromtransportlayer");
x.t("integer","parameter");
x.t("executes","during");
x.t("connectionless","delivery");
x.t("connectionless","protocol");
x.t("dissemination","protocol");
x.t("based","tcp");
x.t("based","reliable");
x.t("based","reno");
x.t("applications","implemented");
x.t("applications","require");
x.t("applications","qualnet");
x.t("typically","used");
x.t("algorithm","called");
x.t("wrapped","sequence");
x.t("msg_app_fromtransdatareceived","message");
x.t("msg_app_fromtranscloseresult","message");
x.t("myprotocolenabled","flag");
x.t("myprotocolenabled","section");
x.t("itself","starting");
x.t("work","correctly");
x.t("correctly","msg_transport_protocol_newevent1");
x.t("former","case");
x.t("transport_delay","figure");
x.t("packet","passed");
x.t("packet","field");
x.t("packet","trace");
x.t("packet","time");
x.t("packet","calls");
x.t("packet","size");
x.t("packet","info");
x.t("packet","udp");
x.t("packet","network");
x.t("packet","sends");
x.t("packet","receive");
x.t("packet","transport");
x.t("packet","ipprotocolnumber");
x.t("packet","transmitted");
x.t("packet","received");
x.t("packet","application");
x.t("packet","protocol");
x.t("packet","packet");
x.t("(lsp)","determination");
x.t("numbers","//----------------------------------------------------------");
x.t("numbers","newreno");
x.t("numbers","network-layer");
x.t("numbers","message");
x.t("incoming","interface");
x.t("incoming","packets");
x.t("incoming","packet");
x.t("communicates","network");
x.t("call","initialization");
x.t("call","protocol\u2019s");
x.t("call","protocol's");
x.t("call","function");
x.t("call","transport");
x.t("call","finalization");
x.t("call","protocol");
x.t("transport_","designate");
x.t("created","files");
x.t("created","instance");
x.t("created","new");
x.t("created","model");
x.t("(transportudpheader)","trace_udp");
x.t("associate","protocol");
x.t("recompile","qualnet");
x.t("/transport_myprotocol.cpp","(developer_srcdir)");
x.t("networkipiswirednetwork","node");
x.t("service","rsvp-te");
x.t("service","i.e");
x.t("service","top");
x.t("service","udp");
x.t("service","requested");
x.t("service","tcp");
x.t("service","implements");
x.t("service","transport");
x.t("service","qualnet");
x.t("service","send");
x.t("service","application");
x.t("service","transporting");
x.t("service","integrate");
x.t("used","label");
x.t("used","example");
x.t("used","parameter");
x.t("used","interface");
x.t("used","multiple");
x.t("used","udp");
x.t("used","network");
x.t("used","tcp");
x.t("used","communication");
x.t("used","hold");
x.t("used","control");
x.t("used","transport");
x.t("used","internal");
x.t("used","implementing");
x.t("used","qualnet");
x.t("used","implementation");
x.t("used","application");
x.t("used","transmit");
x.t("used","protocol");
x.t("used","applications");
x.t("used","pass");
x.t("used","transporting");
x.t("model","library");
x.t("model","implement");
x.t("model","files");
x.t("model","place");
x.t("model","qualnet");
x.t("model","existing");
x.t("model","makefile-common");
x.t("model","4.3.1.1");
x.t("offers","minimal");
x.t("management","mechanism");
x.t("management","apis");
x.t("following","statements");
x.t("following","statement");
x.t("following","list");
x.t("following","actions");
x.t("following","tcp");
x.t("following","tasks");
x.t("following","parameters");
x.t("following","prototypes");
x.t("following","header");
x.t("following","include");
x.t("following","configuration");
x.t("following","data");
x.t("following","folders");
x.t("except","modification");
x.t("relevant","transport");
x.t("rsvpprotocol","void");
x.t("rsvpprotocol","flag");
x.t("pointer","new");
x.t("pointer","udp");
x.t("pointer","protocol\u2019s");
x.t("pointer","node");
x.t("pointer","data");
x.t("pointer","pointer");
x.t("contained","file");
x.t("contained","header");
x.t("turn","call");
x.t("struct_transport_str","transportdataudp");
x.t("transportdataudpstruct","bool");
x.t("subnet","identifier");
x.t("bottom","manner");
x.t("corresponding","protocol");
x.t("break","default");
x.t("break","//switch//");
x.t("break","free");
x.t("break","figure");
x.t("break","case");
x.t("either","inside");
x.t("simulation","4.3.5.10");
x.t("simulation","enum");
x.t("simulation","last");
x.t("simulation","function");
x.t("simulation","section");
x.t("simulation","finalization");
x.t("special","issues");
x.t("special","message");
x.t("transportudpsendtonetwork","receives");
x.t("transportudpsendtonetwork","shown");
x.t("transportudpsendtonetwork","passes");
x.t("transportudpsendtonetwork","node");
x.t("message_setlayer","message_setevent");
x.t("message_setlayer","msg");
x.t("&sourceaddress","sizeof");
x.t("&sourceaddress","infoptr-");
x.t("destport","message_setevent");
x.t("destport","udphdr-");
x.t("destport","info-");
x.t("app_tcpcloseconnection","apis");
x.t("similarly","transport");
x.t("sack","tcp");
x.t("additionally","following");
x.t("using","example");
x.t("using","apis");
x.t("using","udp");
x.t("using","api");
x.t("using","messages");
x.t("using","transport");
x.t("/libraries/developer/src/network_ip.cpp","contains");
x.t("understanding","discussed");
x.t("4.3.5.5.1","determining");
x.t("4.3.5.5.1","function");
x.t("4.3.5.5.1","read");
x.t("nodeinput","transport-protocol-myprotocol");
x.t("nodeinput","else");
x.t("nodeinput","udp-statistics");
x.t("nodeinput","initialize");
x.t("nodeinput","char");
x.t("nodeinput","io_readstring");
x.t("nodeinput","transportudpinit");
x.t("nodeinput","bool");
x.t("nodeinput","nodeinput");
x.t("setting","address");
x.t("setting","broadcast");
x.t("setting","udp-statistics.\\n");
x.t("message_send","void");
x.t("message_send","node");
x.t("packet_in","&acndata");
x.t("calculated","actiondata");
x.t("message_free","node");
x.t("message_free","free");
x.t("process_immediately","figure");
x.t("containing","statistic");
x.t("containing","statistics");
x.t("across","heterogeneous");
x.t("minimal","transport");
x.t("folders","source");
x.t("folders","section");
x.t("folders","relevant");
x.t("transportprotocol","shown");
x.t("transportprotocol","transportdata");
x.t("transportprotocol","enumeration");
x.t("transportprotocol","figure");
x.t("transportprotocol","defined");
x.t("transportprotocol","described");
x.t("pass","incoming");
x.t("adding","new");
x.t("adding","transport");
x.t("adding","code");
x.t("adding","non-mandatory");
x.t("adding","myprotocol");
x.t("adding","dynamic");
x.t("adding","model");
x.t("statistics","illustrate");
x.t("statistics","variables");
x.t("statistics","related");
x.t("statistics","layer");
x.t("statistics","void");
x.t("statistics","discussed");
x.t("statistics","file");
x.t("statistics","during");
x.t("statistics","udp");
x.t("statistics","declare");
x.t("statistics","specified");
x.t("statistics","initialize");
x.t("statistics","final");
x.t("statistics","collection");
x.t("statistics","udp-");
x.t("statistics","section");
x.t("statistics","transport");
x.t("statistics","declaring");
x.t("statistics","sizeof");
x.t("statistics","statistic");
x.t("statistics","variable");
x.t("statistics","printed");
x.t("statistics","collected");
x.t("statistics","null");
x.t("statistics","dynamic");
x.t("statistics","appropriate");
x.t("statistics","protocol");
x.t("statistics","transportudpstat");
x.t("statistics","call");
x.t("statistics","statistics");
x.t("subsequent","sections");
x.t("4.3.5.5.2","explains");
x.t("4.3.5.5.2","write");
x.t("4.3.5.5.2","protocol");
x.t("4.3.5.5.2","reading");
x.t("expecting","transport-protocol-myprotocol");
x.t("memory\\n","abort");
x.t("returns","broadcast");
x.t("returns","protocol");
x.t("transportudpheader","msg-");
x.t("transportudpheader","message_returnpacket");
x.t("transportudpheader","udphdr");
x.t("udphdr","apptoudpsend");
x.t("udphdr","transportudpheader");
x.t("infoptr-","incominginterfaceindex");
x.t("infoptr-","sourceaddr");
x.t("infoptr-","destinationaddr");
x.t("infoptr-","priority");
x.t("message_returnpacketsize","(msg)");
x.t("message_returnpacketsize","sends");
x.t("ipproto_rsvp","description");
x.t("ipproto_rsvp","sendtorsvp");
x.t("ipproto_rsvp","constant");
x.t("partition_finalize","defined");
x.t("4.3.1","transport");
x.t("associated","connection");
x.t("associated","string");
x.t("associated","transport");
x.t("maintains","connection");
x.t("paths","(mpls)");
x.t("paths","(lsps)");
x.t("without","resource");
x.t("without","considering");
x.t("definitions","common");
x.t("definitions","transport");
x.t("definitions","data");
x.t("outline","developing");
x.t("outline","code");
x.t("performed","part");
x.t("performed","node");
x.t("performed","adding");
x.t("modify","transportdata");
x.t("modify","file");
x.t("modify","gui");
x.t("modify","function");
x.t("modify","transport");
x.t("modify","qualnet_home");
x.t("names","components");
x.t("names","different");
x.t("names","transport_");
x.t("towards","adding");
x.t("towards","statistics");
x.t("designate","files");
x.t("therefore","new");
x.t("therefore","exchange");
x.t("therefore","protocol");
x.t("4.3.5.5.3","implementing");
x.t("4.3.5.5.3","statistics");
x.t("tostype","priority");
x.t("transportudpfinalize","shown");
x.t("transportudpfinalize","calls");
x.t("transportudpfinalize","node");
x.t("transportudpfinalize","(node)");
x.t("transportudpfinalize","template");
x.t("including","compiling");
x.t("including","initialization");
x.t("including","file");
x.t("including","myprotocol");
x.t("including","two");
x.t("4.3.2","transport");
x.t("versions","qualnet_home");
x.t("struct","d_int32");
x.t("struct","enum");
x.t("struct","transportdata");
x.t("struct","struct_transport_str");
x.t("struct","transportdataudpstruct");
x.t("msg_transport_fromappclose","message");
x.t("transport_processevent","sample");
x.t("transport_processevent","implements");
x.t("transport_processevent","section");
x.t("transport_processevent","node");
x.t("transport_processevent","defined");
x.t("transport_processevent","call");
x.t("describe","tasks");
x.t("describe","collect");
x.t("describe","steps");
x.t("stdio.h","include");
x.t("insert","following");
x.t("(transportdataudp)","node-");
x.t("info-","ttl");
x.t("info-","outgoinginterface");
x.t("info-","incominginterfaceindex");
x.t("info-","sourceaddr");
x.t("info-","sourceport");
x.t("info-","destaddr");
x.t("info-","priority");
x.t("info-","destport");
x.t("unsigned","ttl");
x.t("unsigned","short");
x.t("unsigned","char");
x.t("msg_transport_rsvp_helloextension","case");
x.t("app_tcpopenconnection","app_tcpserverlisten");
x.t("sent","received");
x.t("sent","application");
x.t("4.3.3","example");
x.t("4.3.3","api");
x.t("4.3.3","transport");
x.t("4.3.4.1","section");
x.t("4.3.4.1","message");
x.t("4.3.4.1","application");
x.t("naming","coding");
x.t("naming","guidelines");
x.t("comprise","two");
x.t("even","compilation");
x.t("reading","configuration");
x.t("mem_malloc","sizeof");
x.t("message_addheader","copies");
x.t("message_addheader","node");
x.t("delivers","packet");
x.t("transporttcpfinalize","(node)");
x.t("buffer","string");
x.t("5.1.4","4.3.6");
x.t("transporting","application");
x.t("server","tcp");
x.t("server","request");
x.t("server","application");
x.t("negative","acknowledgement");
x.t("resources","path");
x.t("contains","source");
x.t("contains","layer");
x.t("contains","prototypes");
x.t("contains","transport");
x.t("contains","implementation");
x.t("contains","constant");
x.t("contains","pointer");
x.t("contains","definitions");
x.t("4.3.4","transport");
x.t("4.3.4.2","api");
x.t("4.3.4.2","tcp");
x.t("4.3.4.2","transport");
x.t("detail","timers");
x.t("detail","subsequent");
x.t("integrate","user_models");
x.t("integrate","myprotocol");
x.t("integrate","protocol");
x.t("update","info");
x.t("update","transport");
x.t("update","value");
x.t("update","statistics");
x.t("generally","header");
x.t("specify","tcp");
x.t("specify","prototype");
x.t("(transportudpstat)","std::string");
x.t("(transportudpstat)","udp-");
x.t("udplayer-","udpstatsenabled");
x.t("udplayer-","statistics-");
x.t("rsvphandlepacket","node");
x.t("rsvphandlepacket","called");
x.t("user\u2019s","guide");
}
