function FileData_Pairs(x)
{
x.t("coding","guidelines");
x.t("ieee","802.11");
x.t("passed","function");
x.t("interfaces","transmission");
x.t("interfaces","parallel_setprotocolisnoteotcapable");
x.t("provide","lookahead");
x.t("provide","inaccurate");
x.t("protocols","ieee");
x.t("protocols","estimate");
x.t("protocols","predictable");
x.t("protocols","section");
x.t("protocols","predict");
x.t("protocols","point-to-point");
x.t("available","processors");
x.t("exist","appinput.inputstrings");
x.t("else","strcmp");
x.t("else","message");
x.t("parameter","function");
x.t("conservative","parallel");
x.t("possible","value");
x.t("/include/parallel.h","table");
x.t("protected","mutex");
x.t("taking","action");
x.t("ram-up","delay");
x.t("isqosenabled","networktype");
x.t("2008","2012");
x.t("mutex","locks");
x.t("shown","figure");
x.t("every","time");
x.t("scalable","network");
x.t("static","void");
x.t("static","global");
x.t("timing","issues");
x.t("b-1","part");
x.t("b-1","prototypes");
x.t("b-1","lookahead");
x.t("b-1","handling");
x.t("estimate","lookahead");
x.t("table","b-1");
x.t("description","parallel_setminimumlookaheadforinterface");
x.t("sending","messages");
x.t("variables","static");
x.t("variables","outside");
x.t("variables","section");
x.t("variables","following");
x.t("once","during");
x.t("required","access");
x.t("b-2","shows");
x.t("b-2","fist");
x.t("b-2","handling");
x.t("b-2","node");
x.t("layer","apis");
x.t("node\u2019s","data");
x.t("node\u2019s","statistics");
x.t("action","app_initializeapplications");
x.t("action","consider");
x.t("void","macdot11init");
x.t("void","app_initializeapplications");
x.t("void","mactdmainitializetimer");
x.t("void","mactdmainit");
x.t("firstnode","const");
x.t("firstnode","null");
x.t("appstr","gsm");
x.t("appstr","strcmp");
x.t("appstr","ftp");
x.t("optimal","performance");
x.t("b-3","shows");
x.t("b-3","setting");
x.t("macdot11init","implemented");
x.t("macdot11init","node");
x.t("locking","data");
x.t("try","partitions");
x.t("partition_nodeexists","firstnode-");
x.t("partition_nodeexists","check");
x.t("user","assume");
x.t("b-4","every");
x.t("b-4","figure");
x.t("b-4","setting");
x.t("platforms","b.1");
x.t("remote","partition");
x.t("shows","minimum");
x.t("shows","done");
x.t("implemented","/libraries/wireless/src/mac_tdma.cpp");
x.t("implemented","/main/application.cpp");
x.t("implemented","/libraries/wireless/src/mac_dot11.cpp");
x.t("line","partition_returnnodepointter");
x.t("line","figure");
x.t("uses","conservative");
x.t("guaranteed","interfere");
x.t("transmitting","mode");
x.t("nodeaddress","subnetaddress");
x.t("b-5","lookahead");
x.t("b-5","functions");
x.t("b-5","setting");
x.t("provided","initialization");
x.t("state","change");
x.t("state","sure");
x.t("state","deterministically");
x.t("state","consistent");
x.t("app_initializeapplications","implemented");
x.t("app_initializeapplications","node");
x.t("app_initializeapplications","using");
x.t("partitiondata-","nodeidhash");
x.t("partitiondata-","remotenodeidhash");
x.t("physical","radio");
x.t("mode","transmitting");
x.t("mode","mac");
x.t("interface","usually");
x.t("interface","indicate");
x.t("macdot11traceinit","node");
x.t("macdatatdma","tdma");
x.t("maintained","even");
x.t("change","initialization");
x.t("change","receiving");
x.t("tdma","protocols");
x.t("tdma","mac");
x.t("tdma","initialization");
x.t("tdma","int");
x.t("tdma","figure");
x.t("times","message");
x.t("/libraries/wireless/src/mac_tdma.cpp","void");
x.t("clocktype","delay");
x.t("time","slots");
x.t("time","b.1.4");
x.t("time","(eot)");
x.t("time","function");
x.t("time","interval");
x.t("time","figure");
x.t("time","takes");
x.t("time","sequence");
x.t("time","called");
x.t("time","protocol");
x.t("time","sequencing");
x.t("time","updated");
x.t("sequential","usually");
x.t("firstnode-","partitiondata-");
x.t("firstnode-","partitiondata");
x.t("wired","interfaces");
x.t("//parallel","parallel_setlookaheadhandleeot");
x.t("//parallel","tdma-");
x.t("//parallel","parallel_setprotocolisnoteotcapable");
x.t("response","changes");
x.t("followed","developing");
x.t("however","making");
x.t("however","appropriate");
x.t("partition_returnnodepointter","partitiondata");
x.t("execution","protocols");
x.t("slotduration","tdma-");
x.t("mac","protocols");
x.t("mac","initialization");
x.t("mac","lookahead");
x.t("mac","small");
x.t("mac","protocol");
x.t("apis","sending");
x.t("apis","section");
x.t("apis","circumventing");
x.t("checks","originating");
x.t("slots","exact");
x.t("listed","table");
x.t("access","node\u2019s");
x.t("access","nodes");
x.t("engine","time");
x.t("nodehash","firstnode-");
x.t("nodehash","sourcenodeid");
x.t("link","protocol");
x.t("new","lookahead");
x.t("updates","earliest");
x.t("semaphores","slow");
x.t("usually","minimum");
x.t("usually","safe");
x.t("interfaceaddress","const");
x.t("initialization","try");
x.t("initialization","subsequently");
x.t("initialization","function");
x.t("initialization","properly");
x.t("initialization","ensure");
x.t("initialization","used");
x.t("file","b.1.2");
x.t("continues","without");
x.t("parallel_setminimumlookaheadforinterface","function");
x.t("parallel_setminimumlookaheadforinterface","node");
x.t("lookaheadhandle","endif");
x.t("lookaheadhandle","getsimtime");
x.t("lookaheadhandle","parallel_allocatelookaheadhandle");
x.t("interframetime","ifdef");
x.t("parallel","//parallel");
x.t("parallel","execution");
x.t("parallel","performance");
x.t("parallel","processes");
x.t("parallel","algorithm");
x.t("parallel","simulation");
x.t("during","mac");
x.t("during","initialization");
x.t("during","protocol\u2019s");
x.t("during","nodes");
x.t("appinput.inputstrings","[i]");
x.t("incorrect","however");
x.t("subnetlistindex","nodeaddress");
x.t("subnetlistindex","const");
x.t("dot11","ifdef");
x.t("5000","endif");
x.t("results","avoided");
x.t("check","whether");
x.t("check","two");
x.t("assume","reference");
x.t("parallel_addlookaheadhandletolookaheadcalculator","function");
x.t("parallel_addlookaheadhandletolookaheadcalculator","node");
x.t("mactdmainitializetimer","implemented");
x.t("mactdmainitializetimer","node");
x.t("mactdmainitializetimer","called");
x.t("network","2008");
x.t("network","technologies");
x.t("reasons","data");
x.t("depends","global");
x.t("sure","state");
x.t("false","sprintf");
x.t("violates","minimum");
x.t("multi-processor","platforms");
x.t("inter-layer","apis");
x.t("locks","semaphores");
x.t("locks","independent");
x.t("via","mutex");
x.t("handle","static");
x.t("handle","lookahead");
x.t("handle","allocated");
x.t("handle","repeatedly");
x.t("directly","nodes");
x.t("guidelines","coding");
x.t("guidelines","multi-processor");
x.t("guidelines","b.1");
x.t("guidelines","following");
x.t("outside","control");
x.t("slow","effectively");
x.t("eot-capable","minimum");
x.t("operation","allocate");
x.t("time.we","show");
x.t("settings","reason");
x.t("deterministically","achieve");
x.t("addresses","assigned");
x.t("performance","mac");
x.t("performance","minimum");
x.t("exactly","transmissions");
x.t("wireless","interfaces");
x.t("protocol\u2019s","operation");
x.t("processors","guaranteed");
x.t("processors","however");
x.t("processors","may");
x.t("part","function");
x.t("const","int");
x.t("const","nodeinput");
x.t("predictable","tdma");
x.t("predictable","earliest");
x.t("b.1.1","nodes");
x.t("b.1.1","global");
x.t("subsequently","read-only");
x.t("exists","remote");
x.t("exists","partition");
x.t("exists","node");
x.t("exists","returns");
x.t("alternatively","firstnode-");
x.t("useful","data");
x.t("interfere","longer");
x.t("going","interface");
x.t("parallel_setlookaheadhandleeot","function");
x.t("parallel_setlookaheadhandleeot","node");
x.t("b.1.2","provide");
x.t("b.1.2","accessing");
x.t("makes","parallel");
x.t("continue","processing");
x.t("continue","figure");
x.t("indicate","eot-capable");
x.t("indicate","protocol");
x.t("prototypes","functions");
x.t("b.1.3","mac");
x.t("b.1.3","violate");
x.t("consistent","partitions");
x.t("partition","incorrect");
x.t("partition","continue");
x.t("partition","first");
x.t("partition","function");
x.t("partition","aborts");
x.t("partition","figure");
x.t("partition","nodes");
x.t("partition","correct");
x.t("sprintf","errorstring");
x.t("shadow","copies");
x.t("allows","may");
x.t("delayuntilsignalairborn","endif");
x.t("stack","send");
x.t("b.1.4","inter-layer");
x.t("b.1.4","b.1.1");
x.t("accessed","time");
x.t("segment","checks");
x.t("segment","figure");
x.t("local","partition");
x.t("gsm","call");
x.t("copies","nodes");
x.t("sets","minimum");
x.t("int","interfaceaddress");
x.t("int","subnetlistindex");
x.t("int","tdma-");
x.t("int","prefixlength");
x.t("int","interfaceindex");
x.t("int","numnodesinsubnet");
x.t("int","numhostbits");
x.t("int","nodesinsubnet");
x.t("mactdmainit","shown");
x.t("mactdmainit","mactdmainitializetimer");
x.t("mactdmainit","node");
x.t("lookahead","ieee");
x.t("lookahead","uses");
x.t("lookahead","interface");
x.t("lookahead","tdma");
x.t("lookahead","mac");
x.t("lookahead","handle");
x.t("lookahead","settings");
x.t("lookahead","functions");
x.t("lookahead","model\u2019s");
x.t("lookahead","interval");
x.t("lookahead","largest");
x.t("lookahead","based");
x.t("lookahead","smallest");
x.t("lookahead","calculator");
x.t("rely","shared");
x.t("contain","useful");
x.t("device","change");
x.t("receiving","mode");
x.t("eot","parallel_addlookaheadhandletolookaheadcalculator");
x.t("developing","parallel-safe");
x.t("mapping_getnodefromhash","firstnode-");
x.t("mapping_getnodefromhash","alternatively");
x.t("small","lookahead");
x.t("(eot)","mac");
x.t("functions","mactdmainit");
x.t("functions","function");
x.t("functions","programmers");
x.t("functions","contained");
x.t("independent","timing");
x.t("representation","real");
x.t("nodeidhash","firstnode-");
x.t("nodeidhash","appinput.numlines");
x.t("nodeidhash","contains");
x.t("delay","passed");
x.t("delay","wired");
x.t("delay","5000");
x.t("delay","wireless");
x.t("delay","lookahead");
x.t("delay","delay");
x.t("delay","tdma-");
x.t("delay","messages");
x.t("delay","transmission");
x.t("subnetmemberdata","subnetlist");
x.t("tdma-","slotduration");
x.t("tdma-","lookaheadhandle");
x.t("tdma-","interframetime");
x.t("tdma-","guardtime");
x.t("tdma-","numslotsperframe");
x.t("violate","inter-layer");
x.t("violate","protocol");
x.t("issues","locking");
x.t("reason","violate");
x.t("reason","node");
x.t("long","node");
x.t("first","parameter");
x.t("minimum","lookahead");
x.t("minimum","delay");
x.t("messages","directly");
x.t("messages","going");
x.t("prefixlength","bool");
x.t("control","simulation");
x.t("written","once");
x.t("initializes","applications");
x.t("processing","long");
x.t("(mo)","node");
x.t("interfaceindex","const");
x.t("interfaceindex","int");
x.t("ipv6subnetaddr","unsigned");
x.t("model\u2019s","behavior");
x.t("numnodesinsubnet","bool");
x.t("2012","scalable");
x.t("function","description");
x.t("function","macdot11init");
x.t("function","partition_nodeexists");
x.t("function","app_initializeapplications");
x.t("function","tdma");
x.t("function","updates");
x.t("function","continues");
x.t("function","mactdmainitializetimer");
x.t("function","sets");
x.t("function","mactdmainit");
x.t("function","mapping_getnodefromhash");
x.t("function","initializes");
x.t("function","replace");
x.t("function","adds");
x.t("function","phy_starttransmittingsignal");
x.t("function","mapping_getnodeptrfromhash");
x.t("function","partition_returnnodepointer");
x.t("function","used");
x.t("fist","parameter");
x.t("better","parallel");
x.t("dot11-","delayuntilsignalairborn");
x.t("endif","//endparallel");
x.t("cannot","maintained");
x.t("processes","sequential");
x.t("safe","global");
x.t("may","provide");
x.t("may","different");
x.t("may","non-trivial");
x.t("may","cases");
x.t("may","accurate");
x.t("may","tempted");
x.t("different","processors");
x.t("different","partitions");
x.t("particular","programmers");
x.t("aborts","node");
x.t("whether","node");
x.t("accessing","nodes");
x.t("/main/application.cpp","void");
x.t("instead","function");
x.t("replace","following");
x.t("parallel-safe","models");
x.t("section","b.1.1");
x.t("section","b.1.2");
x.t("section","b.1.3");
x.t("section","b.1.4");
x.t("section","4.11");
x.t("properly","user");
x.t("properly","sequenced");
x.t("achieve","information");
x.t("handling","nodes");
x.t("earliest","time");
x.t("earliest","output");
x.t("changes","during");
x.t("allocated","function");
x.t("node","exist");
x.t("node","required");
x.t("node","firstnode");
x.t("node","partition_nodeexists");
x.t("node","macdatatdma");
x.t("node","tdma");
x.t("node","access");
x.t("node","exists");
x.t("node","local");
x.t("node","int");
x.t("node","tdma-");
x.t("node","dot11-");
x.t("node","node");
x.t("node","identifier");
x.t("node","null");
x.t("node","mapping_getnodeptrfromhash");
x.t("node","nodeinput");
x.t("node","statistics");
x.t("node","update");
x.t("assigned","properly");
x.t("transmission","ram-up");
x.t("transmission","delay");
x.t("code","check");
x.t("code","segment");
x.t("identifier","sourcenodeid");
x.t("remotenodeidhash","firstnode-");
x.t("remotenodeidhash","contains");
x.t("reference","nodes");
x.t("return","partition");
x.t("functioning","protocol");
x.t("adds","new");
x.t("bool","isqosenabled");
x.t("bool","wasfound");
x.t("4.11","violates");
x.t("b.1","general");
x.t("environment","real");
x.t("errorstring","node");
x.t("strcmp","appstr");
x.t("message","network");
x.t("message","timermsg");
x.t("message","transmissions");
x.t("exact","time");
x.t("effectively","makes");
x.t("ftp","else");
x.t("ensure","addresses");
x.t("ifdef","parallel");
x.t("//endparallel","mactdmainitializetimer");
x.t("//endparallel","figure");
x.t("guardtime","tdma-");
x.t("rules","followed");
x.t("made","available");
x.t("programmers","listed");
x.t("programmers","may");
x.t("consider","code");
x.t("null","sprintf");
x.t("null","partition");
x.t("null","function");
x.t("null","return");
x.t("longer","lookahead");
x.t("parallel_setprotocolisnoteotcapable","function");
x.t("parallel_setprotocolisnoteotcapable","(node)");
x.t("configuration","file");
x.t("partitiondata","&node");
x.t("partitiondata","sourcenodeid");
x.t("&node","sourcenodeid");
x.t("phy_starttransmittingsignal","optimal");
x.t("[i]","appstr");
x.t("[i]","sourcenodeid");
x.t("efficiency","parallel");
x.t("interval","time");
x.t("interval","during");
x.t("interval","better");
x.t("value","correct");
x.t("allocate","lookahead");
x.t("figure","b-1");
x.t("figure","b-2");
x.t("figure","b-3");
x.t("figure","b-4");
x.t("figure","b-5");
x.t("sscanf","appinput.inputstrings");
x.t("largest","possible");
x.t("specific","eot");
x.t("send","response");
x.t("send","message");
x.t("making","data");
x.t("generate","state");
x.t("originating","(mo)");
x.t("originating","node");
x.t("mapping_getnodeptrfromhash","nodehash");
x.t("mapping_getnodeptrfromhash","function");
x.t("radio","device");
x.t("(node)","parallel_setminimumlookaheadforinterface");
x.t("(node)","parallel_addlookaheadhandletolookaheadcalculator");
x.t("(node)","delay");
x.t("repeatedly","earliest");
x.t("models","rely");
x.t("models","may");
x.t("models","global");
x.t("systems","shared");
x.t("abort","originating");
x.t("pointers","reference");
x.t("pointers","nodes");
x.t("takes","physical");
x.t("capable","setting");
x.t("timermsg","clocktype");
x.t("nodes","remote");
x.t("nodes","access");
x.t("nodes","nodehash");
x.t("nodes","partition");
x.t("nodes","shadow");
x.t("nodes","contain");
x.t("nodes","may");
x.t("nodes","different");
x.t("nodes","section");
x.t("nodes","node");
x.t("nodes","partitions");
x.t("nodes","protocol");
x.t("nodes","used");
x.t("sequence","shared");
x.t("good","lookahead");
x.t("transmissions","exactly");
x.t("transmissions","occur");
x.t("output","time");
x.t("output","time.we");
x.t("show","done");
x.t("data","available");
x.t("data","protected");
x.t("data","parallel");
x.t("data","via");
x.t("data","written");
x.t("data","may");
x.t("data","instead");
x.t("data","made");
x.t("data","structure");
x.t("data","protocol");
x.t("information","contained");
x.t("correct","functioning");
x.t("correct","figure");
x.t("shared","variables");
x.t("shared","data");
x.t("read-only","provided");
x.t("inaccurate","simulation");
x.t("appropriate","action");
x.t("appropriate","abort");
x.t("error_reporterror","(errorstring)");
x.t("wasfound","macdot11traceinit");
x.t("wasfound","ifdef");
x.t("sourcenodeid","false");
x.t("sourcenodeid","b.1.3");
x.t("sourcenodeid","local");
x.t("sourcenodeid","node");
x.t("sourcenodeid","error_reporterror");
x.t("sourcenodeid","following");
x.t("partition_returnnodepointer","used");
x.t("partition_returnnodepointer","returns");
x.t("global","variables");
x.t("global","state");
x.t("global","data");
x.t("partitions","state");
x.t("partitions","particular");
x.t("partitions","reference");
x.t("partitions","generate");
x.t("partitions","appropriate");
x.t("structure","code");
x.t("structure","two");
x.t("called","earliest");
x.t("protocol","layer");
x.t("protocol","allows");
x.t("protocol","stack");
x.t("protocol","function");
x.t("protocol","transmission");
x.t("protocol","send");
x.t("protocol","figure");
x.t("protocol","models");
x.t("protocol","capable");
x.t("protocol","good");
x.t("protocol","either");
x.t("two","nodes");
x.t("done","tdma");
x.t("done","function");
x.t("802.11","mac");
x.t("circumventing","inter-layer");
x.t("non-trivial","distributed");
x.t("applications","code");
x.t("applications","avoided");
x.t("algorithm","gain");
x.t("based","time");
x.t("predict","times");
x.t("cases","lookahead");
x.t("in6_addr","ipv6subnetaddr");
x.t("numslotsperframe","else");
x.t("real","systems");
x.t("real","system");
x.t("accurate","representation");
x.t("call","originating");
x.t("numhostbits","bool");
x.t("following","line");
x.t("following","reasons");
x.t("following","rules");
x.t("simulation","engine");
x.t("simulation","results");
x.t("simulation","accessed");
x.t("sequenced","data");
x.t("system","models");
x.t("model","depends");
x.t("used","during");
x.t("used","indicate");
x.t("used","partition_returnnodepointer");
x.t("contained","/include/parallel.h");
x.t("contained","configuration");
x.t("pointer","node");
x.t("either","minimum");
x.t("smallest","delay");
x.t("subnetlist","int");
x.t("general","guidelines");
x.t("sequencing","cannot");
x.t("using","function");
x.t("nodeinput","firstnode");
x.t("nodeinput","dot11");
x.t("nodeinput","const");
x.t("nodeinput","nodeinput");
x.t("nodeinput","phymodel");
x.t("appinput.numlines","sscanf");
x.t("setting","lookahead");
x.t("setting","minimum");
x.t("setting","earliest");
x.t("setting","specific");
x.t("calculator","parallel_setlookaheadhandleeot");
x.t("distributed","environment");
x.t("tempted","node");
x.t("statistics","applications");
x.t("statistics","updated");
x.t("statistics","belong");
x.t("returns","null");
x.t("returns","pointer");
x.t("avoided","model");
x.t("avoided","statistics");
x.t("without","taking");
x.t("occur","pre-assigned");
x.t("networktype","in6_addr");
x.t("networktype","networktype");
x.t("behavior","predictable");
x.t("getsimtime","(node)");
x.t("point-to-point","link");
x.t("/libraries/wireless/src/mac_dot11.cpp","void");
x.t("nodesinsubnet","int");
x.t("unsigned","int");
x.t("parallel_allocatelookaheadhandle","(node)");
x.t("even","data");
x.t("(errorstring)","node");
x.t("(errorstring)","figure");
x.t("pre-assigned","time");
x.t("phymodel","subnetmemberdata");
x.t("phymodel","phymodel");
x.t("update","node\u2019s");
x.t("updated","shown");
x.t("updated","node");
x.t("belong","reason");
x.t("contains","pointers");
x.t("gain","efficiency");
x.t("subnetaddress","int");
}
