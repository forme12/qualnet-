function FileData_Pairs(x)
{
x.t("ieee","standard");
x.t("ieee","802.1");
x.t("ieee","802.1d");
x.t("ieee","802.1q");
x.t("ieee","draft");
x.t("workstations","basis");
x.t("example","specify");
x.t("interfaces","1.0");
x.t("root","election");
x.t("root","switch");
x.t("included","qualnet");
x.t("protocols","carry");
x.t("protocols","allow");
x.t("method","tagging");
x.t("library","detailed");
x.t("parameter","required");
x.t("parameter","tables");
x.t("parameter","mac");
x.t("parameter","command");
x.t("parameter","gvrp");
x.t("parameter","number");
x.t("parameter","scenario");
x.t("parameter","switch");
x.t("parameter","scope");
x.t("parameter","value");
x.t("parameter","declaration");
x.t("parameter","stp");
x.t("parameter","port");
x.t("parameter","priority");
x.t("parameter","used");
x.t("parameter","run");
x.t("backplane","throughput");
x.t("backplane","total");
x.t("backplane","delay");
x.t("backplane","switch");
x.t("backplane","statistics");
x.t("switch-priority","parameter");
x.t("switch-priority","stp");
x.t("switch-priority","optional");
x.t("age","time");
x.t("age","stp");
x.t("transmits","hello");
x.t("else","range");
x.t("properties","editor");
x.t("gvrp/sample1","shows");
x.t("switches","parameter");
x.t("switches","register");
x.t("switches","garp");
x.t("switches","port");
x.t("switches","reached");
x.t("defines","method");
x.t("defines","procedures");
x.t("throughput","default");
x.t("throughput","node");
x.t("gvrp/sample2","shows");
x.t("2008","2012");
x.t("every","end");
x.t("within","larger");
x.t("needs","mapped");
x.t("computation","based");
x.t("lists","sub-directory");
x.t("lists","detailed");
x.t("flushed","total");
x.t("flushed","switch");
x.t("full","bandwidth");
x.t("vlan/sample1","shows");
x.t("scalable","network");
x.t("description","switch-priority");
x.t("description","gvrp/sample1");
x.t("description","vlan");
x.t("description","detailed");
x.t("description","format");
x.t("description","switch-port-mapping-type");
x.t("description","port");
x.t("description","qualifier");
x.t("tree","implementation");
x.t("tree","protocol");
x.t("tree","algorithm");
x.t("tree","802.1w");
x.t("create","untagged");
x.t("create","vlan");
x.t("currently","qualnet");
x.t("currently","two");
x.t("refer","qualnet");
x.t("refer","appropriate");
x.t("describes","implemented");
x.t("describes","file");
x.t("describes","configure");
x.t("table","2-1");
x.t("table","2-2");
x.t("table","2-3");
x.t("table","2-4");
x.t("table","2-5");
x.t("table","2-15");
x.t("table","2-6");
x.t("table","2-7");
x.t("table","2-8");
x.t("table","2-9");
x.t("switch-queue-num-priorities","size");
x.t("switch-queue-num-priorities","optional");
x.t("switch-queue-statistics","2.1.4.4");
x.t("switch-queue-statistics","addition");
x.t("switch-queue-statistics","optional");
x.t("vlan/sample2","shows");
x.t("layer","total");
x.t("layer","switch");
x.t("layer","models");
x.t("layer","statistics");
x.t("(vlans)","within");
x.t("required","basic");
x.t("required","switch-port-mapping-type");
x.t("carry","priority");
x.t("20s","specifies");
x.t("flooded","total");
x.t("flooded","switch");
x.t("enters","statistics");
x.t("various","scenario");
x.t("having","interface");
x.t("having","loops");
x.t("bridged","local");
x.t("participants","given");
x.t("apply","switch");
x.t("covers","level");
x.t("non-switch","scenarios");
x.t("improve","performance");
x.t("enabled","suffices");
x.t("enabled","order");
x.t("scheduler","switch");
x.t("scheduler","2.1.2");
x.t("scheduler","specific");
x.t("scheduler","global");
x.t("scheduler","statistics");
x.t("tables","table");
x.t("tables","refer");
x.t("election","switch-priority");
x.t("4096","nearest");
x.t("ingress","filtering");
x.t("searched","switch");
x.t("trees","vlan/sample1");
x.t("uses","garp");
x.t("uses","gvrp");
x.t("uses","number");
x.t("uses","fifo");
x.t("implemented","features");
x.t("implemented","switch");
x.t("line","parameter");
x.t("line","equivalent");
x.t("line","configuration");
x.t("shows","spanning");
x.t("shows","functionality");
x.t("shows","switch");
x.t("shows","general");
x.t("switch-port-path-cost","optional");
x.t("switch-port-path-cost","configure");
x.t("support","vlan");
x.t("support","point");
x.t("register","de-register");
x.t("state","total");
x.t("state","switch");
x.t("state","machines");
x.t("interface","switch-queue-statistics");
x.t("interface","address");
x.t("interface","node");
x.t("interface","switch-scheduler-statistics");
x.t("interface","instances");
x.t("interface","switch-port-statistics");
x.t("interface","faults");
x.t("interface","bandwidth");
x.t("interface","mac-layer-statistics");
x.t("10000000000","bytes");
x.t("aged","total");
x.t("aged","switch");
x.t("hit","ratio");
x.t("leave","empty");
x.t("leave","messages");
x.t("leave","transmitted");
x.t("leave","received");
x.t("basic","filtering");
x.t("type","manual");
x.t("aging","time");
x.t("switch-port-edge","ends");
x.t("switch-port-edge","optional");
x.t("2.1.4.1","configuring");
x.t("forwarded","total");
x.t("forwarded","directly");
x.t("forwarded","switch");
x.t("sample","scenarios");
x.t("time","switch-port-path-cost");
x.t("time","bpdus");
x.t("time","range");
x.t("time","forward");
x.t("time","node");
x.t("time","stp");
x.t("time","along");
x.t("time","dynamic");
x.t("time","defined");
x.t("time","generation");
x.t("switch-max-age","stp");
x.t("switch-max-age","optional");
x.t("2.1.4.2","configuring");
x.t("re-computation","different");
x.t("sections","developer");
x.t("multiple","4096");
x.t("multiple","nearest");
x.t("multiple","priority");
x.t("multiple","used");
x.t("multiple","lan");
x.t("however","supported");
x.t("however","port");
x.t("force-true","force-false");
x.t("2.1.4.3","configuring");
x.t("2.1.4.3","2.1.5");
x.t("total","frames");
x.t("total","number");
x.t("unknown","vlan");
x.t("mac","protocols");
x.t("mac","layer");
x.t("mac","802.3");
x.t("mac","switch");
x.t("mac","models");
x.t("mac","global");
x.t("mac","protocol");
x.t("networks","(vlans)");
x.t("networks","multiple");
x.t("networks","1998");
x.t("queue","size");
x.t("queue","strict");
x.t("queue","node");
x.t("queue","appropriate");
x.t("queue","switch-cpu-queue-size");
x.t("queue","global");
x.t("queue","based");
x.t("queue","statistics");
x.t("queue","switch-backplane-throughput");
x.t("limitations","none");
x.t("limitations","detailed");
x.t("relay","ports");
x.t("relay","frames");
x.t("default","20s");
x.t("default","500");
x.t("default","32768");
x.t("default","path");
x.t("default","manual");
x.t("default","enables");
x.t("default","300s");
x.t("default","auto");
x.t("default","unit");
x.t("default","640000");
x.t("default","specifies");
x.t("default","15s");
x.t("default","switch");
x.t("default","150000");
x.t("default","value");
x.t("default","note");
x.t("default","128");
x.t("500","specifies");
x.t("listed","table");
x.t("2.1.4.4","configure");
x.t("lans","2.1.2.2");
x.t("lans","allow");
x.t("lans","different");
x.t("garp","generic");
x.t("garp","applicant/registrar");
x.t("garp","gvrp");
x.t("garp","local");
x.t("garp","vlan");
x.t("access","control");
x.t("access","links");
x.t("link","default");
x.t("link","mac");
x.t("link","common");
x.t("link","supported");
x.t("link","802.3");
x.t("link","node");
x.t("link","n8-1.0");
x.t("spanning","tree");
x.t("spanning","trees");
x.t("loop","free");
x.t("single","rapid");
x.t("single","broadcast");
x.t("modeled","switch");
x.t("details","configuring");
x.t("details","2.1.5.3");
x.t("2.1.4.5","configuring");
x.t("frame","format");
x.t("command","line");
x.t("size","cpu");
x.t("size","input");
x.t("size","node");
x.t("size","output");
x.t("includes","several");
x.t("standards","ieee");
x.t("standards","allow");
x.t("upper","layer");
x.t("upper","layers");
x.t("list","default");
x.t("list","auto");
x.t("list","end");
x.t("file","end");
x.t("file","database");
x.t("file","qualifier");
x.t("file","statistics");
x.t("1000000s","default");
x.t("cpu","queue");
x.t("rapid","spanning");
x.t("found","number");
x.t("strict","priority");
x.t("parallel","stp");
x.t("amendment","2:rapid");
x.t("amendment","vlan");
x.t("amendment","technical");
x.t("amendment","2001");
x.t("transparent","upper");
x.t("network","technologies");
x.t("network","loop");
x.t("network","identifiers");
x.t("network","gvrp");
x.t("network","topology");
x.t("network","(lan)");
x.t("network","2.1.7");
x.t("network","attached");
x.t("network","maps");
x.t("network","subnet");
x.t("network","devices");
x.t("permitted","using");
x.t("32768","specifies");
x.t("nearest","multiple");
x.t("nearest","value");
x.t("bpdus","root");
x.t("bpdus","node");
x.t("bpdus","received");
x.t("bpdus","switch-forward-delay");
x.t("bpdus","sent");
x.t("entry","flushed");
x.t("entry","aged");
x.t("entry","aging");
x.t("entry","inserted");
x.t("entry","deleted");
x.t("guide","details");
x.t("check","box");
x.t("de-register","attributes");
x.t("features","none");
x.t("features","conformance");
x.t("features","omitted");
x.t("features","assumptions");
x.t("large","enough");
x.t("configuring","spanning");
x.t("configuring","vlan");
x.t("configuring","switch");
x.t("configuring","stp");
x.t("configuring","general");
x.t("configuring","statistics");
x.t("1998","ieee");
x.t("buffering","port");
x.t("2-1","shows");
x.t("2-1","switch");
x.t("2-1","general");
x.t("queues","switch-input-queue-size");
x.t("queues","switch-output-queue-size");
x.t("queues","node");
x.t("counts","node");
x.t("directly","total");
x.t("directly","switch");
x.t("delivered","upper");
x.t("learning","state");
x.t("bridges","amendment");
x.t("bridges","1998");
x.t("2:rapid","reconfiguration");
x.t("common","practice");
x.t("range","default");
x.t("range","240");
x.t("range","30s");
x.t("range","10000");
x.t("range","61440");
x.t("range","10s");
x.t("range","40s");
x.t("range","9999");
x.t("2-2","shows");
x.t("2-2","configuring");
x.t("2-2","stp");
x.t("2-2","switch-run-gvrp");
x.t("forward","delay");
x.t("path","cost");
x.t("box","labeled");
x.t("functionality","spanning");
x.t("functionality","gvrp");
x.t("functionality","vlan");
x.t("stp/sample1","shows");
x.t("identifiers","addresses");
x.t("addresses","every");
x.t("conversion","frame");
x.t("manual","default");
x.t("manual","switch-database-max-entries");
x.t("manual","switch");
x.t("switch-database-max-entries","database");
x.t("switch-database-max-entries","optional");
x.t("enables","backplane");
x.t("enables","scheduler");
x.t("enables","mac");
x.t("enables","database");
x.t("enables","output");
x.t("enables","port");
x.t("follows","single");
x.t("240","default");
x.t("2-3","command");
x.t("2-3","configuring");
x.t("2-3","figure");
x.t("ends","point-to-point");
x.t("performance","single");
x.t("stp/sample2","shows");
x.t("references","ieee");
x.t("virtual","bridged");
x.t("virtual","local");
x.t("virtual","lan");
x.t("cover","interfaces");
x.t("bytes","default");
x.t("bytes","specifies");
x.t("limit","number");
x.t("perform","following");
x.t("dependent","parameters");
x.t("2-4","command");
x.t("2-4","configuring");
x.t("2-4","figure");
x.t("/scenarios/multimedia_enterprise/mac-switch","table");
x.t("part","media");
x.t("part","3:media");
x.t("reconfiguration","2001");
x.t("2.1.2.1","implemented");
x.t("filtering","total");
x.t("filtering","switch");
x.t("filtering","service");
x.t("none","2.1.2.3");
x.t("none","2.1.3");
x.t("parameters","table");
x.t("parameters","2.1.4.2");
x.t("parameters","listed");
x.t("parameters","perform");
x.t("parameters","input");
x.t("parameters","gui");
x.t("parameters","detailed");
x.t("parameters","enable");
x.t("parameters","configure");
x.t("parameters","described");
x.t("parameters","statistics");
x.t("2-5","command");
x.t("2-5","configuring");
x.t("2-5","figure");
x.t("classification","protocol");
x.t("standard","802.1d");
x.t("standard","toolset");
x.t("standard","802.1q");
x.t("standard","802.1t");
x.t("standard","802.1u");
x.t("standard","802.1v");
x.t("standard","802.1w");
x.t("generic","attribute");
x.t("generic","vlan");
x.t("area","networks");
x.t("area","network");
x.t("determine","loop-free");
x.t("2.1.2.2","omitted");
x.t("switch-input-queue-size","output");
x.t("switch-input-queue-size","optional");
x.t("switch-input-queue-size","port");
x.t("2-15","mac-layer-statistics");
x.t("2-6","command");
x.t("2-6","figure");
x.t("802","lans");
x.t("segments","transparent");
x.t("segments","permitted");
x.t("segments","subnet");
x.t("basis","geographic");
x.t("applicant/registrar","state");
x.t("allows","network");
x.t("2.1.2.3","assumptions");
x.t("address","example");
x.t("address","specifies");
x.t("address","port");
x.t("address","maps");
x.t("address","note");
x.t("300s","specifies");
x.t("2-7","command");
x.t("respective","statistics");
x.t("allow","mac");
x.t("allow","lans");
x.t("allow","connected");
x.t("gvrp","gvrp/sample2");
x.t("gvrp","create");
x.t("gvrp","enabled");
x.t("gvrp","garp");
x.t("gvrp","parallel");
x.t("gvrp","parameters");
x.t("gvrp","vlan");
x.t("gvrp","conforms");
x.t("gvrp","applicable");
x.t("gvrp","protocol");
x.t("gvrp","statistics");
x.t("local","area");
x.t("record","list");
x.t("sets","switched");
x.t("untagged","member");
x.t("filtering/learning","database");
x.t("implies","backplane");
x.t("2-8","lists");
x.t("2-8","detailed");
x.t("empty","messages");
x.t("empty","transmitted");
x.t("empty","received");
x.t("attribute","registration");
x.t("procedures","end");
x.t("ports","refer");
x.t("ports","currently");
x.t("ports","table");
x.t("ports","switch");
x.t("ports","port");
x.t("ports","end-stations");
x.t("ports","including");
x.t("three","lan");
x.t("mask","cover");
x.t("input","queue");
x.t("input","switch");
x.t("input","value");
x.t("input","port");
x.t("switch-database-ageing-time","optional");
x.t("(stp)","parameters");
x.t("(stp)","configure");
x.t("(stp)","run");
x.t("device","properties");
x.t("device","detailed");
x.t("device","devices");
x.t("addition","file");
x.t("addition","statistics");
x.t("2-9","lists");
x.t("2-9","detailed");
x.t("sub-directory","scenario");
x.t("performance/sample1","shows");
x.t("vlan","vlan/sample2");
x.t("vlan","total");
x.t("vlan","garp");
x.t("vlan","access");
x.t("vlan","virtual");
x.t("vlan","parameters");
x.t("vlan","classification");
x.t("vlan","aware");
x.t("vlan","switch");
x.t("vlan","registration");
x.t("vlan","multicast");
x.t("vlan","configuration");
x.t("vlan","following");
x.t("vlan","member");
x.t("geographic","location");
x.t("reachability","tree");
x.t("auto","force-true");
x.t("auto","manual");
x.t("auto","means");
x.t("auto","specifies");
x.t("auto","mapping");
x.t("divided","interface");
x.t("performance/sample2","shows");
x.t("frames","flooded");
x.t("frames","forwarded");
x.t("frames","spanning");
x.t("frames","delivered");
x.t("frames","ports");
x.t("frames","vlan");
x.t("frames","received");
x.t("frames","dropped");
x.t("supported","mac");
x.t("supported","link");
x.t("supported","detailed");
x.t("supported","switched");
x.t("collect","additional");
x.t("collect","port");
x.t("30s","default");
x.t("configured","port");
x.t("point","point");
x.t("point","connectivity");
x.t("equivalent","switch");
x.t("equivalent","stp");
x.t("equivalent","statistics");
x.t("config","bpdus");
x.t("conformance","mac");
x.t("1.0","connected");
x.t("1.0","subnet");
x.t("syntax","uses");
x.t("mapped","interface");
x.t("delay","switch-run-stp");
x.t("delay","node");
x.t("delay","switch-hold-count");
x.t("hold","counts");
x.t("domain","performance/sample2");
x.t("domain","nodes");
x.t("domain","created");
x.t("unit","bytes");
x.t("unit","bps");
x.t("switch-run-stp","maximum");
x.t("switch-run-stp","optional");
x.t("means","link");
x.t("messages","transmitted");
x.t("messages","received");
x.t("media","access");
x.t("802.1","standards");
x.t("control","virtual");
x.t("control","(mac)");
x.t("number","leave");
x.t("number","list");
x.t("number","entry");
x.t("number","large");
x.t("number","address");
x.t("number","frames");
x.t("number","config");
x.t("number","database");
x.t("number","broadcast");
x.t("number","dynamic");
x.t("number","output");
x.t("number","bpdu");
x.t("number","join");
x.t("number","rst");
x.t("number","integer");
x.t("number","lru");
x.t("number","entries");
x.t("number","unicast");
x.t("cost","node");
x.t("cost","200000000");
x.t("cost","port");
x.t("10000","divided");
x.t("10000","2147483647");
x.t("gui","parameter");
x.t("gui","switch");
x.t("gui","configuration");
x.t("2012","scalable");
x.t("enough","mask");
x.t("maximum","age");
x.t("maximum","number");
x.t("640000","unit");
x.t("better","highest");
x.t("2147483647","default");
x.t("switch-port-point-to-point","2.1.4.5");
x.t("switch-port-point-to-point","optional");
x.t("different","mac");
x.t("different","spanning");
x.t("conforms","ieee");
x.t("exchange","vlan");
x.t("802.3","relay");
x.t("802.3","link");
x.t("may","used");
x.t("switch-port-map","optional");
x.t("specifies","backplane");
x.t("specifies","interface");
x.t("specifies","aging");
x.t("specifies","time");
x.t("specifies","spanning");
x.t("specifies","size");
x.t("specifies","path");
x.t("specifies","limit");
x.t("specifies","number");
x.t("specifies","maximum");
x.t("specifies","switch");
x.t("specifies","hello");
x.t("specifies","port");
x.t("specifies","priority");
x.t("switch-database-aging-time","switch-database-ageing-time");
x.t("switch-database-aging-time","database");
x.t("editor","table");
x.t("editor","ports");
x.t("editor","switch");
x.t("editor","port");
x.t("2.1.5.1","file");
x.t("detailed","switch");
x.t("vlans","currently");
x.t("scenario","description");
x.t("scenario","having");
x.t("scenario","located");
x.t("scenario","configuration");
x.t("scenario","statistics");
x.t("aware","switches");
x.t("switch-database-statistics","backplane");
x.t("switch-database-statistics","optional");
x.t("2.1.5.2","database");
x.t("section","describes");
x.t("section","2.1.4.3");
x.t("section","1.2.1.1");
x.t("section","1.2.1.3");
x.t("section","4.2.9");
x.t("section","2.3");
x.t("format","required");
x.t("format","used");
x.t("15s","specifies");
x.t("2.1.5.3","dynamic");
x.t("directory","qualnet_home");
x.t("switch","properties");
x.t("switch","backplane");
x.t("switch","improve");
x.t("switch","scheduler");
x.t("switch","uses");
x.t("switch","hit");
x.t("switch","leave");
x.t("switch","switch-max-age");
x.t("switch","multiple");
x.t("switch","queue");
x.t("switch","modeled");
x.t("switch","parameters");
x.t("switch","gvrp");
x.t("switch","ports");
x.t("switch","device");
x.t("switch","auto");
x.t("switch","frames");
x.t("switch","config");
x.t("switch","number");
x.t("switch","2.1.5.2");
x.t("switch","scope");
x.t("switch","node");
x.t("switch","thus");
x.t("switch","value");
x.t("switch","broadcast");
x.t("switch","stp");
x.t("switch","switched");
x.t("switch","join");
x.t("switch","port");
x.t("switch","rst");
x.t("switch","priority");
x.t("switch","model");
x.t("switch","connect");
x.t("switch","general");
x.t("switch","statistics");
x.t("switch","unicast");
x.t("participate","dynamic");
x.t("omitted","features");
x.t("scope","parameter");
x.t("scope","list");
x.t("scope","gui");
x.t("scope","instances");
x.t("scope","global");
x.t("scope","note");
x.t("node","switch-priority");
x.t("node","switch-queue-num-priorities");
x.t("node","switch-queue-statistics");
x.t("node","switch-port-path-cost");
x.t("node","interface");
x.t("node","switch-port-edge");
x.t("node","time");
x.t("node","switch-max-age");
x.t("node","list");
x.t("node","switch-database-max-entries");
x.t("node","switch-input-queue-size");
x.t("node","switch-run-stp");
x.t("node","switch-port-point-to-point");
x.t("node","switch-database-aging-time");
x.t("node","switch-database-statistics");
x.t("node","section");
x.t("node","switch-output-queue-size");
x.t("node","switch-scheduler-statistics");
x.t("node","switch-hold-count");
x.t("node","100");
x.t("node","switch-hello-time");
x.t("node","switch-port-statistics");
x.t("node","switch-port-priority");
x.t("node","switch-forward-delay");
x.t("node","switch-cpu-queue-size");
x.t("node","integer");
x.t("node","real");
x.t("node","switch-backplane-statistics");
x.t("node","subnet");
x.t("node","levels");
x.t("node","switch-backplane-throughput");
x.t("switch-output-queue-size","size");
x.t("switch-output-queue-size","optional");
x.t("switch-output-queue-size","note");
x.t("switch-scheduler-statistics","queue");
x.t("switch-scheduler-statistics","switch");
x.t("switch-scheduler-statistics","optional");
x.t("qualnet_home","/scenarios/multimedia_enterprise/mac-switch");
x.t("connected","lans");
x.t("connected","ports");
x.t("connected","port");
x.t("connected","lan");
x.t("registration","process");
x.t("registration","protocol");
x.t("end","stations");
x.t("end","simulation");
x.t("end","station");
x.t("enable","relay");
x.t("enable","mac");
x.t("enable","detailed");
x.t("1.2.1.1","description");
x.t("scenarios","included");
x.t("scenarios","detailed");
x.t("scenarios","located");
x.t("steps","switch");
x.t("technical","editorial");
x.t("corrections","january");
x.t("corrections","2001");
x.t("2.1.1","description");
x.t("thus","record");
x.t("machines","apply");
x.t("level","switches");
x.t("switch-hold-count","2.1.4.3");
x.t("switch-hold-count","optional");
x.t("statistic","description");
x.t("located","table");
x.t("located","directory");
x.t("802.1d","ieee");
x.t("802.1d","part");
x.t("802.1d","note");
x.t("stations","switches");
x.t("given","time");
x.t("topology","called");
x.t("2.1.2","features");
x.t("100","link");
x.t("100","following");
x.t("100","subnet");
x.t("100","thru");
x.t("1.2.1.3","description");
x.t("database","switch-queue-num-priorities");
x.t("database","tables");
x.t("database","entry");
x.t("database","switch-database-aging-time");
x.t("database","specific");
x.t("database","dynamic");
x.t("database","statistics");
x.t("database","entries");
x.t("database","user\u2019s");
x.t("lower","value");
x.t("editorial","corrections");
x.t("qualnet","detailed");
x.t("qualnet","scenario");
x.t("qualnet","qualnet");
x.t("qualnet","distribution");
x.t("qualnet","two");
x.t("qualnet","statistics");
x.t("qualnet","user\u2019s");
x.t("assumptions","limitations");
x.t("assumptions","section");
x.t("2.1.3","command");
x.t("150000","unit");
x.t("greater","10000000000");
x.t("multicast","network");
x.t("january","2002");
x.t("61440","default");
x.t("switch-hello-time","forward");
x.t("switch-hello-time","optional");
x.t("taken","switch-port-point-to-point");
x.t("force-false","default");
x.t("2.1.4","gui");
x.t("collected","global");
x.t("collected","port");
x.t("4.2.9","qualnet");
x.t("layers","detailed");
x.t("brief","description");
x.t("(lan)","protocol");
x.t("configuration","section");
x.t("configuration","enable");
x.t("configuration","data");
x.t("configuration","information");
x.t("configuration","(.config)");
x.t("include","following");
x.t("switch-port-mapping-type","type");
x.t("switch-port-mapping-type","optional");
x.t("instances","port");
x.t("10s","default");
x.t("10s","1000000s");
x.t("2.1.5","statistics");
x.t("facilitates","control");
x.t("value","parameter");
x.t("value","description");
x.t("value","table");
x.t("value","multiple");
x.t("value","auto");
x.t("value","taken");
x.t("value","200000000");
x.t("value","bps");
x.t("value","priority");
x.t("value","based");
x.t("value","used");
x.t("additional","statistics");
x.t("interval","node");
x.t("2.1.6","scenarios");
x.t("3:media","access");
x.t("implementation","follows");
x.t("implementation","gvrp");
x.t("implementation","based");
x.t("developer","model");
x.t("declaration","global");
x.t("specific","root");
x.t("specific","parameters");
x.t("specific","port");
x.t("specific","statistics");
x.t("free","parameter");
x.t("figure","2-1");
x.t("figure","2-2");
x.t("figure","2-3");
x.t("figure","2-4");
x.t("figure","2-5");
x.t("several","sample");
x.t("2.1.7","references");
x.t("broadcast","frames");
x.t("broadcast","domain");
x.t("process","implementation");
x.t("stp","table");
x.t("stp","time");
x.t("stp","bpdus");
x.t("stp","perform");
x.t("stp","dependent");
x.t("stp","parameters");
x.t("stp","performance/sample1");
x.t("stp","node");
x.t("stp","stp");
x.t("stp","bpdu");
x.t("stp","port");
x.t("stp","run");
x.t("stp","statistics");
x.t("transmitted","number");
x.t("transmitted","switch");
x.t("models","implemented");
x.t("models","mac");
x.t("models","supported");
x.t("models","2.1");
x.t("considered","broadcast");
x.t("switch-run-gvrp","optional");
x.t("switch-port-statistics","scheduler");
x.t("switch-port-statistics","switch");
x.t("switch-port-statistics","optional");
x.t("hello","time");
x.t("hello","interval");
x.t("distribution","includes");
x.t("location","considered");
x.t("along","attributes");
x.t("dynamic","application");
x.t("dynamic","statistics");
x.t("dynamic","entries");
x.t("larger","network");
x.t("loop-free","route");
x.t("output","queue");
x.t("output","queues");
x.t("output","statistics");
x.t("applicable","vlan");
x.t("nodes","full");
x.t("data","allows");
x.t("information","frames");
x.t("information","devices");
x.t("optional","scope");
x.t("200000000","else");
x.t("200000000","10000");
x.t("attached","point-to-point");
x.t("attached","lan");
x.t("configure","detailed");
x.t("configure","switch");
x.t("configure","stp");
x.t("configure","general");
x.t("configure","edge");
x.t("toolset","figure");
x.t("discard","state");
x.t("inserted","total");
x.t("inserted","switch");
x.t("(mac)","bridges");
x.t("p802.1y/d2","ieee");
x.t("p802.1y/d2","media");
x.t("defined","participants");
x.t("switched","networks");
x.t("switched","network");
x.t("switched","ports");
x.t("appropriate","properties");
x.t("appropriate","sections");
x.t("practice","non-switch");
x.t("bpdu","transmits");
x.t("bpdu","hold");
x.t("bpdu","hello");
x.t("switch-port-priority","optional");
x.t("switch-port-priority","port");
x.t("toolbar","2.1.4.1");
x.t("toolbar","standard");
x.t("received","total");
x.t("received","unknown");
x.t("received","number");
x.t("received","switch");
x.t("faults","result");
x.t("result","re-computation");
x.t("application","registration");
x.t("suffices","port");
x.t("highest","priority");
x.t("generation","bpdus");
x.t("switch-forward-delay","maximum");
x.t("switch-forward-delay","optional");
x.t("join","empty");
x.t("join","messages");
x.t("join","transmitted");
x.t("join","received");
x.t("maps","workstations");
x.t("maps","switch");
x.t("called","reachability");
x.t("specification","defines");
x.t("port","needs");
x.t("port","switch-queue-statistics");
x.t("port","interface");
x.t("port","support");
x.t("port","however");
x.t("port","default");
x.t("port","path");
x.t("port","parameters");
x.t("port","respective");
x.t("port","vlan");
x.t("port","collect");
x.t("port","number");
x.t("port","switch");
x.t("port","node");
x.t("port","specific");
x.t("port","stp");
x.t("port","attached");
x.t("port","switched");
x.t("port","port");
x.t("port","global");
x.t("port","note");
x.t("port","priority");
x.t("port","based");
x.t("port","switch-backplane-statistics");
x.t("port","statistics");
x.t("port","2001");
x.t("port","bandwidth");
x.t("global","node");
x.t("switch-cpu-queue-size","input");
x.t("switch-cpu-queue-size","optional");
x.t("bps","implies");
x.t("bps","specifies");
x.t("described","section");
x.t("rst","bpdus");
x.t("802.1q","ieee");
x.t("802.1q","virtual");
x.t("802.1q","specification");
x.t("protocol","defines");
x.t("protocol","support");
x.t("protocol","generic");
x.t("protocol","gvrp");
x.t("protocol","(stp)");
x.t("protocol","configured");
x.t("protocol","scenario");
x.t("protocol","connected");
x.t("protocol","facilitates");
x.t("protocol","models");
x.t("protocol","port");
x.t("subset","network");
x.t("note","parameter");
x.t("note","default");
x.t("note","garp");
x.t("note","gvrp");
x.t("note","syntax");
x.t("note","specifies");
x.t("note","section");
x.t("note","lower");
x.t("note","stp");
x.t("note","port");
x.t("two","mac");
x.t("two","models");
x.t("priority","scheduler");
x.t("priority","queue");
x.t("priority","input");
x.t("priority","better");
x.t("priority","switch");
x.t("priority","node");
x.t("priority","switch-hello-time");
x.t("priority","2.1.4");
x.t("priority","value");
x.t("priority","information");
x.t("n8-1.0","100");
x.t("integer","range");
x.t("based","ieee");
x.t("based","computation");
x.t("based","buffering");
x.t("based","vlans");
x.t("based","following");
x.t("based","bandwidth");
x.t("algorithm","determine");
x.t("40s","default");
x.t("connectivity","switch-port-edge");
x.t("created","switches");
x.t("reached","given");
x.t("mapping","may");
x.t("real","range");
x.t("order","collect");
x.t("switch-backplane-statistics","cpu");
x.t("switch-backplane-statistics","optional");
x.t("model","library");
x.t("model","parameter");
x.t("model","enters");
x.t("model","uses");
x.t("model","mac");
x.t("model","2.1.2.1");
x.t("model","gui");
x.t("model","2.1.5.1");
x.t("model","section");
x.t("model","switch-scheduler-statistics");
x.t("model","scenarios");
x.t("model","qualnet");
x.t("model","collected");
x.t("model","include");
x.t("model","2.1.6");
x.t("model","implementation");
x.t("model","based");
x.t("model","2.1");
x.t("2.1","detailed");
x.t("following","parameter");
x.t("following","link");
x.t("following","standards");
x.t("following","steps");
x.t("following","brief");
x.t("802.1t","ieee");
x.t("802.1t","part");
x.t("draft","p802.1y/d2");
x.t("end-stations","participate");
x.t("tagging","frames");
x.t("links","note");
x.t("service","enable");
x.t("subnet","interface");
x.t("subnet","link");
x.t("subnet","address");
x.t("subnet","1.0");
x.t("subnet","n8-1.0");
x.t("used","parameter");
x.t("used","switch-port-map");
x.t("used","note");
x.t("used","specify");
x.t("run","stp");
x.t("run","switched");
x.t("run","note");
x.t("simulation","table");
x.t("loops","stp/sample2");
x.t("802.1u","ieee");
x.t("802.1u","amendment");
x.t("connect","802");
x.t("qualifier","switch");
x.t("qualifier","scope");
x.t("using","network");
x.t("general","parameters");
x.t("general","switch");
x.t("general","run");
x.t("general","general");
x.t("dropped","backplane");
x.t("dropped","ingress");
x.t("dropped","total");
x.t("dropped","learning");
x.t("dropped","switch");
x.t("dropped","discard");
x.t("dropped","received");
x.t("802.1v","amendment");
x.t("802.1v","2.1.1");
x.t("route","connected");
x.t("thru","note");
x.t("statistics","table");
x.t("statistics","various");
x.t("statistics","enabled");
x.t("statistics","scheduler");
x.t("statistics","total");
x.t("statistics","mac");
x.t("statistics","queue");
x.t("statistics","spanning");
x.t("statistics","check");
x.t("statistics","parameters");
x.t("statistics","addition");
x.t("statistics","frames");
x.t("statistics","supported");
x.t("statistics","number");
x.t("statistics","detailed");
x.t("statistics","switch-database-statistics");
x.t("statistics","section");
x.t("statistics","node");
x.t("statistics","statistic");
x.t("statistics","database");
x.t("statistics","specific");
x.t("statistics","switch-port-statistics");
x.t("statistics","output");
x.t("statistics","dynamic");
x.t("statistics","join");
x.t("statistics","port");
x.t("statistics","rst");
x.t("statistics","(.stat)");
x.t("128","specifies");
x.t("2.3","details");
x.t("levels","section");
x.t("(.stat)","file");
x.t("lru","entry");
x.t("lru","entries");
x.t("deleted","total");
x.t("deleted","switch");
x.t("2001","ieee");
x.t("2001","2008");
x.t("802.1w","ieee");
x.t("802.1w","part");
x.t("802.1w","specific");
x.t("member","covers");
x.t("member","sets");
x.t("fifo","queue");
x.t("9999","default");
x.t("2002","ieee");
x.t("including","conversion");
x.t("(.config)","file");
x.t("bandwidth","however");
x.t("bandwidth","range");
x.t("bandwidth","stp/sample1");
x.t("bandwidth","greater");
x.t("bandwidth","protocol");
x.t("point-to-point","link");
x.t("edge","port");
x.t("labeled","mac");
x.t("station","switch");
x.t("entries","flushed");
x.t("entries","searched");
x.t("entries","aged");
x.t("entries","found");
x.t("entries","filtering/learning");
x.t("entries","node");
x.t("entries","inserted");
x.t("entries","deleted");
x.t("sent","total");
x.t("sent","switch");
x.t("lan","segments");
x.t("lan","local");
x.t("lan","switch-port-priority");
x.t("attributes","network");
x.t("attributes","subset");
x.t("devices","create");
x.t("devices","toolbar");
x.t("devices","dynamically");
x.t("dynamically","exchange");
x.t("specify","three");
x.t("specify","priority");
x.t("switch-backplane-throughput","backplane");
x.t("switch-backplane-throughput","optional");
x.t("mac-layer-statistics","switch");
x.t("mac-layer-statistics","optional");
x.t("user\u2019s","guide");
x.t("unicast","frames");
x.t("ratio","number");
x.t("ratio","ratio");
}
