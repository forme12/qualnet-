function FileData_Pairs(x)
{
x.t("included","default");
x.t("included","router");
x.t("included","route");
x.t("interfaces","add-route-map");
x.t("tag","name");
x.t("tag","tested");
x.t("min","minimum");
x.t("min","max");
x.t("parameter","table");
x.t("parameter","command");
x.t("parameter","scope");
x.t("parameter","value");
x.t("parameter","router");
x.t("properties","editor");
x.t("properties","router");
x.t("defines","rules");
x.t("2008","2012");
x.t("lists","format");
x.t("lists","note");
x.t("scalable","network");
x.t("description","format");
x.t("description","router-config-file");
x.t("description","node");
x.t("description","route");
x.t("table","table");
x.t("table","6-11");
x.t("table","6-12");
x.t("table","6-13");
x.t("describes","configure");
x.t("describes","route");
x.t("node-id","node-id");
x.t("node-id","node");
x.t("required","criteria");
x.t("normal","forwarding");
x.t("action","commands");
x.t("action","(s)");
x.t("apply","interfaces");
x.t("apply","nodes");
x.t("line","parameter");
x.t("line","equivalent");
x.t("line","configuration");
x.t("6-11","describes");
x.t("6-11","route");
x.t("interface","name");
x.t("interface","number");
x.t("interface","type/");
x.t("interface","interface-list");
x.t("interface","interface-number");
x.t("interface","specification");
x.t("interface","packet");
x.t("interface","router");
x.t("6-12","note");
x.t("6-12","route");
x.t("examined","seq-num");
x.t("packets","action");
x.t("6-13","command");
x.t("default","interface");
x.t("default","device");
x.t("default","next");
x.t("default","next-hop");
x.t("default","value");
x.t("default","output");
x.t("500","700");
x.t("access","lists");
x.t("access","list");
x.t("element","description");
x.t("details","router");
x.t("precedence","precedence");
x.t("precedence","name");
x.t("precedence","number");
x.t("precedence","value");
x.t("precedence","filed");
x.t("command","included");
x.t("command","line");
x.t("command","interface");
x.t("command","default");
x.t("command","precedence");
x.t("command","match");
x.t("command","next-hop");
x.t("command","(s)");
x.t("command","route");
x.t("command","route-map");
x.t("passes","none");
x.t("address-list","address-list");
x.t("address-list","non-empty");
x.t("invoked","route");
x.t("file","table");
x.t("file","specified");
x.t("file","name");
x.t("file","parameters");
x.t("file","specifies");
x.t("file","format");
x.t("file","node");
x.t("file","case");
x.t("file","described");
x.t("file","router");
x.t("file","following");
x.t("file","using");
x.t("file","route");
x.t("file","route-map");
x.t("deny","filter");
x.t("list","interface");
x.t("list","access");
x.t("list","addresses");
x.t("list","numbers");
x.t("list","route");
x.t("list","names");
x.t("cisco","syntax");
x.t("filter","seq-num");
x.t("filter","permit");
x.t("filter","specification");
x.t("applies","packets");
x.t("network","technologies");
x.t("map-tag","filter");
x.t("map-tag","name");
x.t("configuring","route");
x.t("specified","action");
x.t("specified","scenario");
x.t("specified","match");
x.t("specified","note");
x.t("specified","router");
x.t("specified","route");
x.t("processed","specified");
x.t("name","normal");
x.t("name","examined");
x.t("name","precedence");
x.t("name","pairs");
x.t("name","sequence");
x.t("name","router");
x.t("name","associated");
x.t("addresses","default");
x.t("addresses","command");
x.t("addresses","next");
x.t("perform","following");
x.t("parameters","parameter");
x.t("parameters","table");
x.t("parameters","apply");
x.t("parameters","perform");
x.t("parameters","gui");
x.t("parameters","section");
x.t("parameters","configure");
x.t("parameters","including");
x.t("none","match");
x.t("further","route");
x.t("map","tag");
x.t("map","defines");
x.t("map","invoked");
x.t("map","list");
x.t("map","filter");
x.t("map","applies");
x.t("map","parameters");
x.t("map","map");
x.t("map","commands");
x.t("map","gui");
x.t("map","match");
x.t("map","added");
x.t("map","configuration");
x.t("map","specification");
x.t("map","model");
x.t("address","106");
x.t("address","list-of-acls");
x.t("address","following");
x.t("destination","following");
x.t("pairs","default");
x.t("pairs","examples");
x.t("lines","show");
x.t("defining","required");
x.t("defining","route");
x.t("sharing","name");
x.t("sharing","map");
x.t("device","properties");
x.t("lengths","addresses");
x.t("6.3.1","description");
x.t("commands","action");
x.t("commands","cisco");
x.t("commands","filter");
x.t("commands","specified");
x.t("commands","defining");
x.t("commands","match");
x.t("commands","met");
x.t("commands","router");
x.t("commands","elements");
x.t("commands","policy-based");
x.t("commands","specify");
x.t("6.3.2.1","6.3.2.1");
x.t("6.3.2.1","format");
x.t("6.3.2.1","figure");
x.t("configured","name");
x.t("192.168.2.3","6.3.3");
x.t("equivalent","router");
x.t("6.3","route");
x.t("6.3.2","command");
x.t("next","hop");
x.t("next","route");
x.t("syntax","precedence");
x.t("syntax","none");
x.t("minimum","packet");
x.t("6.3.3","gui");
x.t("node-identifer","node-id");
x.t("number","interface");
x.t("number","precedence");
x.t("number","specification");
x.t("number","route");
x.t("6.5","details");
x.t("type/","interface");
x.t("gui","parameter");
x.t("gui","configuring");
x.t("gui","configuration");
x.t("6.3.4","statistics");
x.t("2012","scalable");
x.t("seq-num","map-tag");
x.t("seq-num","sequence");
x.t("length","min");
x.t("length","500");
x.t("length","command");
x.t("length","max");
x.t("length","following");
x.t("max","min");
x.t("max","maximum");
x.t("maximum","packet");
x.t("adjacent","node");
x.t("specifies","commands");
x.t("hop","adjacent");
x.t("hop","route");
x.t("editor","node");
x.t("scenario","configuration");
x.t("section","describes");
x.t("section","6.3.2.1");
x.t("section","6.5");
x.t("section","1.2.1.3");
x.t("format","interface");
x.t("format","commands");
x.t("format","node-identifer");
x.t("format","match");
x.t("format","node");
x.t("format","used");
x.t("format","router");
x.t("format","route");
x.t("router-config-file","6.3.4");
x.t("router-config-file","optional");
x.t("filename","name");
x.t("match","command");
x.t("match","address");
x.t("match","commands");
x.t("match","length");
x.t("match","packet");
x.t("match","criteria");
x.t("scope","gui");
x.t("scope","global");
x.t("node","filename");
x.t("node","router-config-file");
x.t("node","node");
x.t("node","configuration");
x.t("node","output");
x.t("node","specification");
x.t("node","router");
x.t("added","using");
x.t("explicit","route");
x.t("src-route-3if0","permit");
x.t("steps","default");
x.t("add-route-map","command");
x.t("identifies","interface");
x.t("identifies","node");
x.t("1.2.1.3","description");
x.t("matches","criteria");
x.t("header","next");
x.t("header","following");
x.t("interface-list","interface-list");
x.t("interface-list","non-empty");
x.t("rules","conditions");
x.t("interface-number","interface");
x.t("interface-number","interface-number");
x.t("and/or","access");
x.t("next-hop","address-list");
x.t("next-hop","192.168.2.3");
x.t("next-hop","192.168.3.2");
x.t("collected","route");
x.t("configuration","file");
x.t("configuration","parameters");
x.t("configuration","commands");
x.t("configuration","section");
x.t("configuration","models");
x.t("configuration","router");
x.t("configuration","(.config)");
x.t("value","description");
x.t("value","header");
x.t("value","permit");
x.t("figure","6-3");
x.t("forwarding","algorithm");
x.t("106","next-hop");
x.t("models","6.3");
x.t("(s)","following");
x.t("(s)","performed");
x.t("load-share","permit");
x.t("policy-","based");
x.t("nodes","interface");
x.t("tested","route");
x.t("sequence","number");
x.t("output","interface");
x.t("show","examples");
x.t("specifying","router");
x.t("optional","included");
x.t("optional","match");
x.t("optional","scope");
x.t("met","normal");
x.t("met","next");
x.t("met","packet");
x.t("list-of-acls","list-of-acls");
x.t("list-of-acls","non-empty");
x.t("configure","route");
x.t("defined","following");
x.t("examples","route");
x.t("routing","defining");
x.t("routing","route");
x.t("case","insensitive");
x.t("filed","header");
x.t("maps","specified");
x.t("maps","sharing");
x.t("maps","6.3.1");
x.t("maps","configured");
x.t("maps","6.3");
x.t("maps","defined");
x.t("maps","router");
x.t("maps","route");
x.t("global","node");
x.t("described","table");
x.t("described","section");
x.t("specification","interface");
x.t("specification","element");
x.t("specification","node");
x.t("specification","add-route-map");
x.t("specification","identifies");
x.t("specification","optional");
x.t("permit","deny");
x.t("permit","filter");
x.t("permit","match");
x.t("permit","criteria");
x.t("note","action");
x.t("note","match");
x.t("note","entries");
x.t("192.168.3.2","route-map");
x.t("based","routing");
x.t("algorithm","used");
x.t("packet","processed");
x.t("packet","lengths");
x.t("packet","length");
x.t("packet","explicit");
x.t("packet","matches");
x.t("packet","following");
x.t("numbers","and/or");
x.t("router","properties");
x.t("router","access");
x.t("router","configuration");
x.t("used","parameter");
x.t("used","filter");
x.t("used","further");
x.t("following","command");
x.t("following","lines");
x.t("following","commands");
x.t("following","format");
x.t("following","steps");
x.t("elements","described");
x.t("insensitive","table");
x.t("model","2008");
x.t("using","following");
x.t("6-3","specifying");
x.t("route","passes");
x.t("route","map");
x.t("route","destination");
x.t("route","maps");
x.t("route","packet");
x.t("route","redistribution");
x.t("criteria","specified");
x.t("criteria","6.3.2");
x.t("criteria","route");
x.t("non-empty","list");
x.t("statistics","collected");
x.t("statistics","statistics");
x.t("policy-based","routing");
x.t("associated","route");
x.t("names","section");
x.t("performed","packet");
x.t("(.config)","file");
x.t("including","route");
x.t("conditions","route");
x.t("entries","router");
x.t("route-map","map-tag");
x.t("route-map","src-route-3if0");
x.t("route-map","load-share");
x.t("redistribution","policy-");
x.t("redistribution","router");
x.t("specify","action");
x.t("700","next-hop");
}
