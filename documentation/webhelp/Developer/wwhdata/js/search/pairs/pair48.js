function FileData_Pairs(x)
{
x.t("reply-process","reply-or-not");
x.t("reply-process","included");
x.t("reply-process","fragment-size");
x.t("reply-process","reply");
x.t("reply-process","node");
x.t("reply-process","enable");
x.t("reply-or-not","optional");
x.t("reply-or-not","reply-num");
x.t("included","parameter");
x.t("included","mdp");
x.t("included","precedence");
x.t("included","application");
x.t("included","note");
x.t("tos-value","tos-value");
x.t("tos-value","value");
x.t("tos-value","specify");
x.t("complex","boolean");
x.t("example","except");
x.t("enabling","multimedia");
x.t("enabling","video");
x.t("enabling","mdp");
x.t("enabling","voice");
x.t("enabling","application");
x.t("8.7.5.2","database");
x.t("parameter","reply-process");
x.t("parameter","included");
x.t("parameter","table");
x.t("parameter","delivery");
x.t("parameter","source");
x.t("parameter","video");
x.t("parameter","mdp");
x.t("parameter","mdp-profile");
x.t("parameter","default");
x.t("parameter","start");
x.t("parameter","command");
x.t("parameter","specified");
x.t("parameter","parameters");
x.t("parameter","request-data-rate");
x.t("parameter","voice");
x.t("parameter","scope");
x.t("parameter","enable");
x.t("parameter","broken");
x.t("parameter","multicast");
x.t("parameter","value");
x.t("parameter","usage");
x.t("parameter","application");
x.t("parameter","specification");
x.t("parameter","note");
x.t("parameter","priority");
x.t("parameter","mdp-enabled");
x.t("parameter","specify");
x.t("irrespective","request-interval");
x.t("irrespective","delivery-type");
x.t("notes","throughput");
x.t("notes","integer");
x.t("h.263","160");
x.t("h.263","mpeg1.m");
x.t("below","codec");
x.t("protocols","including");
x.t("properties","menu");
x.t("properties","editor");
x.t("latest","start");
x.t("8.7.5.3","dynamic");
x.t("receives","request");
x.t("continually","until");
x.t("melp","default");
x.t("melp","22.5");
x.t("five","items");
x.t("(request)","packets");
x.t("200","destination-port");
x.t("throughput","replies");
x.t("throughput","smoothed");
x.t("throughput","(bits/second)");
x.t("throughput","requests");
x.t("2008","2012");
x.t("data-rate","specified");
x.t("data-rate","optional");
x.t("data-rate","request-tos");
x.t("repeat-interval","time");
x.t("repeat-interval","repeat");
x.t("repeat-interval","no-of-repeats");
x.t("every","request");
x.t("multimedia","multimedia");
x.t("multimedia","traffic");
x.t("multimedia","n/a");
x.t("multimedia","configure");
x.t("multimedia","data");
x.t("multimedia","encoding-scheme");
x.t("multimedia","otherwise");
x.t("scalable","network");
x.t("description","source");
x.t("description","application-statistics");
x.t("description","format");
x.t("description","repetition");
x.t("description","super");
x.t("delivery","type");
x.t("table","table");
x.t("table","8-50");
x.t("table","8-51");
x.t("table","8-52");
x.t("table","8-53");
x.t("table","8-54");
x.t("table","8-55");
x.t("table","8-56");
x.t("table","8-57");
x.t("table","8-58");
x.t("table","8-59");
x.t("table","view");
x.t("table","8-40");
x.t("table","8-41");
x.t("table","8-42");
x.t("table","8-43");
x.t("table","8-44");
x.t("table","8-45");
x.t("table","8-46");
x.t("table","8-47");
x.t("table","8-48");
x.t("table","8-49");
x.t("table","8-60");
x.t("table","8-61");
x.t("table","8-62");
x.t("table","8-63");
x.t("sending","successive");
x.t("sending","first");
x.t("sending","seconds");
x.t("replies","packets");
x.t("replies","received");
x.t("replies","sent");
x.t("gap","ratio");
x.t("user-specified","ports");
x.t("describes","file");
x.t("describes","configure");
x.t("describes","super");
x.t("tracing","enabled");
x.t("tracing","parameters");
x.t("refer","chapter");
x.t("refer","section");
x.t("refer","qualnet");
x.t("dest","addr");
x.t("dest","port");
x.t("layer","models");
x.t("source","required");
x.t("source","source");
x.t("source","(destination)");
x.t("source","addresses");
x.t("source","destination");
x.t("source","8.7.2");
x.t("source","node");
x.t("source","addr");
x.t("source","multicast");
x.t("source","application");
x.t("source","port");
x.t("source","remaining");
x.t("related","parameters");
x.t("required","time");
x.t("required","list");
x.t("required","integer");
x.t("always","returns");
x.t("summarized","following");
x.t("doing","following");
x.t("enters","statistics");
x.t("various","scenario");
x.t("codec","codec");
x.t("codec","type");
x.t("codec","default");
x.t("codec","traffic");
x.t("codec","average");
x.t("codec","note");
x.t("codec","used");
x.t("codec","following");
x.t("codec","encoding");
x.t("1751","fragment");
x.t("1751","source-port");
x.t("qos","specification");
x.t("video","codec");
x.t("video","traffic");
x.t("video","dependent");
x.t("video","voice");
x.t("video","scheme");
x.t("video","transmitted");
x.t("user","user-specified");
x.t("user","explicitly");
x.t("enabled","application");
x.t("enabled","super");
x.t("0.5ms","100us");
x.t("160","h.263");
x.t("160","mpeg1.m");
x.t("160","g.729");
x.t("0.1","seconds");
x.t("tables","refer");
x.t("line","parameter");
x.t("line","equivalent");
x.t("line","configuration");
x.t("line","super");
x.t("fragment-size","200");
x.t("fragment-size","fragment-size");
x.t("fragment-size","fragment");
x.t("fragment-size","optional");
x.t("fragment-size","note");
x.t("fragment-size","source-port");
x.t("fragment-size","specify");
x.t("reply","reply-process");
x.t("reply","packets");
x.t("reply","fragments");
x.t("reply","bits");
x.t("reply","dependent");
x.t("reply","bytes");
x.t("reply","delay");
x.t("reply","fragment");
x.t("reply","packet");
x.t("until","connection");
x.t("until","talk");
x.t("last","reply");
x.t("last","size");
x.t("last","request");
x.t("last","multicast");
x.t("uses","mdp");
x.t("uses","default");
x.t("uses","user-defined");
x.t("uses","port");
x.t("uniform","start");
x.t("uniform","dependent");
x.t("uniform","distribution");
x.t("uniform","exponential");
x.t("uniform","uni");
x.t("g.728ar16","celp");
x.t("7500","mpeg2.m");
x.t("8-16","setting");
x.t("shows","dependent");
x.t("shows","super");
x.t("statement","application");
x.t("mode","parameter");
x.t("fragmented","fragments");
x.t("mdp","table");
x.t("mdp","enabled");
x.t("mdp","uses");
x.t("mdp","mdp-profile");
x.t("mdp","dependent");
x.t("mdp","parameters");
x.t("mdp","profile");
x.t("mdp","enable");
x.t("mdp","configuration");
x.t("mdp","figure");
x.t("mdp","values");
x.t("mdp","otherwise");
x.t("mdp","mdp-enabled");
x.t("support","trigger");
x.t("g.726ar24","g.728ar16");
x.t("::=","expr");
x.t("8-17","setting");
x.t("responses","supported");
x.t("type","video");
x.t("type","type");
x.t("type","listed");
x.t("type","traffic");
x.t("type","specified");
x.t("type","voice");
x.t("type","8.7.3");
x.t("type","service");
x.t("type","following");
x.t("type","delivery-type");
x.t("retry","parameters");
x.t("times","entire");
x.t("open","super");
x.t("8-18","setting");
x.t("packets","reply-process");
x.t("packets","reply");
x.t("packets","response");
x.t("packets","dscp");
x.t("packets","precedence");
x.t("packets","fragments");
x.t("packets","tos");
x.t("packets","specified");
x.t("packets","dependent");
x.t("packets","request");
x.t("packets","travel");
x.t("packets","node");
x.t("packets","send");
x.t("packets","received");
x.t("packets","encoding-scheme");
x.t("packets","note");
x.t("packets","123");
x.t("packets","priority");
x.t("packets","real");
x.t("packets","140");
x.t("packets","sent");
x.t("whereas","response");
x.t("whereas","node");
x.t("response","packets");
x.t("response","request");
x.t("response","packet");
x.t("response","sent");
x.t("request-interval","request-interval");
x.t("request-interval","request-size");
x.t("request-interval","det");
x.t("request-interval","request-data-rate");
x.t("request-interval","optional");
x.t("request-interval","priority");
x.t("inter-reply-time","optional");
x.t("inter-reply-time","reply-tos");
x.t("mdp-profile","included");
x.t("mdp-profile","profile-1");
x.t("mdp-profile","setting");
x.t("mdp-profile","profile-name");
x.t("time","8.7.5.2");
x.t("time","five");
x.t("time","throughput");
x.t("time","2008");
x.t("time","reply");
x.t("time","det-val");
x.t("time","wait");
x.t("time","dependent");
x.t("time","average");
x.t("time","session");
x.t("time","parameters");
x.t("time","sends");
x.t("time","destination");
x.t("time","second");
x.t("time","request");
x.t("time","voice");
x.t("time","uni-val-1");
x.t("time","uni-val-2");
x.t("time","first");
x.t("time","distributions");
x.t("time","exp-val");
x.t("time","expires");
x.t("time","greater");
x.t("time","till");
x.t("time","distribution");
x.t("time","values");
x.t("time","two");
x.t("time","super");
x.t("time","ratio");
x.t("fragmentation","fragment-size");
x.t("fragmentation","dependent");
x.t("fragmentation","parameters");
x.t("fragmentation","occurs");
x.t("fragmentation","takes");
x.t("explicitly","specify");
x.t("establishment","tried");
x.t("37500","g.711");
x.t("expr","::=");
x.t("expr","expr");
x.t("expr","condition");
x.t("expr","xor");
x.t("8-19","setting");
x.t("two-way","flow");
x.t("node's","address");
x.t("connection","retry");
x.t("connection","establishment");
x.t("connection","specified");
x.t("connection","node");
x.t("connection","client");
x.t("connection","established");
x.t("connection","integer");
x.t("i.e","tcp");
x.t("i.e","delivery-type");
x.t("reuest-size","request-interval");
x.t("rate","request");
x.t("rate","note");
x.t("rate","corresponding");
x.t("multiple","fragments");
x.t("trigger","conditions");
x.t("trigger","super");
x.t("8-30","configuring");
x.t("total","reply");
x.t("total","packets");
x.t("total","request");
x.t("total","number");
x.t("total","multicast");
x.t("total","packet");
x.t("limitations","assumptions");
x.t("8.7.3.1","addition");
x.t("8.7.3.1","super");
x.t("request-size","request-interval");
x.t("request-size","request-size");
x.t("request-size","det");
x.t("request-size","parameters");
x.t("request-size","request");
x.t("request-size","optional");
x.t("default","mdp");
x.t("default","indicates");
x.t("default","det");
x.t("default","tos");
x.t("default","specifies");
x.t("default","value");
x.t("default","values");
x.t("default","port");
x.t("default","packet");
x.t("default","encoding");
x.t("back","back");
x.t("back","source-port");
x.t("listed","below");
x.t("listed","table");
x.t("listed","drop-down");
x.t("count","dependent");
x.t("count","distribution");
x.t("8-31","specifying");
x.t("8.7.3.2","8.7.3.1");
x.t("8.7.3.2","super");
x.t("start-time","required");
x.t("start-time","start-time");
x.t("start-time","det");
x.t("start-time","duration");
x.t("start","time");
x.t("start","(seconds)");
x.t("consists","traffic");
x.t("precedence","reply-process");
x.t("precedence","mdp");
x.t("precedence","precedence");
x.t("precedence","bits");
x.t("precedence","tos");
x.t("precedence","precedence-value");
x.t("precedence","super-application");
x.t("precedence","gui");
x.t("precedence","node");
x.t("precedence","value");
x.t("precedence","specification");
x.t("precedence","used");
x.t("dscp","precedence");
x.t("dscp","dscp");
x.t("dscp","bits");
x.t("dscp","dscp-value");
x.t("dscp","gui");
x.t("dscp","value");
x.t("dscp","specification");
x.t("dscp","setting");
x.t("details","8.7.5.3");
x.t("details","configuring");
x.t("details","viewing");
x.t("details","examples");
x.t("items","1460");
x.t("items","sent");
x.t("single","host");
x.t("link","canvas");
x.t("spurt","gap");
x.t("8-32","enabling");
x.t("jitter","total");
x.t("jitter","average");
x.t("jitter","number");
x.t("jitter","(seconds)");
x.t("command","line");
x.t("size","reply");
x.t("size","fragment-size");
x.t("size","fragmentation");
x.t("size","default");
x.t("size","request");
x.t("size","enable");
x.t("size","bigger");
x.t("size","distribution");
x.t("size","packet");
x.t("fragments","received");
x.t("fragments","packet");
x.t("fragments","except");
x.t("fragments","sent");
x.t("back-to-back","reply-tos");
x.t("back-to-back","note");
x.t("chain","specified");
x.t("chain","chain-id");
x.t("chain","super");
x.t("repeating","entire");
x.t("client-server","session");
x.t("client-server","super");
x.t("8-33","setting");
x.t("smoothed","multicast");
x.t("time/simulation","time");
x.t("file","table");
x.t("file","mdp");
x.t("file","default");
x.t("file","parameters");
x.t("file","super-application");
x.t("file","section");
x.t("file","end");
x.t("file","database");
x.t("file","note");
x.t("file","statistics");
x.t("file","super");
x.t("reply-process-delay","det");
x.t("reply-process-delay","reply-delay");
x.t("reply-process-delay","reply-interdeparture-delay");
x.t("list","default");
x.t("list","destination");
x.t("list","reliable");
x.t("list","specify");
x.t("indicates","maximum");
x.t("indicates","whether");
x.t("need","configured");
x.t("udp","tcp");
x.t("udp","node");
x.t("udp","sessions");
x.t("udp","based");
x.t("udp","corresponding");
x.t("udp","used");
x.t("det","qos");
x.t("det","request-size");
x.t("det","start");
x.t("det","tcp");
x.t("det","reply-size");
x.t("det","1460");
x.t("det","60s");
x.t("det","21s");
x.t("det","10s");
x.t("det","value");
x.t("det","123");
x.t("det","0.1s");
x.t("det","reply-interdeparture-delay");
x.t("det","request-tos");
x.t("det","140");
x.t("menu","source");
x.t("menu","parameters");
x.t("menu","applications");
x.t("det-val","start");
x.t("group","address");
x.t("group","receive");
x.t("(messages)","total");
x.t("complete","reply");
x.t("complete","request");
x.t("during","simulation");
x.t("requested","data");
x.t("tos","tos-value");
x.t("tos","type");
x.t("tos","bits");
x.t("tos","tos");
x.t("tos","dependent");
x.t("tos","respectively");
x.t("tos","gui");
x.t("tos","value");
x.t("tos","specification");
x.t("unless","parameter");
x.t("bits","request");
x.t("bits","header");
x.t("bits","received");
x.t("bits","sent");
x.t("g.711","160");
x.t("g.711","g.729");
x.t("simple","condition");
x.t("simple","expression");
x.t("guide","details");
x.t("check","box");
x.t("(bits/second)","multicast");
x.t("network","technologies");
x.t("traffic","table");
x.t("traffic","source");
x.t("traffic","video");
x.t("traffic","type");
x.t("traffic","specified");
x.t("traffic","parameters");
x.t("traffic","generator");
x.t("tcp","connection");
x.t("tcp","udp");
x.t("tcp","corresponding");
x.t("tcp","used");
x.t("tcp","flows");
x.t("tcp","seconds");
x.t("unreliable","delivery");
x.t("unreliable","start-time");
x.t("unreliable","indicates");
x.t("unreliable","used");
x.t("configuring","mdp");
x.t("configuring","single");
x.t("configuring","client-server");
x.t("configuring","statistics");
x.t("(destination)","source");
x.t("end-to-end","delay");
x.t("specified","parameter");
x.t("specified","codec");
x.t("specified","user");
x.t("specified","time");
x.t("specified","reuest-size");
x.t("specified","rate");
x.t("specified","udp");
x.t("specified","det");
x.t("specified","tcp");
x.t("specified","traffic");
x.t("specified","string");
x.t("specified","average-talk-time");
x.t("specified","random");
x.t("specified","voice");
x.t("specified","means");
x.t("specified","scenario");
x.t("specified","exp");
x.t("specified","node");
x.t("specified","audio");
x.t("specified","application");
x.t("specified","reply-num");
x.t("specified","integer");
x.t("specified","request-num");
x.t("specified","using");
x.t("specified","uni");
x.t("specified","including");
x.t("reply-size","reply");
x.t("reply-size","reply-process-delay");
x.t("reply-size","det");
x.t("reply-size","reply-size");
x.t("reply-size","optional");
x.t("gap-ratio","fragment-size");
x.t("gap-ratio","optional");
x.t("gap-ratio","configure");
x.t("built","recursively");
x.t("8.7","super");
x.t("possibly","last");
x.t("name","mdp");
x.t("name","printed");
x.t("name","application-name");
x.t("name","super");
x.t("name","profile-name");
x.t("wait","flow");
x.t("box","labeled");
x.t("exactly","two");
x.t("scheme-parameters","optional");
x.t("ends","repeating");
x.t("supr","app");
x.t("addresses","listed");
x.t("8-50","command");
x.t("8-50","figure");
x.t("follows","throughput");
x.t("entered","line");
x.t("bytes","every");
x.t("bytes","size");
x.t("bytes","maximum");
x.t("bytes","received");
x.t("bytes","using");
x.t("bytes","sent");
x.t("average","talk");
x.t("average","multicast");
x.t("average","packet");
x.t("value-1","value-2");
x.t("perform","following");
x.t("dependent","parameters");
x.t("8-51","command");
x.t("8-51","figure");
x.t("parameters","parameter");
x.t("parameters","repeat-interval");
x.t("parameters","table");
x.t("parameters","uniform");
x.t("parameters","request-interval");
x.t("parameters","listed");
x.t("parameters","request-size");
x.t("parameters","start-time");
x.t("parameters","start");
x.t("parameters","client-server");
x.t("parameters","need");
x.t("parameters","reply-process-delay");
x.t("parameters","specified");
x.t("parameters","reply-size");
x.t("parameters","entered");
x.t("parameters","perform");
x.t("parameters","entire");
x.t("parameters","average-talk-time");
x.t("parameters","request");
x.t("parameters","gui");
x.t("parameters","enable");
x.t("parameters","configure");
x.t("parameters","exponential");
x.t("parameters","reply-tos");
x.t("parameters","described");
x.t("parameters","specification");
x.t("parameters","reply-num");
x.t("parameters","note");
x.t("parameters","priority");
x.t("parameters","two");
x.t("parameters","applications");
x.t("parameters","reply-interdeparture-delay");
x.t("parameters","deterministic");
x.t("parameters","request-tos");
x.t("parameters","used");
x.t("parameters","duration");
x.t("parameters","request-num");
x.t("parameters","statistics");
x.t("parameters","no-of-repeats");
x.t("parameters","super");
x.t("parameters","specify");
x.t("reply-delay","reply");
x.t("reply-delay","optional");
x.t("reply-delay","priority");
x.t("reply-delay","reply-interdeparture-delay");
x.t("session","start");
x.t("session","tcp");
x.t("session","name");
x.t("session","perform");
x.t("session","started");
x.t("session","section");
x.t("session","finished");
x.t("session","configure");
x.t("session","finish");
x.t("session","note");
x.t("session","application-name");
x.t("session","two");
x.t("session","duration");
x.t("session","initiator");
x.t("boolean","operators");
x.t("boolean","expressions");
x.t("boolean","expression");
x.t("value-2","time");
x.t("value-2","exponential");
x.t("value-2","integer");
x.t("value-2","returns");
x.t("12500","mpeg2.h");
x.t("rule","summarized");
x.t("8-52","command");
x.t("8-52","figure");
x.t("generic","traffic");
x.t("request-data-rate","data-rate");
x.t("request-data-rate","request-interval");
x.t("request-data-rate","request-data-rate");
x.t("request-data-rate","request-tos");
x.t("sends","first");
x.t("sends","node");
x.t("sends","duration");
x.t("profile","table");
x.t("profile","mdp-profile");
x.t("profile","default");
x.t("profile","file");
x.t("profile","specified");
x.t("profile","name");
x.t("profile","parameters");
x.t("profile","profile-1");
x.t("profile","takes");
x.t("profile","defined");
x.t("profile","used");
x.t("profile","associated");
x.t("profile","specify");
x.t("determine","trigger");
x.t("place","receiving");
x.t("app","button");
x.t("standard","toolset");
x.t("8-53","command");
x.t("8-53","figure");
x.t("destination","receives");
x.t("destination","source");
x.t("destination","required");
x.t("destination","whereas");
x.t("destination","start-time");
x.t("destination","start");
x.t("destination","addresses");
x.t("destination","parameters");
x.t("destination","destination");
x.t("destination","address");
x.t("destination","node");
x.t("destination","application");
x.t("destination","port");
x.t("destination","setting");
x.t("address","source");
x.t("address","start-time");
x.t("address","destination");
x.t("address","address");
x.t("address","client");
x.t("address","multicast");
x.t("address","server");
x.t("attempts","establish");
x.t("double-click","application");
x.t("double-click","symbol");
x.t("8-54","command");
x.t("8-54","figure");
x.t("string","chain");
x.t("string","name");
x.t("string","value");
x.t("entire","flow");
x.t("entire","application");
x.t("8-55","command");
x.t("8-55","figure");
x.t("started","multicast");
x.t("offered","load");
x.t("flow","repeat-interval");
x.t("flow","specified");
x.t("flow","ends");
x.t("flow","(request-response)");
x.t("flow","repetitions");
x.t("flow","enable");
x.t("flow","repeated");
x.t("flow","repetition");
x.t("(.app)","file");
x.t("addition","file");
x.t("addition","super");
x.t("super-application","source");
x.t("super-application","delivery-type");
x.t("average-talk-time","mean-spurt-gap-ratio");
x.t("average-talk-time","avg-talk-time");
x.t("reliable","start-time");
x.t("reliable","udp");
x.t("reliable","unreliable");
x.t("reliable","specified");
x.t("chooses","free");
x.t("ports","unique");
x.t("ports","multicast");
x.t("three","(request)");
x.t("three","random");
x.t("tried","continually");
x.t("dscp-value","table");
x.t("dscp-value","dscp-value");
x.t("dscp-value","value");
x.t("precedence-value","table");
x.t("precedence-value","precedence-value");
x.t("precedence-value","value");
x.t("mpeg1.h","7500");
x.t("mpeg1.h","mpeg2.m");
x.t("second","sending");
x.t("second","reply");
x.t("second","last");
x.t("second","first");
x.t("second","multicast");
x.t("second","interval");
x.t("receiving","request");
x.t("8-56","command");
x.t("8-56","figure");
x.t("request","replies");
x.t("request","reply");
x.t("request","packets");
x.t("request","time");
x.t("request","fragments");
x.t("request","bits");
x.t("request","traffic");
x.t("request","bytes");
x.t("request","fragment");
x.t("request","data");
x.t("request","note");
x.t("request","reply-interdeparture-delay");
x.t("request","packet");
x.t("successive","packets");
x.t("successive","response");
x.t("successive","request");
x.t("random","number");
x.t("uniformly","distributed");
x.t("100us","retry");
x.t("8-57","command");
x.t("(request-response)","supported");
x.t("supported","udp");
x.t("supported","unreliable");
x.t("supported","deterministic");
x.t("travel","source");
x.t("travel","destination");
x.t("voice","codec");
x.t("voice","video");
x.t("voice","traffic");
x.t("voice","dependent");
x.t("voice","session");
x.t("voice","enable");
x.t("voice","scheme");
x.t("voice","note");
x.t("calculate","talk");
x.t("configured","refer");
x.t("2345","whereas");
x.t("2345","reply-num");
x.t("equivalent","multimedia");
x.t("equivalent","source");
x.t("equivalent","video");
x.t("equivalent","uniform");
x.t("equivalent","reply");
x.t("equivalent","mdp");
x.t("equivalent","fragmentation");
x.t("equivalent","single");
x.t("equivalent","destination");
x.t("equivalent","voice");
x.t("equivalent","data");
x.t("equivalent","exponential");
x.t("equivalent","application");
x.t("equivalent","priority");
x.t("equivalent","deterministic");
x.t("equivalent","statistics");
x.t("equivalent","supper");
x.t("uni-val-1","latest");
x.t("8-58","command");
x.t("8-58","figure");
x.t("delay","sending");
x.t("delay","reply");
x.t("delay","time");
x.t("delay","successive");
x.t("delay","multicast");
x.t("delay","(seconds)");
x.t("delay","distribution");
x.t("occurs","fragments");
x.t("operators","xor");
x.t("1460","request-interval");
x.t("1460","bytes");
x.t("uni-val-2","configure");
x.t("respectively","figure");
x.t("respectively","configure");
x.t("8-59","command");
x.t("8-59","figure");
x.t("next","client");
x.t("unit","bytes");
x.t("unit","bytes/sec");
x.t("first","reply");
x.t("first","response");
x.t("first","super-application");
x.t("first","request");
x.t("first","multicast");
x.t("means","boolean");
x.t("g.723.lar5.3","g.726ar32");
x.t("celp","melp");
x.t("button","single");
x.t("button","applications");
x.t("select","properties");
x.t("options","similar");
x.t("collection","super");
x.t("messages","received");
x.t("messages","sent");
x.t("number","reply");
x.t("number","times");
x.t("number","packets");
x.t("number","complete");
x.t("number","attempts");
x.t("number","request");
x.t("number","distributions");
x.t("number","multicast");
x.t("number","out-of-order");
x.t("number","order");
x.t("number","used");
x.t("max-retries","maximum");
x.t("max-retries","retry-interval");
x.t("mpeg1.m","mpeg1.h");
x.t("mpeg1.m","2500");
x.t("gui","parameter");
x.t("gui","during");
x.t("gui","request");
x.t("gui","configuration");
x.t("mouse","destination");
x.t("viewing","dynamic");
x.t("2012","scalable");
x.t("maximum","i.e");
x.t("maximum","size");
x.t("maximum","number");
x.t("elapsed","items");
x.t("drag","mouse");
x.t("whether","response");
x.t("whether","tcp");
x.t("whether","packet");
x.t("whether","statistics");
x.t("specifies","mdp");
x.t("specifies","whether");
x.t("unique","chain-id");
x.t("unique","destination-port");
x.t("distributions","three");
x.t("distributions","supported");
x.t("distributions","value");
x.t("distributions","several");
x.t("expressions","built");
x.t("user-defined","mdp");
x.t("profile-1","super-application");
x.t("profile-1","8.7.4");
x.t("editor","table");
x.t("editor","doing");
x.t("receive","time");
x.t("receive","traffic");
x.t("chapter","qualnet");
x.t("8.7.1","description");
x.t("scenario","configuration");
x.t("scenario","statistics");
x.t("talk","time");
x.t("talk","spurts");
x.t("consecutive","attempts");
x.t("(bytes)","total");
x.t("(bytes)","(milliseconds)");
x.t("application-statistics","8.7.5");
x.t("application-statistics","optional");
x.t("canvas","select");
x.t("canvas","click");
x.t("canvas","either");
x.t("row","select");
x.t("row","right-click");
x.t("requests","received");
x.t("requests","sent");
x.t("8.7.2","limitations");
x.t("section","describes");
x.t("section","8.7.3.1");
x.t("section","8.7.3.2");
x.t("section","8.7.4.1");
x.t("section","1.2.1.1");
x.t("section","7.2.4.3");
x.t("section","4.2.9");
x.t("section","4.2.10");
x.t("mean-spurt-gap-ratio","gap-ratio");
x.t("mean-spurt-gap-ratio","specified");
x.t("mean-spurt-gap-ratio","used");
x.t("format","dscp");
x.t("format","precedence");
x.t("format","tos");
x.t("format","max-retries");
x.t("format","chain-id");
x.t("format","traffic-type");
x.t("format","used");
x.t("transport","protocol");
x.t("keyword","included");
x.t("keyword","specifies");
x.t("exp","mean");
x.t("exp","value");
x.t("release","open");
x.t("exp-val","start");
x.t("earliest","start");
x.t("8.7.3","command");
x.t("node","five");
x.t("node","replies");
x.t("node","uses");
x.t("node","mdp");
x.t("node","open");
x.t("node","default");
x.t("node","list");
x.t("node","sends");
x.t("node","three");
x.t("node","drag");
x.t("node","scenario");
x.t("node","application-statistics");
x.t("node","release");
x.t("node","right-click");
x.t("node","numbers");
x.t("node","used");
x.t("node","starts");
x.t("node","levels");
x.t("node","waits");
x.t("scope","gui");
x.t("scope","global");
x.t("8.7.4.1","describes");
x.t("8.7.4.1","configuring");
x.t("8.7.4.1","8.7.4.3");
x.t("repetitions","table");
x.t("connection-retry","retry-parameters");
x.t("<scheme-parameters]","average-talk-time");
x.t("1.2.1.1","description");
x.t("client","source");
x.t("client","node's");
x.t("client","connection");
x.t("client","address");
x.t("client","node");
x.t("client","client");
x.t("end","simulation");
x.t("22.5","conditions");
x.t("enable","multimedia");
x.t("enable","reply");
x.t("enable","mdp");
x.t("enable","fragmentation");
x.t("enable","repeat");
x.t("enable","repetition");
x.t("enable","packet");
x.t("enable","statistics");
x.t("8.7.4","gui");
x.t("steps","enable");
x.t("steps","click");
x.t("8-20","setting");
x.t("8.7.4.2","configuring");
x.t("addr","dest");
x.t("addr","source");
x.t("reply-qos","optional");
x.t("reply-qos","encoding-scheme");
x.t("reply-qos","setting");
x.t("expires","note");
x.t("num-packets","number");
x.t("num-packets","chain-id");
x.t("bigger","packet");
x.t("8-21","shows");
x.t("8-21","setting");
x.t("8.7.4.3","configuring");
x.t("8.7.5","statistics");
x.t("statistic","description");
x.t("chain-id","chain");
x.t("chain-id","chain-id");
x.t("chain-id","optional");
x.t("chain-id","application-name");
x.t("chain-id","packet");
x.t("chain-id","specify");
x.t("option","unreliable");
x.t("option","reliable");
x.t("broken","multiple");
x.t("database","tables");
x.t("database","dynamic");
x.t("database","mdp-enabled");
x.t("database","statistics");
x.t("database","user\u2019s");
x.t("mean","start");
x.t("mean","spurt");
x.t("mean","integer");
x.t("header","dscp");
x.t("header","precedence");
x.t("header","tos");
x.t("recursively","using");
x.t("60s","duration");
x.t("previous","example");
x.t("8-22","setting");
x.t("message","received");
x.t("message","sent");
x.t("assumptions","responses");
x.t("multicast","mode");
x.t("multicast","jitter");
x.t("multicast","fragments");
x.t("multicast","group");
x.t("multicast","end-to-end");
x.t("multicast","session");
x.t("multicast","offered");
x.t("multicast","messages");
x.t("multicast","message");
x.t("multicast","fragment");
x.t("multicast","data");
x.t("multicast","overhead");
x.t("multicast","received");
x.t("printed","statistics");
x.t("n/a","keyword");
x.t("n/a","application");
x.t("7.2.4.3","mdp");
x.t("7.2.4.3","conditions");
x.t("repeated","specified");
x.t("e.g","0.5ms");
x.t("e.g","time");
x.t("parentheses","used");
x.t("qualnet","statistics");
x.t("qualnet","user\u2019s");
x.t("21s","request-num");
x.t("click","source");
x.t("click","supr");
x.t("click","client");
x.t("8-23","enabling");
x.t("finished","first");
x.t("greater","simulation");
x.t("sessions","support");
x.t("establish","tcp");
x.t("collected","application");
x.t("collected","global");
x.t("8-24","enabling");
x.t("4.2.9","qualnet");
x.t("configuration","file");
x.t("configuration","parameters");
x.t("configuration","(.app)");
x.t("configuration","section");
x.t("configuration","node");
x.t("configuration","application");
x.t("configuration","(.config)");
x.t("include","following");
x.t("fragment","size");
x.t("fragment","bits");
x.t("fragment","bytes");
x.t("fragment","receive");
x.t("fragment","received");
x.t("fragment","packet");
x.t("fragment","sent");
x.t("retry-interval","time");
x.t("retry-interval","max-retries");
x.t("g.726ar32","g.726ar24");
x.t("10s","request-num");
x.t("10s","duration");
x.t("8-25","enabling");
x.t("(seconds)","time");
x.t("(seconds)","total");
x.t("(seconds)","smoothed");
x.t("(seconds)","average");
x.t("request-qos","reply-process");
x.t("request-qos","optional");
x.t("request-qos","setting");
x.t("value","complex");
x.t("value","tos-value");
x.t("value","parameter");
x.t("value","description");
x.t("value","table");
x.t("value","always");
x.t("value","uniform");
x.t("value","dscp");
x.t("value","precedence");
x.t("value","indicates");
x.t("value","det");
x.t("value","tos");
x.t("value","value-1");
x.t("value","dscp-value");
x.t("value","precedence-value");
x.t("value","uniformly");
x.t("value","mean");
x.t("value","retry-interval");
x.t("value","value");
x.t("value","exponential");
x.t("value","returns");
x.t("value","op-type");
x.t("till","end");
x.t("till","seconds");
x.t("scheme","parameter");
x.t("scheme","codec");
x.t("scheme","video");
x.t("scheme","specified");
x.t("scheme","voice");
x.t("scheme","traffic-type");
x.t("scheme","used");
x.t("interval","codec");
x.t("interval","precedence");
x.t("interval","specified");
x.t("interval","(bytes)");
x.t("interval","distribution");
x.t("usage","following");
x.t("right-click","application");
x.t("right-click","symbol");
x.t("similar","figure");
x.t("8-26","setting");
x.t("send","request-size");
x.t("free","source");
x.t("several","super");
x.t("figure","8-16");
x.t("figure","8-17");
x.t("figure","8-18");
x.t("figure","8-19");
x.t("figure","8-30");
x.t("figure","8-31");
x.t("figure","8-32");
x.t("figure","8-33");
x.t("figure","8-20");
x.t("figure","8-21");
x.t("figure","8-22");
x.t("figure","8-23");
x.t("figure","8-24");
x.t("figure","8-25");
x.t("figure","8-26");
x.t("figure","8-27");
x.t("figure","8-28");
x.t("figure","8-29");
x.t("drop-down","list");
x.t("8-27","setting");
x.t("generator","specified");
x.t("generator","8.7");
x.t("generator","8.7.1");
x.t("generator","application");
x.t("generator","super");
x.t("transmitted","specification");
x.t("condition","simple");
x.t("condition","condition");
x.t("condition","expression");
x.t("view","either");
x.t("8-28","setting");
x.t("models","8.7");
x.t("distribution","table");
x.t("distribution","uniform");
x.t("distribution","dscp");
x.t("distribution","specified");
x.t("distribution","dependent");
x.t("distribution","parameters");
x.t("distribution","request");
x.t("distribution","value");
x.t("distribution","exponential");
x.t("distribution","note");
x.t("distribution","deterministic");
x.t("runs","mdp");
x.t("runs","till");
x.t("takes","precedence");
x.t("takes","place");
x.t("expression","boolean");
x.t("expression","described");
x.t("expression","note");
x.t("established","end");
x.t("8-29","enabling");
x.t("8-40","section");
x.t("8-40","super");
x.t("bytes/sec","requested");
x.t("larger","parameter");
x.t("nodes","perform");
x.t("nodes","section");
x.t("specifying","mdp");
x.t("dynamic","statistics");
x.t("output","statistics");
x.t("(bits/s)","throughput");
x.t("(bits/s)","total");
x.t("(bits/s)","calculated");
x.t("optional","description");
x.t("optional","qos");
x.t("optional","retry");
x.t("optional","time");
x.t("optional","list");
x.t("optional","string");
x.t("optional","scope");
x.t("optional","n/a");
x.t("optional","integer");
x.t("optional","real");
x.t("optional","conditions");
x.t("optional","encoding");
x.t("data","rate");
x.t("data","traffic");
x.t("data","bytes");
x.t("data","received");
x.t("data","sent");
x.t("audio","video");
x.t("8-41","describes");
x.t("8-41","super");
x.t("configure","mdp");
x.t("configure","time");
x.t("configure","single");
x.t("configure","start");
x.t("configure","size");
x.t("configure","average");
x.t("configure","delay");
x.t("configure","number");
x.t("configure","duration");
x.t("configure","statistics");
x.t("configure","super");
x.t("host","source");
x.t("host","applications");
x.t("host","super");
x.t("toolset","canvas");
x.t("overhead","bytes");
x.t("overhead","received");
x.t("overhead","sent");
x.t("reply-tos","reply-qos");
x.t("defined","mdp");
x.t("exponential","uniform");
x.t("exponential","dependent");
x.t("exponential","exp");
x.t("exponential","distribution");
x.t("exponential","deterministic");
x.t("examples","parameter");
x.t("examples","super");
x.t("received","notes");
x.t("received","throughput");
x.t("received","last");
x.t("received","total");
x.t("received","(messages)");
x.t("received","average");
x.t("received","receiving");
x.t("received","first");
x.t("received","number");
x.t("received","(bytes)");
x.t("received","(seconds)");
x.t("received","(bits/s)");
x.t("received","(fragments)");
x.t("received","super");
x.t("8-42","command");
x.t("8-42","figure");
x.t("appropriate","properties");
x.t("out-of-order","reply");
x.t("out-of-order","request");
x.t("application","protocols");
x.t("application","properties");
x.t("application","layer");
x.t("application","related");
x.t("application","uses");
x.t("application","link");
x.t("application","check");
x.t("application","traffic");
x.t("application","name");
x.t("application","parameters");
x.t("application","session");
x.t("application","generic");
x.t("application","chooses");
x.t("application","flow");
x.t("application","scenario");
x.t("application","row");
x.t("application","8.7.4.1");
x.t("application","client");
x.t("application","collected");
x.t("application","configuration");
x.t("application","include");
x.t("application","runs");
x.t("application","appropriate");
x.t("application","global");
x.t("application","note");
x.t("application","run");
x.t("application","model");
x.t("application","trace-superapplication");
x.t("application","statistics");
x.t("application","simulate");
x.t("application","server");
x.t("destination-port","1751");
x.t("destination-port","destination");
x.t("destination-port","chain-id");
x.t("destination-port","optional");
x.t("destination-port","configure");
x.t("destination-port","destination-port");
x.t("values","mdp");
x.t("values","e.g");
x.t("values","packet");
x.t("8-43","command");
x.t("8-43","figure");
x.t("reply-num","reply");
x.t("reply-num","det");
x.t("reply-num","reply-size");
x.t("reply-num","optional");
x.t("reply-num","reply-num");
x.t("encoding-scheme","scheme-parameters");
x.t("encoding-scheme","<scheme-parameters]");
x.t("encoding-scheme","encoding");
x.t("repeat","repeat-interval");
x.t("repeat","time");
x.t("repeat","count");
x.t("repeat","dependent");
x.t("repeat","repeat");
x.t("described","table");
x.t("described","above");
x.t("specification","included");
x.t("specification","retry");
x.t("specification","type");
x.t("specification","consists");
x.t("specification","dscp");
x.t("specification","precedence");
x.t("specification","tos");
x.t("specification","note");
x.t("specification","following");
x.t("specification","recursion");
x.t("specification","conditions");
x.t("specification","encoding");
x.t("port","user-specified");
x.t("port","1751");
x.t("port","user");
x.t("port","connection");
x.t("port","specified");
x.t("port","dependent");
x.t("port","parameters");
x.t("port","destination");
x.t("port","2345");
x.t("port","number");
x.t("port","destination-port");
x.t("port","source-port");
x.t("port","specify");
x.t("port","server");
x.t("mpeg2.h","37500");
x.t("mpeg2.h","traffic");
x.t("xor","expr");
x.t("xor","parentheses");
x.t("above","8.7.3.2");
x.t("global","node");
x.t("8-44","command");
x.t("8-44","figure");
x.t("finish","(seconds)");
x.t("application-name","chain");
x.t("application-name","optional");
x.t("application-name","application-name");
x.t("application-name","mdp-enabled");
x.t("note","parameter");
x.t("note","notes");
x.t("note","fragment-size");
x.t("note","connection");
x.t("note","default");
x.t("note","start");
x.t("note","traffic");
x.t("note","exactly");
x.t("note","average");
x.t("note","parameters");
x.t("note","delay");
x.t("note","unit");
x.t("note","number");
x.t("note","mean-spurt-gap-ratio");
x.t("note","keyword");
x.t("note","enable");
x.t("note","value");
x.t("note","repeat");
x.t("note","note");
x.t("note","packet");
x.t("note","duration");
x.t("note","no-of-repeats");
x.t("note","conditions");
x.t("note","encoding");
x.t("integer","gap");
x.t("integer","time");
x.t("integer","address");
x.t("integer","unit");
x.t("integer","distributions");
x.t("integer","value");
x.t("integer","distribution");
x.t("integer","values");
x.t("integer","port");
x.t("protocol","i.e");
x.t("protocol","connection-retry");
x.t("two","options");
x.t("two","consecutive");
x.t("two","nodes");
x.t("two","following");
x.t("transmit","data/voice");
x.t("traffic-type","codec");
x.t("traffic-type","encoding");
x.t("123","request-interval");
x.t("123","bytes");
x.t("0.1s","previous");
x.t("0.1s","mdp-enabled");
x.t("otherwise","enable");
x.t("8-45","command");
x.t("8-45","figure");
x.t("priority","reply");
x.t("priority","dscp");
x.t("priority","precedence");
x.t("priority","tos");
x.t("priority","parameters");
x.t("priority","request");
x.t("based","applications");
x.t("applications","request");
x.t("applications","tab");
x.t("applications","including");
x.t("reply-interdeparture-delay","inter-reply-time");
x.t("reply-interdeparture-delay","det");
x.t("reply-interdeparture-delay","specified");
x.t("reply-interdeparture-delay","reply-delay");
x.t("repetition","parameters");
x.t("repetition","application");
x.t("2500","mpeg1.h");
x.t("8-46","command");
x.t("8-46","figure");
x.t("request-tos","precedence");
x.t("request-tos","request-qos");
x.t("packet","tracing");
x.t("packet","fragmented");
x.t("packet","fragmentation");
x.t("packet","response");
x.t("packet","count");
x.t("packet","size");
x.t("packet","reply-process-delay");
x.t("packet","reply-size");
x.t("packet","parameters");
x.t("packet","second");
x.t("packet","request");
x.t("packet","node");
x.t("packet","fragment");
x.t("packet","interval");
x.t("packet","larger");
x.t("packet","received");
x.t("packet","note");
x.t("packet","real");
x.t("packet","sent");
x.t("packet","op-type");
x.t("real","time");
x.t("real","time/simulation");
x.t("real","unit");
x.t("deterministic","uniform");
x.t("deterministic","det");
x.t("deterministic","dependent");
x.t("deterministic","distribution");
x.t("deterministic","exponential");
x.t("reached","default");
x.t("8-47","table");
x.t("8-47","command");
x.t("numbers","ports");
x.t("order","reply");
x.t("order","request");
x.t("following","statement");
x.t("following","expr");
x.t("following","g.711");
x.t("following","parameters");
x.t("following","canvas");
x.t("following","format");
x.t("following","steps");
x.t("following","num-packets");
x.t("following","right-click");
x.t("following","dynamic");
x.t("following","examples");
x.t("following","h.261");
x.t("mdp-enabled","included");
x.t("mdp-enabled","mdp-profile");
x.t("mdp-enabled","enable");
x.t("mdp-enabled","previous");
x.t("mdp-enabled","optional");
x.t("used","parameter");
x.t("used","irrespective");
x.t("used","source");
x.t("used","default");
x.t("used","destination");
x.t("used","super-application");
x.t("used","calculate");
x.t("used","transport");
x.t("used","section");
x.t("used","application");
x.t("used","conditions");
x.t("used","encoding");
x.t("simulation","table");
x.t("simulation","time");
x.t("simulation","sends");
x.t("simulation","number");
x.t("simulation","reached");
x.t("simulation","delivery-type");
x.t("corresponding","parameter");
x.t("corresponding","option");
x.t("service","reply");
x.t("service","request");
x.t("spurts","average-talk-time");
x.t("except","mdp");
x.t("except","possibly");
x.t("except","super");
x.t("run","mdp");
x.t("g.723.lar6.3","g.723.lar5.3");
x.t("g.723.lar6.3","g.726ar32");
x.t("starts","sending");
x.t("either","double-click");
x.t("8-48","table");
x.t("8-48","command");
x.t("model","refer");
x.t("model","enters");
x.t("model","8.7.5.1");
x.t("duration","required");
x.t("duration","det");
x.t("duration","enable");
x.t("duration","distribution");
x.t("duration","duration");
x.t("duration","delivery-type");
x.t("duration","super");
x.t("duration","seconds");
x.t("request-num","required");
x.t("request-num","request-size");
x.t("request-num","det");
x.t("request-num","request");
x.t("request-num","request-num");
x.t("mpeg2.m","12500");
x.t("mpeg2.m","mpeg2.h");
x.t("using","udp");
x.t("using","simple");
x.t("using","tcp");
x.t("using","parameters");
x.t("recursion","rule");
x.t("setting","source");
x.t("setting","reply");
x.t("setting","fragmentation");
x.t("setting","dscp");
x.t("setting","single");
x.t("setting","dependent");
x.t("setting","parameters");
x.t("setting","destination");
x.t("setting","data");
x.t("setting","super");
x.t("8-49","command");
x.t("8-49","respectively");
x.t("symbol","next");
x.t("symbol","select");
x.t("remaining","application");
x.t("calculated","follows");
x.t("delivery-type","parameter");
x.t("delivery-type","required");
x.t("delivery-type","unreliable");
x.t("delivery-type","reliable");
x.t("delivery-type","request");
x.t("delivery-type","connection-retry");
x.t("delivery-type","delivery-type");
x.t("avg-talk-time","mean-spurt-gap-ratio");
x.t("avg-talk-time","mean");
x.t("avg-talk-time","optional");
x.t("source-port","source");
x.t("source-port","2345");
x.t("source-port","optional");
x.t("source-port","destination-port");
x.t("source-port","source-port");
x.t("source-port","specify");
x.t("initiator","transmit");
x.t("data/voice","until");
x.t("statistics","table");
x.t("statistics","various");
x.t("statistics","enabled");
x.t("statistics","file");
x.t("statistics","parameters");
x.t("statistics","addition");
x.t("statistics","collection");
x.t("statistics","gui");
x.t("statistics","section");
x.t("statistics","statistic");
x.t("statistics","database");
x.t("statistics","collected");
x.t("statistics","output");
x.t("statistics","applications");
x.t("statistics","following");
x.t("statistics","(.stat)");
x.t("statistics","super");
x.t("returns","value");
x.t("distributed","value-1");
x.t("trace-superapplication","optional");
x.t("tab","table");
x.t("tab","standard");
x.t("8-60","command");
x.t("8-60","figure");
x.t("levels","section");
x.t("(.stat)","file");
x.t("simulate","udp");
x.t("no-of-repeats","number");
x.t("no-of-repeats","8.7.4.2");
x.t("no-of-repeats","optional");
x.t("no-of-repeats","note");
x.t("associated","node");
x.t("uni","value-1");
x.t("uni","earliest");
x.t("operator","type");
x.t("waits","second");
x.t("8-61","command");
x.t("8-61","figure");
x.t("(fragments)","total");
x.t("load","(bits/second)");
x.t("load","multicast");
x.t("(.config)","file");
x.t("including","tos");
x.t("including","super");
x.t("140","reply-process-delay");
x.t("140","bytes");
x.t("labeled","application");
x.t("8-62","command");
x.t("conditions","parameter");
x.t("conditions","specified");
x.t("conditions","determine");
x.t("conditions","optional");
x.t("conditions","repeat");
x.t("conditions","specification");
x.t("conditions","setting");
x.t("conditions","conditions");
x.t("sent","0.1");
x.t("sent","last");
x.t("sent","response");
x.t("sent","time");
x.t("sent","total");
x.t("sent","back");
x.t("sent","precedence");
x.t("sent","back-to-back");
x.t("sent","(messages)");
x.t("sent","unless");
x.t("sent","second");
x.t("sent","request");
x.t("sent","first");
x.t("sent","number");
x.t("sent","(bytes)");
x.t("sent","(seconds)");
x.t("sent","(bits/s)");
x.t("sent","(fragments)");
x.t("sent","seconds");
x.t("op-type","num-packets");
x.t("op-type","operator");
x.t("8-63","shows");
x.t("8-63","super");
x.t("super","application");
x.t("flows","two-way");
x.t("retry-parameters","optional");
x.t("retry-parameters","request-num");
x.t("profile-name","enable");
x.t("profile-name","optional");
x.t("profile-name","conditions");
x.t("server","dest");
x.t("server","node's");
x.t("server","connection");
x.t("server","address");
x.t("server","server");
x.t("encoding","scheme");
x.t("ratio","total");
x.t("ratio","average");
x.t("ratio","talk");
x.t("ratio","mean-spurt-gap-ratio");
x.t("specify","multimedia");
x.t("specify","source");
x.t("specify","reply");
x.t("specify","mdp");
x.t("specify","address");
x.t("specify","destination");
x.t("specify","fragment");
x.t("specify","conditions");
x.t("h.261","h.263");
x.t("h.261","160");
x.t("g.729","g.723.lar6.3");
x.t("(milliseconds)","h.261");
x.t("4.2.10","qualnet");
x.t("user\u2019s","guide");
x.t("seconds","packets");
x.t("seconds","first");
x.t("seconds","elapsed");
x.t("seconds","simulation");
x.t("supper","application");
x.t("8.7.5.1","file");
}
