function FileData_Pairs(x)
{
x.t("example","parameter");
x.t("example","asymmetric");
x.t("interfaces","interface");
x.t("interfaces","means");
x.t("2.2.1","description");
x.t("parameter","table");
x.t("parameter","required");
x.t("parameter","interface");
x.t("parameter","mac");
x.t("parameter","link");
x.t("parameter","command");
x.t("parameter","scenario");
x.t("parameter","scope");
x.t("parameter","value");
x.t("parameter","usage");
x.t("parameter","declaration");
x.t("parameter","two");
x.t("parameter","used");
x.t("parameter","measures");
x.t("library","2.2.3.1");
x.t("library","section");
x.t("properties","editor");
x.t("properties","general");
x.t("2.2.2","command");
x.t("200","first");
x.t("2008","2012");
x.t("link-propagation-delay","4ms");
x.t("link-propagation-delay","link");
x.t("link-propagation-delay","2ms");
x.t("link-propagation-delay","link-header-size-in-bits");
x.t("link-propagation-delay","3ms");
x.t("link-propagation-delay","optional");
x.t("link-propagation-delay","1ms");
x.t("full","duplex");
x.t("2.2.3","gui");
x.t("shown","figure");
x.t("lists","abstract");
x.t("scalable","network");
x.t("description","link-propagation-delay");
x.t("description","destination");
x.t("description","format");
x.t("description","abstract");
x.t("description","qualifier");
x.t("table","parameter");
x.t("table","table");
x.t("table","2-10");
x.t("table","2-6");
x.t("table","2-7");
x.t("table","2-8");
x.t("table","2-9");
x.t("refer","microwave");
x.t("refer","qualnet");
x.t("describes","file");
x.t("describes","configure");
x.t("2.2.4","statistics");
x.t("layer","(frames)");
x.t("layer","link");
x.t("layer","(bits/second)");
x.t("layer","(bytes)");
x.t("layer","multicast");
x.t("layer","(seconds)");
x.t("layer","broadcast");
x.t("layer","models");
x.t("layer","note");
x.t("layer","statistics");
x.t("layer","unicast");
x.t("required","wired");
x.t("required","scope");
x.t("source","node");
x.t("[2.1]","link-propagation-delay");
x.t("[2.1]","link-bandwidth");
x.t("enters","statistics");
x.t("various","scenario");
x.t("0.0","default");
x.t("enabled","disabled");
x.t("creates","point-to-point");
x.t("(frames)","total");
x.t("tables","refer");
x.t("line","parameter");
x.t("line","equivalent");
x.t("line","configuration");
x.t("shows","destination");
x.t("shows","configuration");
x.t("4ms","link-header-size-in-bits");
x.t("interface","properties");
x.t("interface","link-propagation-delay");
x.t("interface","mac");
x.t("interface","link");
x.t("interface","address");
x.t("interface","link-header-size-in-bits");
x.t("interface","1.1");
x.t("interface","1.2");
x.t("interface","section");
x.t("interface","link-generate-automatic-default-route");
x.t("interface","levels");
x.t("interface","link-bandwidth");
x.t("interface","mac-layer-statistics");
x.t("statement","creates");
x.t("1234000","[2.1]");
x.t("type","wired");
x.t("type","wireless");
x.t("wired","link");
x.t("wired","wireless");
x.t("wired","symmetric");
x.t("wired","wirelss");
x.t("wired","used");
x.t("time","channel");
x.t("time","link");
x.t("time","range");
x.t("time","link-header-size-in-bits");
x.t("time","takes");
x.t("time","2.2.4.2");
x.t("packets","average");
x.t("packets","multicast");
x.t("packets","carried");
x.t("packets","routed");
x.t("packets","(seconds)");
x.t("packets","broadcast");
x.t("packets","output");
x.t("packets","without");
x.t("i.e","link");
x.t("i.e","values");
x.t("i.e","link-phy-type");
x.t("total","time");
x.t("total","number");
x.t("mac","layer");
x.t("mac","mac");
x.t("mac","asymmetric");
x.t("mac","check");
x.t("mac","dependent");
x.t("mac","parameters");
x.t("mac","abstract");
x.t("mac","symmetric");
x.t("mac","appropriate");
x.t("mac","global");
x.t("mac","protocol");
x.t("mac","model");
x.t("mac","statistics");
x.t("default","224");
x.t("default","enables");
x.t("default","unit");
x.t("default","specifies");
x.t("default","3.0e8");
x.t("default","route");
x.t("default","1ms");
x.t("channel","busy");
x.t("channel","index");
x.t("speed","note");
x.t("speed","subnet");
x.t("[1.2]","link-propagation-delay");
x.t("[1.2]","link-bandwidth");
x.t("listed","table");
x.t("queue","mac");
x.t("link","properties");
x.t("link","full");
x.t("link","refer");
x.t("link","table");
x.t("link","statement");
x.t("link","type");
x.t("link","wired");
x.t("link","i.e");
x.t("link","mac");
x.t("link","link");
x.t("link","asymmetric");
x.t("link","able");
x.t("link","n2-1.0");
x.t("link","wireless");
x.t("link","perform");
x.t("link","dependent");
x.t("link","average");
x.t("link","parameters");
x.t("link","different");
x.t("link","2.2.3.3");
x.t("link","n2-2.0");
x.t("link","symmetric");
x.t("link","header");
x.t("link","multicast");
x.t("link","configuration");
x.t("link","usage");
x.t("link","forwarding");
x.t("link","broadcast");
x.t("link","nodes");
x.t("link","configure");
x.t("link","propagation");
x.t("link","described");
x.t("link","utilization");
x.t("link","used");
x.t("link","link-bandwidth");
x.t("link","assumed");
x.t("link","unicast");
x.t("mbps","bandwidth");
x.t("asymmetric","wired");
x.t("asymmetric","link");
x.t("asymmetric","wireless");
x.t("asymmetric","propagation");
x.t("asymmetric","links");
x.t("single","link");
x.t("details","configuring");
x.t("details","2.2.4.3");
x.t("access","medium");
x.t("jitter","mac");
x.t("command","line");
x.t("size","link-generate-automatic-default-route");
x.t("size","subnet");
x.t("file","end");
x.t("file","database");
x.t("file","qualifier");
x.t("file","statistics");
x.t("224","unit");
x.t("list","default");
x.t("able","route");
x.t("n2-1.0","interface");
x.t("n2-1.0","link");
x.t("bits","header");
x.t("applies","directions");
x.t("guide","details");
x.t("check","box");
x.t("(bits/second)","carried");
x.t("network","technologies");
x.t("traffic","example");
x.t("traffic","flow");
x.t("configuring","abstract");
x.t("configuring","statistics");
x.t("2-10","lists");
x.t("2-10","abstract");
x.t("range","0.0");
x.t("range","default");
x.t("2-2","figure");
x.t("2-2","setting");
x.t("box","labeled");
x.t("wireless","link");
x.t("wireless","microwave");
x.t("wireless","symmetric");
x.t("wireless","link-propagation-speed");
x.t("wireless","links");
x.t("wireless","model");
x.t("enables","automatic");
x.t("2ms","[2.1]");
x.t("2-3","setting");
x.t("follows","interface");
x.t("population","default");
x.t("qualify","parameter");
x.t("perform","following");
x.t("dependent","parameters");
x.t("2-4","setting");
x.t("bytes","received");
x.t("bytes","sent");
x.t("average","jitter");
x.t("average","delay");
x.t("average","medium");
x.t("parameters","shown");
x.t("parameters","wired");
x.t("parameters","listed");
x.t("parameters","asymmetric");
x.t("parameters","follows");
x.t("parameters","microwave");
x.t("parameters","gui");
x.t("parameters","enable");
x.t("parameters","abstract");
x.t("parameters","symmetric");
x.t("parameters","configure");
x.t("parameters","setting");
x.t("parameters","statistics");
x.t("parameters","link-bandwidth");
x.t("further","configuration");
x.t("2-5","setting");
x.t("2-6","shows");
x.t("2-6","abstract");
x.t("2-6","setting");
x.t("end-points","link");
x.t("address","source");
x.t("2156000","[2.2]");
x.t("2-7","command");
x.t("2-7","figure");
x.t("destination","shows");
x.t("destination","node");
x.t("2-8","command");
x.t("2-8","figure");
x.t("flow","asymmetric");
x.t("second","link");
x.t("2-9","command");
x.t("addition","file");
x.t("microwave","link");
x.t("microwave","links");
x.t("microwave","point-to-point");
x.t("travel","node");
x.t("equivalent","symmetric");
x.t("equivalent","statistics");
x.t("frames","received");
x.t("frames","sent");
x.t("supported","abstract");
x.t("link-header-size-in-bits","200");
x.t("link-header-size-in-bits","generate");
x.t("link-header-size-in-bits","optional");
x.t("link-header-size-in-bits","link-generate-automatic-default-route");
x.t("automatic","default");
x.t("automatic","generation");
x.t("delay","link");
x.t("delay","transmission");
x.t("delay","multicast");
x.t("delay","broadcast");
x.t("delay","output");
x.t("delay","values");
x.t("delay","subnet");
x.t("delay","bandwidth");
x.t("delay","unicast");
x.t("delay","gain");
x.t("busy","simulation");
x.t("select","abstract");
x.t("unit","mbps");
x.t("unit","bits");
x.t("unit","meters/sec");
x.t("first","link");
x.t("means","values");
x.t("1.1","2.2.3");
x.t("1.1","1.2");
x.t("collection","abstract");
x.t("1.2","1.1");
x.t("1.2","different");
x.t("gui","parameter");
x.t("gui","configuration");
x.t("gui","note");
x.t("number","control");
x.t("number","multicast");
x.t("number","broadcast");
x.t("number","unicast");
x.t("control","bytes");
x.t("control","frames");
x.t("2012","scalable");
x.t("signal","travel");
x.t("signal","propagation");
x.t("full-duplex","data");
x.t("2.2.3.1","interface");
x.t("2.2.3.1","configuring");
x.t("specifies","whether");
x.t("whether","mac");
x.t("different","interfaces");
x.t("different","different");
x.t("different","bandwidth");
x.t("editor","interfaces");
x.t("editor","table");
x.t("editor","point-to-point");
x.t("2.2.3.2","configuring");
x.t("scenario","configuration");
x.t("scenario","statistics");
x.t("index","real");
x.t("2.2.3.3","configuring");
x.t("(bytes)","total");
x.t("section","describes");
x.t("section","wireless");
x.t("section","2.2.3.1");
x.t("section","1.2.1.1");
x.t("section","1.2.1.3");
x.t("section","4.2.9");
x.t("format","used");
x.t("scope","parameter");
x.t("scope","time");
x.t("scope","list");
x.t("scope","gui");
x.t("scope","abstract");
x.t("scope","global");
x.t("scope","integer");
x.t("node","link");
x.t("node","traffic");
x.t("node","node");
x.t("node","note");
x.t("node","subnet");
x.t("duplex","asymmetric");
x.t("transmission","propagation");
x.t("link-mac-protocol","abstract");
x.t("1.2.1.1","description");
x.t("connected","nodes");
x.t("steps","configure");
x.t("steps","point-to-point");
x.t("enable","statistics");
x.t("end","simulation");
x.t("abstract","mac");
x.t("abstract","link");
x.t("abstract","scope");
x.t("disabled","note");
x.t("[1.1]","link-propagation-delay");
x.t("[1.1]","link-bandwidth");
x.t("1.2.1.3","description");
x.t("header","size");
x.t("n2-2.0","[1.1]");
x.t("symmetric","wired");
x.t("symmetric","link");
x.t("symmetric","wireless");
x.t("symmetric","dependent");
x.t("symmetric","otherwise");
x.t("symmetric","links");
x.t("database","tables");
x.t("database","dynamic");
x.t("database","statistics");
x.t("database","user\u2019s");
x.t("given","ratio");
x.t("ensure","packets");
x.t("[2.2]","link-propagation-delay");
x.t("[2.2]","link-bandwidth");
x.t("qualnet","statistics");
x.t("qualnet","user\u2019s");
x.t("multicast","packets");
x.t("multicast","control");
x.t("multicast","data");
x.t("carried","load");
x.t("taken","ensure");
x.t("routed","two");
x.t("collected","global");
x.t("4.2.9","qualnet");
x.t("configuration","parameter");
x.t("configuration","link");
x.t("configuration","parameters");
x.t("configuration","select");
x.t("configuration","section");
x.t("configuration","(.config)");
x.t("include","following");
x.t("instances","channel");
x.t("qualified","applies");
x.t("2374000","[1.1]");
x.t("(seconds)","average");
x.t("wirelss","links");
x.t("value","description");
x.t("usage","note");
x.t("usage","following");
x.t("declaration","global");
x.t("figure","2-2");
x.t("figure","2-3");
x.t("figure","2-4");
x.t("figure","2-5");
x.t("figure","2-6");
x.t("forwarding","table");
x.t("3ms","[2.2]");
x.t("generate","automatic");
x.t("broadcast","packets");
x.t("broadcast","control");
x.t("broadcast","data");
x.t("models","2.2");
x.t("takes","signal");
x.t("link-propagation-speed","optional");
x.t("nodes","link");
x.t("nodes","second");
x.t("nodes","mac-layer-statistics");
x.t("dynamic","statistics");
x.t("output","queue");
x.t("output","statistics");
x.t("show","link");
x.t("phy","layer");
x.t("medium","mac");
x.t("medium","delay");
x.t("optional","scope");
x.t("data","bytes");
x.t("data","frames");
x.t("data","sent");
x.t("configure","link");
x.t("configure","abstract");
x.t("appropriate","properties");
x.t("received","link");
x.t("received","phy");
x.t("propagation","speed");
x.t("propagation","mac");
x.t("propagation","delay");
x.t("link-generate-automatic-default-route","link");
x.t("link-generate-automatic-default-route","2.2.3.2");
x.t("link-generate-automatic-default-route","qualified");
x.t("link-generate-automatic-default-route","optional");
x.t("generation","population");
x.t("values","interface");
x.t("values","delay");
x.t("values","bandwidth");
x.t("global","node");
x.t("global","instances");
x.t("described","section");
x.t("protocol","wired");
x.t("protocol","microwave");
x.t("protocol","abstract");
x.t("protocol","include");
x.t("note","parameter");
x.t("note","parameters");
x.t("note","configure");
x.t("note","simulation");
x.t("note","unicast");
x.t("integer","range");
x.t("two","end-points");
x.t("two","connected");
x.t("otherwise","symmetric");
x.t("otherwise","given");
x.t("real","range");
x.t("utilization","show");
x.t("utilization","otherwise");
x.t("model","2.2.1");
x.t("model","library");
x.t("model","2008");
x.t("model","enters");
x.t("model","wired");
x.t("model","mac");
x.t("model","collected");
x.t("model","2.2");
x.t("model","2.2.4.1");
x.t("links","parameter");
x.t("links","2.2.2");
x.t("links","table");
x.t("links","refer");
x.t("links","qualify");
x.t("links","gui");
x.t("links","section");
x.t("links","abstract");
x.t("links","configure");
x.t("following","example");
x.t("following","parameter");
x.t("following","steps");
x.t("subnet","interface");
x.t("used","parameter");
x.t("used","wired");
x.t("used","wireless");
x.t("simulation","table");
x.t("simulation","time");
x.t("2.2","abstract");
x.t("qualifier","scope");
x.t("qualifier","link-mac-protocol");
x.t("3.0e8","unit");
x.t("1544000","[1.2]");
x.t("general","mac");
x.t("setting","parameters");
x.t("setting","abstract");
x.t("route","packets");
x.t("route","two");
x.t("route","subnet");
x.t("statistics","table");
x.t("statistics","description");
x.t("statistics","various");
x.t("statistics","enabled");
x.t("statistics","parameters");
x.t("statistics","addition");
x.t("statistics","supported");
x.t("statistics","collection");
x.t("statistics","section");
x.t("statistics","abstract");
x.t("statistics","database");
x.t("statistics","output");
x.t("statistics","dynamic");
x.t("statistics","(.stat)");
x.t("statistics","statistics");
x.t("levels","section");
x.t("2.2.4.1","file");
x.t("(.stat)","file");
x.t("link-bandwidth","link-propagation-delay");
x.t("link-bandwidth","required");
x.t("link-bandwidth","1234000");
x.t("link-bandwidth","2156000");
x.t("link-bandwidth","2374000");
x.t("link-bandwidth","1544000");
x.t("link-bandwidth","bandwidth");
x.t("directions","time");
x.t("directions","traffic");
x.t("without","further");
x.t("load","mac");
x.t("2.2.4.2","database");
x.t("point-to-point","link");
x.t("point-to-point","links");
x.t("(.config)","file");
x.t("1ms","time");
x.t("1ms","[1.2]");
x.t("bandwidth","i.e");
x.t("bandwidth","link");
x.t("bandwidth","single");
x.t("bandwidth","delay");
x.t("bandwidth","subnet");
x.t("measures","taken");
x.t("labeled","mac");
x.t("2.2.4.3","dynamic");
x.t("meters/sec","signal");
x.t("assumed","full-duplex");
x.t("sent","link");
x.t("sent","phy");
x.t("sent","directions");
x.t("link-phy-type","wired");
x.t("link-phy-type","wireless");
x.t("mac-layer-statistics","2.2.4");
x.t("mac-layer-statistics","optional");
x.t("user\u2019s","guide");
x.t("unicast","packets");
x.t("unicast","control");
x.t("unicast","data");
x.t("gain","access");
x.t("ratio","total");
}
