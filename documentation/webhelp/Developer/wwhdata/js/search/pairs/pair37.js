function FileData_Pairs(x)
{
x.t("coding","block");
x.t("coding","concepts");
x.t("senders","grtt");
x.t("senders","total");
x.t("senders","receivers");
x.t("senders","positive");
x.t("modes","trace");
x.t("modes","traffic");
x.t("modes","operation");
x.t("modes","variable");
x.t("interfaces","multicast");
x.t("interfaces","order");
x.t("enabling","mdp");
x.t("255","num-auto-parity");
x.t("255","default");
x.t("initial-grtt","optional");
x.t("flow/congestion","control");
x.t("min","minimum");
x.t("min","max");
x.t("probe","count");
x.t("equal","segment");
x.t("ieee","milcom");
x.t("receiver","source");
x.t("receiver","operation");
x.t("receiver","emission");
x.t("receiver","sends");
x.t("receiver","message");
x.t("receiver","transmissions");
x.t("receiver","nodes");
x.t("receiver","module");
x.t("receiver","allocates");
x.t("determined","server");
x.t("possible","desirable");
x.t("possible","repair");
x.t("provide","proactive");
x.t("considerations","mdp");
x.t("parameter","table");
x.t("parameter","mdp");
x.t("parameter","rx-buffer-size");
x.t("parameter","default");
x.t("parameter","command");
x.t("parameter","determines");
x.t("parameter","profiles");
x.t("parameter","specified");
x.t("parameter","tx-cache");
x.t("parameter","entered");
x.t("parameter","may");
x.t("parameter","scenario");
x.t("parameter","segment-pool-size");
x.t("parameter","scope");
x.t("parameter","block-size");
x.t("parameter","client");
x.t("parameter","enable");
x.t("parameter","multicast");
x.t("parameter","value");
x.t("parameter","declaration");
x.t("parameter","result");
x.t("parameter","defined");
x.t("parameter","note");
x.t("parameter","tx-buffer-size");
x.t("parameter","mdp-enabled");
x.t("parameter","specify");
x.t("notes","default");
x.t("notes","parameters");
x.t("super-app","traffic-gen");
x.t("mdp-tx-buffer-size","mdp");
x.t("mdp-tx-buffer-size","unit");
x.t("mdp-tx-buffer-size","optional");
x.t("available","parity");
x.t("properties","configured");
x.t("properties","editor");
x.t("properties","node");
x.t("enforce","reliability");
x.t("advantages","especially");
x.t("defines","mdp");
x.t("num-parity","255");
x.t("num-parity","default");
x.t("num-parity","optional");
x.t("just","temporary");
x.t("naval","research");
x.t("2008","2012");
x.t("applied","certain");
x.t("files","archive-path");
x.t("files","messages");
x.t("files","scenario");
x.t("files","instead");
x.t("files","null");
x.t("lists","mdp");
x.t("lists","statistics");
x.t("scalable","network");
x.t("description","total");
x.t("description","tos");
x.t("description","mdp-profile-file");
x.t("description","range");
x.t("description","ipv4");
x.t("description","parameters");
x.t("description","unit");
x.t("description","format");
x.t("description","multicast");
x.t("description","applications");
x.t("description","qualifier");
x.t("timing","synchronization");
x.t("timing","support");
x.t("delivery","delay");
x.t("delivery","scenarios");
x.t("delivery","mechanisms");
x.t("describes","implemented");
x.t("(forward-app)","special");
x.t("table","table");
x.t("table","7-9");
x.t("table","7-10");
x.t("table","7-11");
x.t("table","7-12");
x.t("table","7-13");
x.t("table","7-14");
x.t("table","7-15");
x.t("table","7-16");
x.t("estimate","greatest");
x.t("num-auto-parity","optional");
x.t("layer","enable");
x.t("layer","models");
x.t("source","receiver");
x.t("source","(server)");
x.t("source","request");
x.t("source","software");
x.t("source","node");
x.t("source","module");
x.t("mechanism","adaptive");
x.t("mechanism","based");
x.t("course","transmission");
x.t("key","considerations");
x.t("(nrl)","implementation");
x.t("related","parameters");
x.t("normal","extension");
x.t("once","mdp");
x.t("grtt","command");
x.t("grtt","request");
x.t("grtt","hearing");
x.t("multicasts","ack");
x.t("flag","mdp_report");
x.t("synchronization","among");
x.t("participants","result");
x.t("controlled","(emcon)");
x.t("probabilistic","techniques");
x.t("enabled","source");
x.t("enabled","allows");
x.t("enabled","flow-control-tx-rate");
x.t("enabled","format");
x.t("enabled","node");
x.t("enabled","multicast-ack-enabled");
x.t("enabled","loopback-enabled");
x.t("enabled","specific");
x.t("enabled","note");
x.t("enabled","applications");
x.t("enabled","positive-ack-with-report");
x.t("cbr","mcbr");
x.t("permanently","store");
x.t("permanently","received");
x.t("refers","current");
x.t("current","directory");
x.t("uses","selective");
x.t("uses","parity-based");
x.t("uses","multicast");
x.t("dynamics","7.2.2");
x.t("implemented","features");
x.t("subject","limitaions");
x.t("line","parameter");
x.t("line","mdp");
x.t("line","equivalent");
x.t("line","configuration");
x.t("line","itself");
x.t("cache","properties");
x.t("cache","depth");
x.t("cache","received");
x.t("transmitting","buffer");
x.t("mdp-segment-pool-size","parameter");
x.t("mdp-segment-pool-size","optional");
x.t("mdp-segment-pool-size","setting");
x.t("last","configured");
x.t("stream-integrity-enabled","optional");
x.t("pair","integer");
x.t("mdp_cmd_squelch","messages");
x.t("mdp","table");
x.t("mdp","related");
x.t("mdp","enabled");
x.t("mdp","cbr");
x.t("mdp","cache");
x.t("mdp","mdp");
x.t("mdp","suited");
x.t("mdp","explicitly");
x.t("mdp","mdp-profile");
x.t("mdp","details");
x.t("mdp","objects");
x.t("mdp","block");
x.t("mdp","profiles");
x.t("mdp","http://cs.itd.nrl.navy.mil/work/mdp");
x.t("mdp","check");
x.t("mdp","requires");
x.t("mdp","specified");
x.t("mdp","forward");
x.t("mdp","framework");
x.t("mdp","provides");
x.t("mdp","session");
x.t("mdp","parameters");
x.t("mdp","profile");
x.t("mdp","encoded");
x.t("mdp","allows");
x.t("mdp","segment");
x.t("mdp","blocks");
x.t("mdp","first");
x.t("mdp","messages");
x.t("mdp","gui");
x.t("mdp","release");
x.t("mdp","node");
x.t("mdp","client");
x.t("mdp","enable");
x.t("mdp","mdp-specific");
x.t("mdp","associating");
x.t("mdp","7.2.4.2");
x.t("mdp","sessions");
x.t("mdp","include");
x.t("mdp","figure");
x.t("mdp","specifying");
x.t("mdp","data");
x.t("mdp","appropriate");
x.t("mdp","heterogeneous");
x.t("mdp","global");
x.t("mdp","protocol");
x.t("mdp","forward-app");
x.t("mdp","packet");
x.t("mdp","model");
x.t("mdp","used");
x.t("mdp","mainly");
x.t("mdp","statistics");
x.t("mdp","buffer");
x.t("inter-network","core");
x.t("mode","source");
x.t("mode","enabled");
x.t("mode","mdp");
x.t("mode","support");
x.t("mode","operation");
x.t("mode","receiving");
x.t("mode","supported");
x.t("mode","client");
x.t("mode","7.2.2.2");
x.t("repairing","mechanism");
x.t("repairing","multicast");
x.t("repairing","optional");
x.t("points","course");
x.t("leave","multicast");
x.t("support","mdp");
x.t("support","basic");
x.t("support","asymmetric");
x.t("support","file");
x.t("support","group");
x.t("support","emcon");
x.t("support","small");
x.t("support","data");
x.t("limitaions","nrl");
x.t("extension","mdp");
x.t("state","previously");
x.t("sender","parameter");
x.t("sender","receivers");
x.t("sender","base-object-id");
x.t("sender","requests");
x.t("sender","performed");
x.t("missed","receivers");
x.t("missed","entirety");
x.t("suited","reliable");
x.t("missing","data");
x.t("providing","receipt");
x.t("unidirectional","repairing");
x.t("unidirectional","multicast");
x.t("basic","emcon");
x.t("64000","unit");
x.t("payload","size");
x.t("times","resynchronization");
x.t("erasure","repairing");
x.t("packets","automatically");
x.t("packets","normally");
x.t("packets","part");
x.t("response","messages");
x.t("response","received");
x.t("response","repair");
x.t("response","sent");
x.t("paramount","concern");
x.t("external","interfaces");
x.t("trace","file-based");
x.t("time","(grtt)");
x.t("time","simulate");
x.t("explicitly","enabled");
x.t("mdp-profile","configuring");
x.t("mdp-profile","optional");
x.t("mdp-profile","profile-name");
x.t("1048576","unit");
x.t("0.5","unit");
x.t("vector","size");
x.t("vector","pool");
x.t("(server)","receivers");
x.t("acknowledgement","determined");
x.t("acknowledgement","(nack)");
x.t("however","protocol");
x.t("however","run");
x.t("mobile","wireless");
x.t("automated","group");
x.t("round-trip","timing");
x.t("rate","bits");
x.t("rate","traffic");
x.t("rate","(cbr)");
x.t("rate","congestion");
x.t("rate","max");
x.t("rate","value");
x.t("rate","(vbr)");
x.t("regardless","size");
x.t("followed","parameters");
x.t("multiple","occurrences");
x.t("archive-path","optional");
x.t("total","mdp_cmd_squelch");
x.t("total","response");
x.t("total","mdp_cmd");
x.t("total","mdp_cmd_ack_req");
x.t("total","mdp_nack");
x.t("total","mdp_data");
x.t("total","mdp_cmd_grtt_req");
x.t("total","number");
x.t("total","mdp_cmd_flush");
x.t("total","mdp_ack");
x.t("total","mdp_report");
x.t("total","received");
x.t("total","mdp_parity");
x.t("total","mdp_cmd_nack_adv");
x.t("total","mdp_info");
x.t("mdp_cmd","messages");
x.t("require","receiver");
x.t("require","source");
x.t("scalability","redundant");
x.t("original","data");
x.t("requirement","mdp");
x.t("networks","unidirectional");
x.t("networks","networks");
x.t("back","sender");
x.t("back","server");
x.t("limitations","mdp");
x.t("limitations","qualnet");
x.t("default","parameter");
x.t("default","mdp-tx-buffer-size");
x.t("default","description");
x.t("default","mdp-segment-pool-size");
x.t("default","mdp");
x.t("default","64000");
x.t("default","1048576");
x.t("default","0.5");
x.t("default","mdp-tx-cache");
x.t("default","indicates");
x.t("default","acks");
x.t("default","mdp-rx-buffer-size");
x.t("default","device");
x.t("default","number");
x.t("default","maximum");
x.t("default","specifies");
x.t("default","multicast");
x.t("default","1024");
x.t("default","null");
x.t("default","value");
x.t("default","values");
x.t("rx-buffer-size","section");
x.t("rx-buffer-size","optional");
x.t("increases","value");
x.t("count","block");
x.t("count","scoping");
x.t("count","exceeded");
x.t("automatically","sent");
x.t("positive-ack-nodes","optional");
x.t("listed","table");
x.t("queue","mdp");
x.t("queue","total");
x.t("bulk","transfer");
x.t("bulk","data");
x.t("consists","receiver");
x.t("among","participants");
x.t("among","group");
x.t("objects","possible");
x.t("objects","parameter");
x.t("objects","mdp");
x.t("objects","missed");
x.t("objects","completed");
x.t("objects","small");
x.t("objects","failed");
x.t("objects","kept");
x.t("objects","fail");
x.t("objects","pending");
x.t("objects","specific");
x.t("objects","sent");
x.t("certain","watermark");
x.t("asymmetric","delivery");
x.t("asymmetric","networks");
x.t("asymmetric","operation");
x.t("single","line");
x.t("single","object");
x.t("details","mdp");
x.t("details","configuring");
x.t("prefix","profile");
x.t("top","generic");
x.t("includes","optional");
x.t("block","num-parity");
x.t("block","vector");
x.t("block","addition");
x.t("block","emcon-enabled");
x.t("block","note");
x.t("desirable","client");
x.t("client-server","modes");
x.t("size","equal");
x.t("size","default");
x.t("size","profiles");
x.t("size","specified");
x.t("size","bytes");
x.t("size","max-sz");
x.t("size","long");
x.t("size","max-cnt");
x.t("size","node");
x.t("size","block-size");
x.t("size","7.2.7");
x.t("size","server's");
x.t("command","line");
x.t("command","total");
x.t("command","messages");
x.t("usually","extension");
x.t("mdp-tx-cache","mdp");
x.t("mdp-tx-cache","parameters");
x.t("mdp-tx-cache","min-cnt");
x.t("mdp-tx-cache","optional");
x.t("resynchronize","sender");
x.t("file","defines");
x.t("file","description");
x.t("file","table");
x.t("file","mdp");
x.t("file","however");
x.t("file","default");
x.t("file","objects");
x.t("file","usually");
x.t("file","specified");
x.t("file","dependent");
x.t("file","parameters");
x.t("file","means");
x.t("file","different");
x.t("file","section");
x.t("file","node");
x.t("file","enable");
x.t("file","end");
x.t("file","7.2.4.1");
x.t("file","defined");
x.t("file","application");
x.t("file","described");
x.t("file","otherwise");
x.t("file","dissemination");
x.t("file","run");
x.t("file","qualifier");
x.t("file","object");
x.t("file","specify");
x.t("list","default");
x.t("list","ipv4");
x.t("list","receivers");
x.t("status","flag");
x.t("status","reports");
x.t("able","receive");
x.t("able","acknowledge");
x.t("profiles","mdp");
x.t("profiles","memory");
x.t("profiles","amount");
x.t("profiles","nodes");
x.t("profiles","defined");
x.t("profiles","transmit");
x.t("profiles","applications");
x.t("profiles","server's");
x.t("triplet","integer");
x.t("determines","tx-cache");
x.t("determines","amount");
x.t("15.0","default");
x.t("indicates","whether");
x.t("indicates","server\u2019s");
x.t("archive-mode-enabled","optional");
x.t("info","messages");
x.t("group","dynamics");
x.t("group","round-trip");
x.t("group","list");
x.t("group","receivers");
x.t("group","sizes");
x.t("packet-level","forward");
x.t("(mcbr)","super");
x.t("treated","single");
x.t("5000","max-sz");
x.t("report-messages-enabled","positive-ack-nodes");
x.t("report-messages-enabled","optional");
x.t("mdp_cmd_ack_req","messages");
x.t("mdp_cmd_ack_req","mdp_cmd_flush");
x.t("http://cs.itd.nrl.navy.mil/work/mdp","2008");
x.t("subscribe","multicast");
x.t("wan","sessions");
x.t("wan","infrastructures");
x.t("normally","sent");
x.t("requested","transport");
x.t("emcon","modes");
x.t("emcon","mode");
x.t("emcon","silent");
x.t("network","technologies");
x.t("network","architectures");
x.t("network","conditions");
x.t("traffic-gen","traffic-trace");
x.t("applies","profile");
x.t("tos","optional");
x.t("bits","per");
x.t("acks","sent");
x.t("guide","details");
x.t("check","box");
x.t("end-to-end","rate-based");
x.t("features","emission");
x.t("features","none");
x.t("features","omitted");
x.t("features","one-to-many");
x.t("features","assumptions");
x.t("large","group");
x.t("large","packet");
x.t("traffic","generator");
x.t("configuring","mdp");
x.t("configuring","statistics");
x.t("8128","default");
x.t("recommended","flow/congestion");
x.t("rate-based","congestion");
x.t("selective","nack");
x.t("selective","retransmission");
x.t("selective","negative");
x.t("receipt","acknowledgement");
x.t("receipt","individual");
x.t("(cbr)","forward");
x.t("requires","two");
x.t("specified","default");
x.t("specified","profile");
x.t("specified","scenario");
x.t("specified","application");
x.t("specified","following");
x.t("mdp-profile-file","optional");
x.t("mdp-profile-file","specify");
x.t("buffering","server");
x.t("byte","tx-rate");
x.t("commas","sapces");
x.t("overruns","total");
x.t("overruns","maximum");
x.t("1999","joseph");
x.t("functionality","mdp");
x.t("forward","error");
x.t("forward","application");
x.t("operation","subject");
x.t("operation","mdp");
x.t("operation","asymmetric");
x.t("operation","emcon");
x.t("operation","parity-based");
x.t("operation","stream");
x.t("acking","status");
x.t("common","mode");
x.t("common","information");
x.t("suitable","asymmetric");
x.t("name","table");
x.t("name","mdp");
x.t("name","followed");
x.t("name","default");
x.t("name","parameters");
x.t("name","profile");
x.t("name","node");
x.t("range","255");
x.t("range","num-parity");
x.t("range","default");
x.t("range","8128");
x.t("range","0.001");
x.t("range","128");
x.t("tx-cache","min-cnt");
x.t("tx-cache","section");
x.t("tx-cache","optional");
x.t("stored","limited");
x.t("tx-rate","optional");
x.t("path","directory");
x.t("7-5","enabling");
x.t("box","labeled");
x.t("mdp_nack","messages");
x.t("framework","consists");
x.t("performance","advantages");
x.t("performance","mdp-statistics");
x.t("performance","robustness-count");
x.t("performance","multicast");
x.t("wireless","network");
x.t("wireless","environments");
x.t("hoc","basis");
x.t("clients","mode");
x.t("clients","segment-size");
x.t("retains","state");
x.t("previously","transmitted");
x.t("addresses","receiver");
x.t("addresses","description");
x.t("addresses","separated");
x.t("flow-control-enabled","optional");
x.t("7-6","setting");
x.t("references","joseph");
x.t("(rmcc)","ieee");
x.t("part","original");
x.t("routing/delivery","service");
x.t("emission","controlled");
x.t("emission","control");
x.t("avoid","receiver");
x.t("receipts","selected");
x.t("laboratory","(nrl)");
x.t("laboratory","implementation");
x.t("bytes","default");
x.t("bytes","size");
x.t("bytes","amount");
x.t("bytes","received");
x.t("bytes","sender's");
x.t("bytes","sent");
x.t("limit","reached");
x.t("mdp-rx-buffer-size","mdp");
x.t("mdp-rx-buffer-size","unit");
x.t("mdp-rx-buffer-size","optional");
x.t("entered","single");
x.t("entered","order");
x.t("ipv4","addresses");
x.t("resending","mdp");
x.t("dependent","parameters");
x.t("7-7","specifying");
x.t("receivers","grtt");
x.t("receivers","support");
x.t("receivers","providing");
x.t("receivers","total");
x.t("receivers","top");
x.t("receivers","group");
x.t("receivers","flow-control-enabled");
x.t("receivers","indicate");
x.t("receivers","wishing");
x.t("receivers","easily");
x.t("receivers","positive");
x.t("receivers","using");
x.t("receivers","therefore");
x.t("receivers","(clients)");
x.t("receivers","dynamically");
x.t("methods","however");
x.t("provides","support");
x.t("provides","useful");
x.t("provides","optional");
x.t("exists","mdp");
x.t("useful","protocol");
x.t("none","7.2.2.3");
x.t("session","specified");
x.t("session","control");
x.t("session","7.2.4.3");
x.t("parameters","enabling");
x.t("parameters","parameter");
x.t("parameters","table");
x.t("parameters","mdp");
x.t("parameters","listed");
x.t("parameters","profiles");
x.t("parameters","configuring");
x.t("parameters","specified");
x.t("parameters","entered");
x.t("parameters","configured");
x.t("parameters","gui");
x.t("parameters","define");
x.t("parameters","scenario");
x.t("parameters","added");
x.t("parameters","enable");
x.t("parameters","application");
x.t("parameters","described");
x.t("parameters","transmit");
x.t("parameters","used");
x.t("parameters","statistics");
x.t("parameters","specify");
x.t("max-sz","whichever");
x.t("max-sz","min-cnt");
x.t("max-sz","maximum");
x.t("7-8","specifying");
x.t("generic","udp/ip");
x.t("parity-based","repairing");
x.t("parity-based","erasure");
x.t("parity-based","repair");
x.t("nack-based","mode");
x.t("indicate","acking");
x.t("profile","parameter");
x.t("profile","mdp-segment-pool-size");
x.t("profile","mdp");
x.t("profile","file");
x.t("profile","name");
x.t("profile","mdp-rx-buffer-size");
x.t("profile","dependent");
x.t("profile","parameters");
x.t("profile","specifies");
x.t("profile","node");
x.t("profile","assigns");
x.t("profile","defined");
x.t("profile","application");
x.t("profile","case");
x.t("profile","overwritten");
x.t("profile","transmit");
x.t("profile","note");
x.t("profile","otherwise");
x.t("profile","used");
x.t("profile","following");
x.t("profile","associated");
x.t("profile","specify");
x.t("7-9","lists");
x.t("7-9","mdp");
x.t("whichever","limit");
x.t("sends","unicast");
x.t("base-object-id","optional");
x.t("completed","total");
x.t("completed","receivers");
x.t("combine","count");
x.t("allows","senders");
x.t("allows","client");
x.t("allows","data");
x.t("encoded","parity");
x.t("basis","common");
x.t("segments","may");
x.t("segments","(packets)");
x.t("segments","amount");
x.t("segments","per");
x.t("pre-allocation","parameter");
x.t("partially","received");
x.t("adjusts","rate");
x.t("integrity","operation");
x.t("string","default");
x.t("string","name");
x.t("segment","size");
x.t("segment","packet");
x.t("segment","pool");
x.t("reliable","multicast");
x.t("addition","mdp");
x.t("addition","pure");
x.t("contain","common");
x.t("permits","optional");
x.t("receiving","nodes");
x.t("aggregation","control");
x.t("stream","integrity");
x.t("defining","mdp");
x.t("(.app)","file");
x.t("second","ttl-count");
x.t("round","trip");
x.t("temporarily","permanently");
x.t("device","properties");
x.t("congestion","control");
x.t("techniques","conjunction");
x.t("request","command");
x.t("request","positive");
x.t("progress","points");
x.t("allowing","receivers");
x.t("effective","unidirectional");
x.t("small","files");
x.t("small","large");
x.t("selected","receivers");
x.t("pre-allocated","mdp");
x.t("pre-allocated","memory");
x.t("store","files");
x.t("failed","total");
x.t("failed","queue");
x.t("failed","receivers");
x.t("(mdp)","transport");
x.t("(mdp)","draft-macker-rmt-mdp-00");
x.t("(mdp)","toolkit");
x.t("(nack)","missing");
x.t("(nack)","nack");
x.t("(nack)","based");
x.t("error","correction");
x.t("configured","large");
x.t("configured","node");
x.t("configured","value");
x.t("configured","transmit");
x.t("configured","model");
x.t("sizes","support");
x.t("implosion","aggregation");
x.t("supported","following");
x.t("supplemental","information");
x.t("min-cnt","max-cnt");
x.t("min-cnt","smallest");
x.t("equivalent","enabling");
x.t("equivalent","mdp");
x.t("mdp_data","messages");
x.t("blocks","received");
x.t("especially","error-prone");
x.t("unicast-based","client");
x.t("delay","paramount");
x.t("mdp_cmd_grtt_req","total");
x.t("mdp_cmd_grtt_req","messages");
x.t("environments","across");
x.t("messages","possible");
x.t("messages","enabled");
x.t("messages","sender");
x.t("messages","back");
x.t("messages","default");
x.t("messages","able");
x.t("messages","mdp_cmd_ack_req");
x.t("messages","suppressed");
x.t("messages","transmitted");
x.t("messages","received");
x.t("messages","positive");
x.t("messages","sent");
x.t("headers","contain");
x.t("concern","protocol");
x.t("feature","configured");
x.t("targeted","operational");
x.t("long","enough");
x.t("long","application");
x.t("mcbr","super-app");
x.t("means","parameter");
x.t("affects","long");
x.t("max-cnt","max-sz");
x.t("max-cnt","largest");
x.t("kept","regardless");
x.t("first","mdp-tx-buffer-size");
x.t("first","line");
x.t("first","tx-buffer-size");
x.t("unit","bytes");
x.t("unit","bps");
x.t("unit","seconds");
x.t("smaller","value");
x.t("nacks","enabled");
x.t("entirety","partially");
x.t("minimum","maximum");
x.t("minimum","transmission");
x.t("collection","mdp");
x.t("fail","queue");
x.t("brian","adamson");
x.t("udp/ip","multicast");
x.t("control","mode");
x.t("control","(rmcc)");
x.t("control","parameters");
x.t("control","characteristics");
x.t("control","(emcon)");
x.t("control","information");
x.t("control","messaging");
x.t("control","optional");
x.t("control","algorithm");
x.t("proactive","parity");
x.t("proactive","repair");
x.t("priori","knowledge");
x.t("number","available");
x.t("number","grtt");
x.t("number","mdp");
x.t("number","times");
x.t("number","response");
x.t("number","command");
x.t("number","resynchronize");
x.t("number","file");
x.t("number","info");
x.t("number","blocks");
x.t("number","report");
x.t("number","parity");
x.t("number","squelch");
x.t("number","nack");
x.t("number","receiver's");
x.t("number","data");
x.t("number","received");
x.t("number","application");
x.t("number","flush");
x.t("number","positive");
x.t("mdpv2","coding");
x.t("unicast-nack-enabled","optional");
x.t("gui","properties");
x.t("gui","parameter");
x.t("gui","configuration");
x.t("2012","scalable");
x.t("reliability","nack");
x.t("approach","used");
x.t("suppressed","total");
x.t("suppressed","among");
x.t("suppressed","receivers");
x.t("better","performance");
x.t("enough","inter-arrival");
x.t("vbr","mdp");
x.t("maximum","probe");
x.t("maximum","size");
x.t("maximum","transmission");
x.t("maximum","usage");
x.t("maximum","usages");
x.t("ttl-count","optional");
x.t("emcon-enabled","optional");
x.t("max","min");
x.t("max","maximum");
x.t("software","modules");
x.t("may","applied");
x.t("may","suitable");
x.t("may","affect");
x.t("may","result");
x.t("may","optionally");
x.t("receive","messages");
x.t("receive","owb");
x.t("conforms","navy");
x.t("particular","silent");
x.t("unique","object");
x.t("specifies","whether");
x.t("specifies","values");
x.t("different","mdp");
x.t("whether","receiver");
x.t("whether","mdp");
x.t("whether","emission");
x.t("whether","transmission");
x.t("whether","client");
x.t("whether","multicast");
x.t("whether","positive");
x.t("whether","experimental");
x.t("whether","statistics");
x.t("define","session");
x.t("hop","count");
x.t("trip","time");
x.t("segment-size","optional");
x.t("editor","table");
x.t("editor","node");
x.t("adv","command");
x.t("correction","coding");
x.t("requests","receivers");
x.t("requests","positive");
x.t("requests","repair");
x.t("requests","reapir");
x.t("nrl","implementation");
x.t("scenario","configuration");
x.t("scenario","levels");
x.t("instead","parameter");
x.t("instead","using");
x.t("characteristics","associated");
x.t("stores","temporarily");
x.t("flow-control-tx-rate","min");
x.t("flow-control-tx-rate","optional");
x.t("report","messages");
x.t("transport","layer");
x.t("transport","mdp");
x.t("transport","objects");
x.t("transport","protocol");
x.t("wishing","subscribe");
x.t("redundant","nack");
x.t("reception","messages");
x.t("section","describes");
x.t("section","1.2.1.1");
x.t("section","1.2.1.3");
x.t("section","7.2.4.2");
x.t("section","7.2.4.3");
x.t("section","4.2.9");
x.t("release","src-mdp-2.1b6");
x.t("format","mdp");
x.t("format","mdp-profile");
x.t("format","mdp-tx-cache");
x.t("format","tx-cache");
x.t("format","flow-control-tx-rate");
x.t("format","used");
x.t("filename","name");
x.t("8388608","1024");
x.t("allocated","memory");
x.t("mdp-statistics","optional");
x.t("mdp-statistics","7.2.6");
x.t("7-10","notes");
x.t("7-10","mdp");
x.t("7-10","optional");
x.t("7-10","occur");
x.t("directory","just");
x.t("directory","stream-integrity-enabled");
x.t("directory","client");
x.t("transmission","parameter");
x.t("transmission","rate");
x.t("transmission","block");
x.t("transmission","status");
x.t("transmission","rates");
x.t("transmission","simulation");
x.t("transmission","series");
x.t("node","mdp-tx-buffer-size");
x.t("node","delivery");
x.t("node","table");
x.t("node","mdp-segment-pool-size");
x.t("node","mdp");
x.t("node","mdp-profile");
x.t("node","total");
x.t("node","default");
x.t("node","mdp-tx-cache");
x.t("node","triplet");
x.t("node","list");
x.t("node","mdp-profile-file");
x.t("node","name");
x.t("node","mdp-rx-buffer-size");
x.t("node","parameters");
x.t("node","string");
x.t("node","instead");
x.t("node","scenario");
x.t("node","section");
x.t("node","filename");
x.t("node","mdp-statistics");
x.t("node","level");
x.t("node","n/a");
x.t("node","configuration");
x.t("node","configure");
x.t("node","following");
x.t("node","mdp-enabled");
x.t("node","similarly");
x.t("node","using");
x.t("node","levels");
x.t("node","specify");
x.t("factors","key");
x.t("omitted","features");
x.t("added","application");
x.t("scope","parameter");
x.t("scope","notes");
x.t("scope","gui");
x.t("scope","global");
x.t("segment-pool-size","section");
x.t("segment-pool-size","optional");
x.t("initial","estimate");
x.t("initial","assumption");
x.t("initial","transmit");
x.t("maximum/normal","segment");
x.t("multicast-ack-enabled","optional");
x.t("robustness-count","optional");
x.t("7-11","command");
x.t("participating","nodes");
x.t("client","multicasts");
x.t("client","permanently");
x.t("client","operation");
x.t("client","receive");
x.t("client","stores");
x.t("client","requests");
x.t("client","nodes");
x.t("client","feedback");
x.t("scenarios","support");
x.t("steps","defining");
x.t("enable","mdp");
x.t("enable","statistics");
x.t("1.2.1.1","description");
x.t("traffic-trace","vbr");
x.t("scoping","initial-grtt");
x.t("block-size","num-parity");
x.t("block-size","optional");
x.t("reports","mdp_report");
x.t("sapces","tabs");
x.t("7-12","command");
x.t("7-12","figure");
x.t("end","simulation");
x.t("scaled","wan");
x.t("adds","additional");
x.t("one-to-many","bulk");
x.t("inter-arrival","time");
x.t("mdp-specific","parameters");
x.t("7.2.4.1","mdp");
x.t("assigns","name");
x.t("(packets)","per");
x.t("disabled","emcon");
x.t("level","statistics");
x.t("7-13","command");
x.t("7-13","figure");
x.t("statistic","collected");
x.t("nack","mdp");
x.t("nack","messages");
x.t("nack","approach");
x.t("nack","adv");
x.t("nack","transmissions");
x.t("nack","backoff");
x.t("parity","packets");
x.t("parity","bytes");
x.t("parity","segments");
x.t("parity","messages");
x.t("parity","data");
x.t("parity","repair");
x.t("message","implosion");
x.t("message","headers");
x.t("associating","default");
x.t("1.2.1.3","description");
x.t("7.2.4.2","mdp-tx-cache");
x.t("7.2.4.2","running");
x.t("memory","receiver");
x.t("memory","mdp");
x.t("memory","increases");
x.t("memory","profiles");
x.t("memory","specified");
x.t("memory","pre-allocation");
x.t("memory","pre-allocated");
x.t("memory","saving");
x.t("affect","runtime");
x.t("header","byte");
x.t("option","controls");
x.t("acknowledgemets","list");
x.t("7-14","command");
x.t("7-14","figure");
x.t("squelch","command");
x.t("pending","total");
x.t("pending","receivers");
x.t("milcom","1999");
x.t("milcom","2000");
x.t("multicast","delivery");
x.t("multicast","bulk");
x.t("multicast","file");
x.t("multicast","selective");
x.t("multicast","routing/delivery");
x.t("multicast","receivers");
x.t("multicast","congestion");
x.t("multicast","nacks");
x.t("multicast","transport");
x.t("multicast","sessions");
x.t("multicast","constant");
x.t("multicast","time-to-live");
x.t("multicast","protocol");
x.t("multicast","dissemination");
x.t("multicast","applications");
x.t("multicast","loopback");
x.t("upon","packet-level");
x.t("watermark","progress");
x.t("architectures","targeted");
x.t("assumptions","limitations");
x.t("assumptions","section");
x.t("qualnet","mdp");
x.t("qualnet","user\u2019s");
x.t("variable","bit");
x.t("7.2.4.3","file");
x.t("7.2.4.3","format");
x.t("7.2.4.3","value");
x.t("7.2.4.3","values");
x.t("7.2.4.3","note");
x.t("(grtt)","option");
x.t("n/a","mdp");
x.t("n/a","setting");
x.t("7-15","command");
x.t("printed","statistics");
x.t("october","1999");
x.t("sessions","mdp");
x.t("sessions","total");
x.t("sessions","node");
x.t("sessions","defined");
x.t("sessions","minimal");
x.t("acknowledgment","requested");
x.t("acknowledgment","(ack)");
x.t("and/or","receivers");
x.t("(emcon)","receiver");
x.t("(emcon)","mode");
x.t("(emcon)","silent");
x.t("(traffic-gen)","single-host");
x.t("1024","unit");
x.t("1024","1024");
x.t("1024","amount");
x.t("less","memory");
x.t("collected","description");
x.t("collected","mdp");
x.t("collected","global");
x.t("(tos)","header");
x.t("greatest","round");
x.t("assumption","grtt");
x.t("loopback-enabled","optional");
x.t("null","refers");
x.t("null","path");
x.t("4.2.9","qualnet");
x.t("7-16","lists");
x.t("7-16","mdp");
x.t("7-16","cumulative");
x.t("sources","require");
x.t("sources","dynamic");
x.t("sources","optional");
x.t("amount","pre-allocated");
x.t("amount","allocated");
x.t("amount","memory");
x.t("amount","overhead");
x.t("amount","history");
x.t("synchronize","sources");
x.t("mechanisms","source");
x.t("variety","heterogeneous");
x.t("src-mdp-2.1b6","particular");
x.t("configuration","file");
x.t("configuration","(.app)");
x.t("configuration","running");
x.t("configuration","configure");
x.t("configuration","application");
x.t("configuration","(.config)");
x.t("include","following");
x.t("saving","less");
x.t("owb","transmissions");
x.t("core","efficient");
x.t("modules","multicast");
x.t("efficiency","automated");
x.t("efficiency","scalability");
x.t("additional","protocol");
x.t("running","mdp");
x.t("running","node");
x.t("running","application");
x.t("running","forward-app");
x.t("value","parameter");
x.t("value","description");
x.t("value","determines");
x.t("value","5000");
x.t("value","applies");
x.t("value","max-cnt");
x.t("value","8388608");
x.t("value","memory");
x.t("value","amount");
x.t("value","used");
x.t("value","type-of-service");
x.t("value","server's");
x.t("mdp_cmd_flush","messages");
x.t("mdp_cmd_flush","7.2.5");
x.t("usage","mdp");
x.t("usage","overruns");
x.t("joseph","macker");
x.t("adaptive","end-to-end");
x.t("specific","receivers");
x.t("specific","application");
x.t("implementation","mdp");
x.t("constant","bit");
x.t("declaration","global");
x.t("largest","number");
x.t("figure","7-5");
x.t("figure","7-6");
x.t("figure","7-7");
x.t("figure","7-8");
x.t("transmitted","source");
x.t("transmitted","data");
x.t("transmitted","setting");
x.t("maintaining","multicast");
x.t("generator","(forward-app)");
x.t("generator","(mcbr)");
x.t("generator","(traffic-gen)");
x.t("generator","(traffic-trace)");
x.t("generator","(super-app)");
x.t("acknowledgements","sent");
x.t("temporary","cache");
x.t("rates","used");
x.t("cumulative","statistics");
x.t("mdp_ack","messages");
x.t("receiver's","buffer");
x.t("models","7.2");
x.t("reliably","transmitted");
x.t("(ack)","receipt");
x.t("mdp_report","messages");
x.t("heard","default");
x.t("heard","segment-pool-size");
x.t("time-to-live","hop");
x.t("transfer","data");
x.t("transmissions","report-messages-enabled");
x.t("transmissions","suppressed");
x.t("transmissions","protocol");
x.t("nodes","sender");
x.t("nodes","able");
x.t("nodes","specified");
x.t("nodes","and/or");
x.t("nodes","transmit");
x.t("dynamic","hoc");
x.t("research","laboratory");
x.t("specifying","mdp");
x.t("specifying","different");
x.t("depth","default");
x.t("depth","parameters");
x.t("depth","affects");
x.t("data","missed");
x.t("data","objects");
x.t("data","receivers");
x.t("data","segments");
x.t("data","effective");
x.t("data","messages");
x.t("data","transmission");
x.t("data","parity");
x.t("data","multicast");
x.t("data","sources");
x.t("data","reliably");
x.t("data","7.2.4");
x.t("data","across");
x.t("data","object");
x.t("optional","parameter");
x.t("optional","pair");
x.t("optional","mode");
x.t("optional","list");
x.t("optional","triplet");
x.t("optional","string");
x.t("optional","unicast-based");
x.t("optional","feature");
x.t("optional","scope");
x.t("optional","adaptive");
x.t("optional","integer");
x.t("optional","positive");
x.t("optional","real");
x.t("optional","unicast");
x.t("module","functionality");
x.t("module","dissemination");
x.t("overhead","control");
x.t("overhead","above");
x.t("information","timing");
x.t("information","mdp");
x.t("information","allowing");
x.t("messaging","bandwidth");
x.t("archive","directory");
x.t("configure","mdp");
x.t("result","requirement");
x.t("result","memory");
x.t("result","data");
x.t("bit","rate");
x.t("defined","mdp");
x.t("defined","default");
x.t("defined","node");
x.t("defined","using");
x.t("ack","command");
x.t("ack","messages");
x.t("received","senders");
x.t("received","files");
x.t("received","mdp");
x.t("received","total");
x.t("received","objects");
x.t("received","receivers");
x.t("received","mdp_cmd_grtt_req");
x.t("appropriate","properties");
x.t("application","enabling");
x.t("application","layer");
x.t("application","mdp");
x.t("application","external");
x.t("application","file");
x.t("application","traffic");
x.t("application","retains");
x.t("application","session");
x.t("application","parameters");
x.t("application","priori");
x.t("application","configuration");
x.t("application","data");
x.t("application","application");
x.t("knowledge","participating");
x.t("join","leave");
x.t("backoff","avoid");
x.t("(traffic-trace)","single-host");
x.t("values","description");
x.t("values","mdp");
x.t("values","transmit");
x.t("values","used");
x.t("allocates","buffering");
x.t("runtime","performance");
x.t("case","multiple");
x.t("usages","combine");
x.t("heterogeneous","inter-network");
x.t("heterogeneous","network");
x.t("heterogeneous","wan");
x.t("efficient","negative");
x.t("retransmission","methods");
x.t("retransmission","offers");
x.t("above","pure");
x.t("feedback","mdp");
x.t("feedback","may");
x.t("single-host","client-server");
x.t("global","node");
x.t("described","table");
x.t("described","section");
x.t("overwritten","specifying");
x.t("bps","minimum");
x.t("bps","maximum");
x.t("mdp_parity","messages");
x.t("protocol","provide");
x.t("protocol","uses");
x.t("protocol","includes");
x.t("protocol","features");
x.t("protocol","allows");
x.t("protocol","permits");
x.t("protocol","(mdp)");
x.t("protocol","messages");
x.t("protocol","may");
x.t("protocol","transport");
x.t("protocol","message");
x.t("protocol","efficiency");
x.t("protocol","overhead");
x.t("protocol","7.2.1");
x.t("protocol","7.2");
x.t("7.2.1","description");
x.t("transmit","cache");
x.t("transmit","messages");
x.t("transmit","proactive");
x.t("transmit","object");
x.t("7.2.2.1","implemented");
x.t("emulation","mode");
x.t("navy","research");
x.t("(super-app)","single-host");
x.t("two","steps");
x.t("note","parameter");
x.t("note","default");
x.t("note","recommended");
x.t("note","smaller");
x.t("note","statistics");
x.t("integer","range");
x.t("integer","values");
x.t("history","stored");
x.t("otherwise","specify");
x.t("flush","command");
x.t("done","sender");
x.t("dissemination","selective");
x.t("dissemination","sources");
x.t("dissemination","protocol");
x.t("dissemination","service");
x.t("7.2","multicast");
x.t("based","reliable");
x.t("based","upon");
x.t("significant","performance");
x.t("repair","mechanism");
x.t("repair","packets");
x.t("repair","objects");
x.t("repair","requests");
x.t("repair","transmission");
x.t("algorithm","parameter");
x.t("algorithm","enabled");
x.t("algorithm","adjusts");
x.t("algorithm","adds");
x.t("algorithm","disabled");
x.t("optionally","configured");
x.t("positive","receipts");
x.t("positive","acknowledgemets");
x.t("positive","acknowledgment");
x.t("positive","acknowledgements");
x.t("positive","ack");
x.t("positive","acknowledge");
x.t("easily","synchronize");
x.t("7.2.2","features");
x.t("7.2.2.2","omitted");
x.t("applications","support");
x.t("applications","mdp");
x.t("applications","file");
x.t("applications","configuring");
x.t("applications","configured");
x.t("applications","running");
x.t("applications","constant");
x.t("forward-app","mdp");
x.t("forward-app","session");
x.t("tx-buffer-size","section");
x.t("tx-buffer-size","optional");
x.t("itself","without");
x.t("0.001","15.0");
x.t("sender's","maximum/normal");
x.t("server\u2019s","initial");
x.t("mdp's","congestion");
x.t("macker","brian");
x.t("7.2.2.3","assumptions");
x.t("file-based","traffic");
x.t("7.2.3","supplemental");
x.t("packet","payload");
x.t("packet","size");
x.t("packet","treated");
x.t("reached","first");
x.t("order","profile");
x.t("order","run");
x.t("occurrences","last");
x.t("real","range");
x.t("controls","server's");
x.t("service","require");
x.t("service","exists");
x.t("used","parameter");
x.t("used","normal");
x.t("used","mdp");
x.t("used","profile");
x.t("used","variety");
x.t("used","maintaining");
x.t("used","application");
x.t("used","forward-app");
x.t("used","mdp's");
x.t("used","mdp-enabled");
x.t("model","uses");
x.t("model","mdp");
x.t("model","provides");
x.t("model","conforms");
x.t("model","printed");
x.t("model","collected");
x.t("model","7.2.2.1");
x.t("model","behavior");
x.t("offers","significant");
x.t("individual","transport");
x.t("simulation","mode");
x.t("simulation","emulation");
x.t("simulation","note");
x.t("following","parameter");
x.t("following","files");
x.t("following","default");
x.t("following","format");
x.t("following","applications");
x.t("special","application");
x.t("7.2.4","command");
x.t("mdp-enabled","mdp");
x.t("mdp-enabled","specified");
x.t("mdp-enabled","scenario");
x.t("mdp-enabled","scope");
x.t("mdp-enabled","running");
x.t("mdp-enabled","application");
x.t("mdp-enabled","applications");
x.t("run","mdp");
x.t("run","forward-app");
x.t("smallest","number");
x.t("separated","commas");
x.t("resynchronization","done");
x.t("mainly","uses");
x.t("using","parameter");
x.t("using","probabilistic");
x.t("using","mdp");
x.t("using","archive");
x.t("conjunction","selective");
x.t("similarly","mdp");
x.t("qualifier","scope");
x.t("qualifier","mdp-enabled");
x.t("type-of-service","(tos)");
x.t("hearing","clients");
x.t("tabs","unicast-nack-enabled");
x.t("setting","parameter");
x.t("setting","mdp");
x.t("setting","parameters");
x.t("experimental","flow/congestion");
x.t("7.2.5","gui");
x.t("mdp_cmd_nack_adv","messages");
x.t("2000","naval");
x.t("across","scaled");
x.t("across","heterogeneous");
x.t("error-prone","wireless");
x.t("series","(stream)");
x.t("minimal","amount");
x.t("silent","receiver");
x.t("silent","mode");
x.t("silent","clients");
x.t("(vbr)","7.2.3");
x.t("statistics","table");
x.t("statistics","mdp");
x.t("statistics","file");
x.t("statistics","parameters");
x.t("statistics","collection");
x.t("statistics","statistic");
x.t("statistics","collected");
x.t("per","mdp");
x.t("per","second");
x.t("per","mdpv2");
x.t("128","default");
x.t("loopback","enabled");
x.t("reapir","partially");
x.t("levels","addition");
x.t("levels","section");
x.t("7.2.6","statistics");
x.t("adamson","reliable");
x.t("adamson","multicast");
x.t("therefore","algorithm");
x.t("pure","selective");
x.t("pure","nack-based");
x.t("acknowledge","command");
x.t("acknowledge","reception");
x.t("infrastructures","mobile");
x.t("simulate","behavior");
x.t("behavior","parameter");
x.t("behavior","bulky");
x.t("associated","profile");
x.t("associated","node");
x.t("limited","max-cnt");
x.t("occur","once");
x.t("without","prefix");
x.t("mdp_info","messages");
x.t("performed","total");
x.t("7.2.7","references");
x.t("draft-macker-rmt-mdp-00","october");
x.t("(stream)","transport");
x.t("bandwidth","efficiency");
x.t("(.config)","file");
x.t("server's","transmitting");
x.t("server's","initial");
x.t("positive-ack-with-report","optional");
x.t("labeled","mdp");
x.t("sent","senders");
x.t("sent","response");
x.t("sent","total");
x.t("sent","report-messages-enabled");
x.t("sent","receivers");
x.t("sent","mdp_cmd_grtt_req");
x.t("sent","server");
x.t("sent","unicast");
x.t("operational","factors");
x.t("conditions","operation");
x.t("buffer","default");
x.t("buffer","rx-buffer-size");
x.t("buffer","size");
x.t("buffer","usage");
x.t("pool","vector");
x.t("pool","size");
x.t("pool","overruns");
x.t("pool","maximum");
x.t("toolkit","ieee");
x.t("negative","acknowledgement");
x.t("(clients)","enforce");
x.t("concepts","parity-based");
x.t("server","may");
x.t("server","node");
x.t("server","heard");
x.t("server","application");
x.t("server","per");
x.t("dynamically","join");
x.t("unicast","messages");
x.t("unicast","feedback");
x.t("unicast","protocol");
x.t("object","archive-mode-enabled");
x.t("object","better");
x.t("object","unique");
x.t("object","transmission");
x.t("super","application");
x.t("bulky","data");
x.t("specify","mdp");
x.t("specify","default");
x.t("specify","model");
x.t("specify","mdf");
x.t("profile-name","name");
x.t("profile-name","profile-name");
x.t("seconds","initial");
x.t("exceeded","resending");
x.t("mdf","profile");
x.t("user\u2019s","guide");
}
