function FileData_Pairs(x)
{
x.t("2185","rfc");
x.t("2185","routing");
x.t("enabling","ipv6");
x.t("enabling","ipv6to4");
x.t("enabling","6to4");
x.t("interfaces","interface");
x.t("interfaces","dual-ip");
x.t("interfaces","assumed");
x.t("example","specification");
x.t("example","subnet");
x.t("statements","dual");
x.t("uniquely","specify");
x.t("3.5.4","gui");
x.t("included","qualnet");
x.t("internet","among");
x.t("internet","protocol");
x.t("determined","configuration");
x.t("protocols","inherited");
x.t("protocols","tunnel");
x.t("protocols","dual-ip");
x.t("protocols","3.5.3.1");
x.t("considerations","scenario");
x.t("parameter","table");
x.t("parameter","command");
x.t("parameter","network");
x.t("parameter","scenario");
x.t("parameter","scope");
x.t("parameter","enable");
x.t("parameter","fragment");
x.t("parameter","value");
x.t("parameter","declaration");
x.t("parameter","deprecated");
x.t("properties","editors");
x.t("properties","network");
x.t("properties","editor");
x.t("properties","specific");
x.t("3.5.5","statistics");
x.t("terminating","ipv4/ipv6");
x.t("tunnel-end","optional");
x.t("editors","similar");
x.t("3.5.6","scenarios");
x.t("allocation","hinden");
x.t("version","(ipv6)");
x.t("2008","2012");
x.t("rfc","2185");
x.t("rfc","1191");
x.t("rfc","4213");
x.t("rfc","3056");
x.t("rfc","2471");
x.t("rfc","2460");
x.t("rfc","2461");
x.t("rfc","2462");
x.t("within","ipv4");
x.t("co-existence","ipv6");
x.t("192.168.1.1","inherit-from");
x.t("192.168.1.1","192.168.2.2");
x.t("lists","sub-directory");
x.t("lists","dual");
x.t("3.5.7","references");
x.t("scalable","network");
x.t("description","ip-fragment-hold-time");
x.t("description","ipv6");
x.t("description","dual-stack/dual-stack-v4-v6");
x.t("description","tunnels");
x.t("description","format");
x.t("description","broadcast");
x.t("description","qualifier");
x.t("installed","base");
x.t("table","table");
x.t("table","maintained");
x.t("table","3.5.1.3");
x.t("table","3-25");
x.t("table","3-26");
x.t("table","3-27");
x.t("table","3-28");
x.t("table","3-29");
x.t("table","3-30");
x.t("create","automatic");
x.t("describes","implemented");
x.t("describes","configure");
x.t("static","multicast");
x.t("static","routes");
x.t("static","route");
x.t("node-id","tunnel-type");
x.t("optional-start-address","tunnel-end-address");
x.t("optional-start-address","optional");
x.t("february","2001");
x.t("1191","path");
x.t("layer","properties");
x.t("layer","functionalities");
x.t("layer","3.5.1.1");
x.t("layer","default");
x.t("layer","supporting");
x.t("layer","operation");
x.t("layer","section");
x.t("layer","models");
x.t("layer","general");
x.t("layer","including");
x.t("carry","ipv6");
x.t("carry","ipv4/ipv6");
x.t("mechanism","create");
x.t("mechanism","mechanism");
x.t("mechanism","network");
x.t("mechanism","provides");
x.t("mechanism","ipv6");
x.t("mechanism","configured");
x.t("mechanism","tunneling");
x.t("mechanism","6to4");
x.t("mechanism","two");
x.t("spans","last");
x.t("spans","segment");
x.t("spans","entire");
x.t("spans","first");
x.t("/scenarios/developer/dualip","table");
x.t("ability","interoperate");
x.t("ability","behave");
x.t("split-horizon","ripng");
x.t("tunnel/v6-tunnel/multiple-v6-tunnels","shows");
x.t("enabled","interface");
x.t("enabled","dual-stack");
x.t("enabled","tunnel");
x.t("enabled","node");
x.t("enabled","dual");
x.t("refers","chain");
x.t("user","enables");
x.t("sites","communicate");
x.t("tunnel-ending","ipv4/ipv6");
x.t("transmitting","ipv6");
x.t("last","segment");
x.t("uses","simple");
x.t("implemented","features");
x.t("line","parameter");
x.t("line","node-id");
x.t("line","equivalent");
x.t("line","tunnel");
x.t("line","configuration");
x.t("field","bits");
x.t("shows","functionality");
x.t("shows","dual-ip");
x.t("shows","dual");
x.t("locations","properties");
x.t("locations","interface");
x.t("tunnel/6to4-automatic-tunnel/6to4-automatic-tunnel","shows");
x.t("deployment","ipv6");
x.t("functionalities","configured");
x.t("functionalities","nodes");
x.t("provided","complete");
x.t("essentially","ipv6/ipv4");
x.t("interface","properties");
x.t("interface","static");
x.t("interface","transmitting");
x.t("interface","list");
x.t("interface","due");
x.t("interface","network");
x.t("interface","specified");
x.t("interface","ipv6-enable-6to4-tunneling");
x.t("interface","ipv6");
x.t("interface","6to4-enabled");
x.t("interface","tunnel");
x.t("interface","section");
x.t("interface","node");
x.t("interface","level");
x.t("interface","dual-ip");
x.t("interface","routing");
x.t("interface","note");
x.t("interface","sending/learning");
x.t("interface","3.5.3");
x.t("support","wired");
x.t("support","ipv4");
x.t("support","ipv6");
x.t("support","dual");
x.t("support","routing");
x.t("errors","security");
x.t("fragmented","scenarios");
x.t("statement","follow");
x.t("maintained","encapsulating");
x.t("type","v4-tunnel");
x.t("type","tunnel");
x.t("firewall","prohibits");
x.t("encapsulation","tunnel");
x.t("sample","scenarios");
x.t("tunnel/v4-tunnel/multiple-v4-tunnels","shows");
x.t("basic","transition");
x.t("packets","whereas");
x.t("packets","3.5.1.2");
x.t("packets","encapsulated");
x.t("packets","decapsulated");
x.t("packets","final");
x.t("packets","tunnel");
x.t("packets","intermediary");
x.t("packets","received");
x.t("packets","routing");
x.t("packets","themselves");
x.t("packets","dropped");
x.t("packets","sent");
x.t("whereas","ipv6");
x.t("public","ipv4");
x.t("wired","wireless");
x.t("wired","subnet");
x.t("fragmentation","handling");
x.t("mandatory","following");
x.t("time","range");
x.t("time","node");
x.t("hence","need");
x.t("tunnel/v6-tunnel/router-v6-router","shows");
x.t("december","1998");
x.t("1990","2008");
x.t("3.5.1.1","dual");
x.t("node's","tunnel-connecting");
x.t("connection","ipv6");
x.t("multiple","ipv4");
x.t("multiple","ipv6");
x.t("multiple","neighbors");
x.t("carpenter","moore");
x.t("relay","routers");
x.t("relay","router");
x.t("networks","interconnected");
x.t("networks","network-layer-statistics");
x.t("networks","unicast");
x.t("3.5.1.2","configured");
x.t("dual-stack","configured");
x.t("dual-stack","implementation");
x.t("interconnected","ipv4");
x.t("interconnected","intermediate");
x.t("one-to-one","tunnel");
x.t("limitations","dual-ip");
x.t("limitations","dual");
x.t("default","indicates");
x.t("default","device");
x.t("default","15s");
x.t("default","duration");
x.t("queue","released");
x.t("needed","format");
x.t("listed","table");
x.t("encapsulated","tunneling");
x.t("4213","rfc");
x.t("4213","basic");
x.t("among","large");
x.t("link","statements");
x.t("link","properties");
x.t("link","layer");
x.t("link","statement");
x.t("link","n64-2002:c0a8:6301:0002");
x.t("link","routing");
x.t("link","point-to-point");
x.t("interoperate","ipv6");
x.t("packet's","end-to-end");
x.t("3.5.1.3","example");
x.t("3.5.1.3","6to4");
x.t("virtual-link","3.5.2.2");
x.t("single","interface");
x.t("prefix","above");
x.t("ip-fragment-hold-time","dual-ip");
x.t("ip-fragment-hold-time","optional");
x.t("start","address");
x.t("details","configuring");
x.t("(ipv6)","narten");
x.t("(ipv6)","specification");
x.t("neighbor","discovery");
x.t("usually","known");
x.t("usually","done");
x.t("chain","intervening");
x.t("decapsulated","tunneling");
x.t("decapsulated","ending");
x.t("command","line");
x.t("fragments","held");
x.t("backward","compatibility");
x.t("2000::1","3.5.4");
x.t("2000::1","2001::2");
x.t("includes","several");
x.t("tunneled","relay");
x.t("tunneled","dual-ip");
x.t("postel","december");
x.t("trafficking","ability");
x.t("indicates","whether");
x.t("indicates","node");
x.t("security","considerations");
x.t("file","mandatory");
x.t("file","needed");
x.t("file","v4-tunnel");
x.t("file","name");
x.t("file","ipv6");
x.t("file","tunnel");
x.t("file","specifies");
x.t("file","tunnel-end-address");
x.t("file","format");
x.t("file","inherit_from");
x.t("file","node");
x.t("file","end");
x.t("file","v6-tunnel");
x.t("file","described");
x.t("file","following");
x.t("file","qualifier");
x.t("file","contains");
x.t("list","default");
x.t("tunnel-id","tunnel");
x.t("tunnel-id","tunnel-start-address");
x.t("need","configured");
x.t("discovery","version");
x.t("discovery","mogul");
x.t("datagram","within");
x.t("datagram","decapsulated");
x.t("datagram","starting");
x.t("datagram","harmonious");
x.t("datagram","attached");
x.t("datagram","route");
x.t("datagram","associated");
x.t("endpoint","due");
x.t("endpoint","ipv4");
x.t("endpoint","address");
x.t("endpoint","number");
x.t("endpoint","tunnel");
x.t("complete","ipv4");
x.t("v4-tunnel","192.168.1.1");
x.t("v4-tunnel","192.168.2.2");
x.t("v4-tunnel","indicating");
x.t("network","protocols");
x.t("network","3.5.7");
x.t("network","layer");
x.t("network","tunnel/6to4-automatic-tunnel/6to4-automatic-tunnel");
x.t("network","technologies");
x.t("network","tunnel/6to4-automatic-tunnel/6to4-relay-router");
x.t("network","ipv6");
x.t("network","address");
x.t("network","dual-stack/wireless-dual-stack");
x.t("network","multicast/v4-multicast-v6-tunnel");
x.t("network","6to4");
x.t("network","appropriate");
x.t("network","case");
x.t("network","structure");
x.t("network","global");
x.t("network","protocol");
x.t("network","using");
x.t("network","without");
x.t("network","pure");
x.t("simple","mechanism");
x.t("due","tunnel");
x.t("due","ripng");
x.t("limitation","distinguish");
x.t("bits","subnet");
x.t("entry","optional");
x.t("unless","static");
x.t("guide","details");
x.t("check","box");
x.t("1997","rfc");
x.t("testing","address");
x.t("become","successful");
x.t("large","installed");
x.t("supporting","ipv6");
x.t("domains","via");
x.t("traffic","ipv4");
x.t("traffic","6to4");
x.t("behave","virtual");
x.t("end-to-end","path");
x.t("end-to-end","propagation");
x.t("reachable","via");
x.t("features","tunnel");
x.t("features","omitted");
x.t("features","assumptions");
x.t("features","dual");
x.t("configuring","dual-ip");
x.t("configuring","statistics");
x.t("1998","rfc");
x.t("via","relay");
x.t("via","ipv4");
x.t("via","routing");
x.t("prohibits","traffic");
x.t("specified","static");
x.t("specified","following");
x.t("requirements","order");
x.t("ipv6-enable-6to4-tunneling","configuring");
x.t("ipv6-enable-6to4-tunneling","optional");
x.t("optional-address-for-tunnel-end","inherit-from");
x.t("inherit-from","v4-tunnel");
x.t("inherit-from","inherit-interface-index");
x.t("inherit-from","following");
x.t("mogul","deering");
x.t("maintain","compatibility");
x.t("wide","area");
x.t("operation","provided");
x.t("operation","ipv6");
x.t("operation","node");
x.t("infrastructure","carry");
x.t("infrastructure","type");
x.t("infrastructure","tunnel");
x.t("path","3.5.1.3");
x.t("path","ipv6");
x.t("path","mtu");
x.t("path","packet");
x.t("path","host-to-host");
x.t("range","default");
x.t("name","tunnel");
x.t("enclosed","entry");
x.t("box","labeled");
x.t("functionality","dual-ip");
x.t("tunnel/6to4-automatic-tunnel/6to4-relay-router","shows");
x.t("3.5","internet");
x.t("3056","connection");
x.t("3056","3.5.1");
x.t("wireless","network");
x.t("wireless","subnet");
x.t("enables","static");
x.t("ends","examples");
x.t("communication","dual-ip");
x.t("references","rfc");
x.t("base","ipv4");
x.t("ipv4","functionalities");
x.t("ipv4","firewall");
x.t("ipv4","packets");
x.t("ipv4","networks");
x.t("ipv4","datagram");
x.t("ipv4","network");
x.t("ipv4","infrastructure");
x.t("ipv4","ipv4");
x.t("ipv4","ipv6");
x.t("ipv4","address");
x.t("ipv4","tunnels");
x.t("ipv4","means");
x.t("ipv4","tunnel");
x.t("ipv4","tunnel's");
x.t("ipv4","hosts");
x.t("ipv4","compatibility");
x.t("ipv4","implementation");
x.t("ipv4","routers");
x.t("ipv4","nodes");
x.t("ipv4","clouds");
x.t("ipv4","routers/hosts");
x.t("ipv4","router");
x.t("ipv4","infrastructures");
x.t("ipv4","pure");
x.t("virtual","point-to-point");
x.t("direct","connectivity");
x.t("entered","line");
x.t("perform","following");
x.t("dependent","parameters");
x.t("provides","utilize");
x.t("zero","assigned");
x.t("parameters","parameter");
x.t("parameters","properties");
x.t("parameters","table");
x.t("parameters","listed");
x.t("parameters","entered");
x.t("parameters","perform");
x.t("parameters","gui");
x.t("parameters","section");
x.t("parameters","enable");
x.t("parameters","dual-ip");
x.t("parameters","specific");
x.t("parameters","configure");
x.t("parameters","statistics");
x.t("inherited","entry");
x.t("ipv6","internet");
x.t("ipv6","layer");
x.t("ipv6","sites");
x.t("ipv6","packets");
x.t("ipv6","networks");
x.t("ipv6","datagram");
x.t("ipv6","network");
x.t("ipv6","testing");
x.t("ipv6","domains");
x.t("ipv6","traffic");
x.t("ipv6","ipv4");
x.t("ipv6","address");
x.t("ipv6","stack");
x.t("ipv6","intermediate");
x.t("ipv6","space");
x.t("ipv6","tunnel");
x.t("ipv6","stateless");
x.t("ipv6","node");
x.t("ipv6","transition");
x.t("ipv6","running");
x.t("ipv6","hosts");
x.t("ipv6","nodes");
x.t("ipv6","6to4");
x.t("ipv6","routers/hosts");
x.t("ipv6","packet");
x.t("area","ipv4");
x.t("dual-stack/dual-stack-v4-v6","shows");
x.t("address","determined");
x.t("address","allocation");
x.t("address","indicates");
x.t("address","specified");
x.t("address","tunnel");
x.t("address","determination");
x.t("address","configuration");
x.t("address","autoconfiguration");
x.t("address","6to4");
x.t("address","(w.x.y.z)");
x.t("address","order");
x.t("address","used");
x.t("address","associated");
x.t("away","tunnel");
x.t("final","destination");
x.t("destination","ipv6/ipv4");
x.t("stack","interfaces");
x.t("stack","network");
x.t("stack","disabled");
x.t("deering","hinden");
x.t("deering","november");
x.t("segment","packet's");
x.t("segment","end-to-end");
x.t("entire","end-to-end");
x.t("icmpv4","errors");
x.t("3-25","shows");
x.t("3-25","dual");
x.t("gilligan","october");
x.t("aspects","ipv6");
x.t("addition","ipv6");
x.t("encapsulates","ipv4");
x.t("encapsulates","ipv6");
x.t("outgoing","interface");
x.t("device","properties");
x.t("3-26","command");
x.t("3-26","figure");
x.t("sub-directory","scenario");
x.t("narten","december");
x.t("narten","nordmark");
x.t("store","attached");
x.t("tunnels","line");
x.t("tunnels","support");
x.t("tunnels","encapsulation");
x.t("tunnels","node");
x.t("tunnels","note");
x.t("tunnels","bi-directional");
x.t("network-protocol","dual-ip");
x.t("192.168.2.2","192.168.1.1");
x.t("192.168.2.2","inherit-from");
x.t("[=dual-ip]","enable");
x.t("3-27","command");
x.t("encapsulating","datagram");
x.t("encapsulating","node");
x.t("configured","interface");
x.t("configured","ends");
x.t("configured","wireless");
x.t("configured","ipv4");
x.t("configured","ipv6");
x.t("configured","store");
x.t("configured","tunnel");
x.t("configured","ipv4-tunnel");
x.t("configured","tunneling");
x.t("configured","multicast");
x.t("configured","dual-ip");
x.t("configured","tunnel-type");
x.t("configured","configure");
x.t("configured","ipv4/ipv6");
x.t("point","address");
x.t("point","hop");
x.t("world-wide","ipv6");
x.t("mtu","fragmentation");
x.t("mtu","discovery");
x.t("igrp","routing");
x.t("tunnel-config-file","optional");
x.t("tunnel-config-file","setting");
x.t("equivalent","ipv6to4");
x.t("equivalent","dual-ip");
x.t("equivalent","statistics");
x.t("3-28","command");
x.t("automatic","tunneled");
x.t("automatic","tunnels");
x.t("automatic","tunneling");
x.t("representation","public");
x.t("delay","tunnel");
x.t("hold","time");
x.t("3-29","lists");
x.t("3-29","dual");
x.t("intermediate","network");
x.t("intermediate","ipv4");
x.t("means","enabling");
x.t("first","segment");
x.t("router-to-host","ipv6/ipv4");
x.t("mostly","one-to-one");
x.t("connecting","world-wide");
x.t("space","fragmented");
x.t("collection","network");
x.t("dual-stack/wireless-dual-stack","shows");
x.t("fink","postel");
x.t("communicate","ipv4");
x.t("communicate","native");
x.t("setup","communicate");
x.t("ip4/ipv6","nodes");
x.t("control","packets");
x.t("6to4-enabled","interfaces");
x.t("gui","parameter");
x.t("gui","network");
x.t("gui","configuring");
x.t("gui","configuration");
x.t("number","packets");
x.t("number","multicast");
x.t("number","broadcast");
x.t("number","unicast");
x.t("2012","scalable");
x.t("tunnel","optional-start-address");
x.t("tunnel","static");
x.t("tunnel","spans");
x.t("tunnel","tunnel/v6-tunnel/multiple-v6-tunnels");
x.t("tunnel","refers");
x.t("tunnel","user");
x.t("tunnel","essentially");
x.t("tunnel","type");
x.t("tunnel","tunnel/v4-tunnel/multiple-v4-tunnels");
x.t("tunnel","tunnel/v6-tunnel/router-v6-router");
x.t("tunnel","usually");
x.t("tunnel","tunnel-id");
x.t("tunnel","endpoint");
x.t("tunnel","entry");
x.t("tunnel","enclosed");
x.t("tunnel","ipv6");
x.t("tunnel","encapsulates");
x.t("tunnel","encapsulating");
x.t("tunnel","mtu");
x.t("tunnel","configured");
x.t("tunnel","setup");
x.t("tunnel","tunnel");
x.t("tunnel","optional-address-for-");
x.t("tunnel","node");
x.t("tunnel","end");
x.t("tunnel","enable");
x.t("tunnel","v6-tunnel");
x.t("tunnel","configuration");
x.t("tunnel","failure");
x.t("tunnel","send");
x.t("tunnel","end-point");
x.t("tunnel","optional");
x.t("tunnel","integer");
x.t("tunnel","special");
x.t("tunnel","one-hop");
x.t("tunnel","specify");
x.t("yyzz","colon-hexadecimal");
x.t("ipv4-tunnel","split-horizon");
x.t("inherit-interface-index","index");
x.t("inherit-interface-index","bandwidth");
x.t("indicating","ipv4");
x.t("indicating","ipv6");
x.t("optional-address-for-","tunnel-end");
x.t("maximum","bandwidth");
x.t("2471","ipv6");
x.t("hinden","december");
x.t("hinden","fink");
x.t("ipv6/ipv4","hosts");
x.t("ipv6/ipv4","routers");
x.t("ipv6/ipv4","nodes");
x.t("ipv6/ipv4","host");
x.t("ipv6/ipv4","router");
x.t("determination","packets");
x.t("hop","away");
x.t("receive","control");
x.t("unique","ipv4");
x.t("different","values");
x.t("whether","6to4");
x.t("whether","statistics");
x.t("specifies","tunnels");
x.t("editor","interfaces");
x.t("editor","table");
x.t("editor","network");
x.t("editor","parameters");
x.t("editor","node");
x.t("editor","general");
x.t("editor","point-to-point");
x.t("starting","node");
x.t("starting","ending");
x.t("ways","router-to-router");
x.t("scenario","description");
x.t("scenario","tunnel");
x.t("scenario","located");
x.t("scenario","configuration");
x.t("propagation-delay","end-to-end");
x.t("propagation-delay","propagation-delay");
x.t("propagation-delay","node");
x.t("index","interface");
x.t("stateless","address");
x.t("intervening","ipv4");
x.t("format","parameters");
x.t("format","tunnel");
x.t("format","wwxx");
x.t("format","described");
x.t("format","used");
x.t("section","describes");
x.t("section","1.2.1.1");
x.t("section","1.2.1.3");
x.t("section","4.2.9");
x.t("section","show");
x.t("section","3.5.3.1");
x.t("3.5.2.1","implemented");
x.t("handling","icmpv4");
x.t("15s","default");
x.t("held","queue");
x.t("filename","name");
x.t("tunnel-end-address","optional-address-for-tunnel-end");
x.t("tunnel-end-address","end");
x.t("directory","qualnet_home");
x.t("node","enabled");
x.t("node","support");
x.t("node","time");
x.t("node","default");
x.t("node","ip-fragment-hold-time");
x.t("node","list");
x.t("node","encapsulates");
x.t("node","tunnels");
x.t("node","configured");
x.t("node","tunnel-config-file");
x.t("node","tunnel");
x.t("node","filename");
x.t("node","node");
x.t("node","level");
x.t("node","configuration");
x.t("node","6to4");
x.t("node","global");
x.t("node","note");
x.t("node","network-layer-statistics");
x.t("node","subnet");
x.t("node","following");
x.t("node","using");
x.t("node","manually");
x.t("node","levels");
x.t("node","tunnel/v4-tunnel/host-router-host");
x.t("node","assumed");
x.t("explicit","tunnel");
x.t("assigned","sla");
x.t("assigned","subnet");
x.t("omitted","features");
x.t("3.5.2.2","omitted");
x.t("scope","parameter");
x.t("scope","interface");
x.t("scope","gui");
x.t("scope","configuration");
x.t("scope","global");
x.t("inherit_from","inherit-interface-index");
x.t("qualnet_home","/scenarios/developer/dualip");
x.t("moore","february");
x.t("transition","become");
x.t("transition","mechanisms");
x.t("transition","callon");
x.t("end","address");
x.t("end","point");
x.t("end","tunneling");
x.t("end","consider");
x.t("end","simulation");
x.t("scenarios","included");
x.t("scenarios","3.5.2.3");
x.t("scenarios","located");
x.t("scenarios","6to4");
x.t("scenarios","dual");
x.t("3.5.2.3","assumptions");
x.t("connected","single");
x.t("connected","network");
x.t("enable","static");
x.t("enable","interface");
x.t("enable","ipv6");
x.t("enable","ipv6to4");
x.t("enable","dual");
x.t("enable","statistics");
x.t("1.2.1.1","description");
x.t("follow","format");
x.t("steps","following");
x.t("tunneling","rfc");
x.t("tunneling","table");
x.t("tunneling","mechanism");
x.t("tunneling","enabled");
x.t("tunneling","support");
x.t("tunneling","interface");
x.t("tunneling","parameters");
x.t("tunneling","ipv6");
x.t("tunneling","configured");
x.t("tunneling","mostly");
x.t("tunneling","connecting");
x.t("tunneling","gui");
x.t("tunneling","figure");
x.t("tunneling","6to4");
x.t("tunneling","used");
x.t("tunnel's","end");
x.t("host-to-router","ipv6/ipv4");
x.t("level","support");
x.t("level","configure");
x.t("disabled","interface");
x.t("disabled","6to4");
x.t("ipv6to4","tunneling");
x.t("statistic","description");
x.t("located","table");
x.t("located","directory");
x.t("thomson","narten");
x.t("harmonious","co-existence");
x.t("known","ipv6/ipv4");
x.t("intermediary","ipv6/ipv4");
x.t("1.2.1.3","description");
x.t("simpson","december");
x.t("qualnet","scenario");
x.t("qualnet","qualnet");
x.t("qualnet","distribution");
x.t("qualnet","dual");
x.t("qualnet","user\u2019s");
x.t("effectively","treats");
x.t("communicating","ipv4");
x.t("wwxx","yyzz");
x.t("assumptions","limitations");
x.t("assumptions","section");
x.t("multicast","enabled");
x.t("multicast","packets");
x.t("multicast","tunnel");
x.t("multicast","routing");
x.t("multicast/v4-multicast-v6-tunnel","shows");
x.t("october","2005");
x.t("consider","tunnel");
x.t("collected","network");
x.t("collected","global");
x.t("v6-tunnel","2000::1");
x.t("v6-tunnel","indicating");
x.t("v6-tunnel","2001::2");
x.t("4.2.9","qualnet");
x.t("mechanisms","ipv6");
x.t("mechanisms","include");
x.t("include","dual");
x.t("include","following");
x.t("configuration","file");
x.t("configuration","network");
x.t("configuration","requirements");
x.t("configuration","parameters");
x.t("configuration","configured");
x.t("configuration","section");
x.t("configuration","enable");
x.t("configuration","information");
x.t("configuration","multicast/all-dual-stack");
x.t("configuration","(.config)");
x.t("variety","ways");
x.t("dual-ip","enabled");
x.t("dual-ip","check");
x.t("dual-ip","network");
x.t("dual-ip","dependent");
x.t("dual-ip","parameters");
x.t("dual-ip","gui");
x.t("dual-ip","tunnel");
x.t("dual-ip","node");
x.t("dual-ip","scope");
x.t("dual-ip","collected");
x.t("dual-ip","implementation");
x.t("dual-ip","host");
x.t("dual-ip","model");
x.t("dual-ip","router");
x.t("multihome","scenarios");
x.t("fragment","hold");
x.t("failure","number");
x.t("failure","tunneling");
x.t("hosts","interconnected");
x.t("hosts","tunnel");
x.t("hosts","routers");
x.t("facilitates","deployment");
x.t("running","ipv4");
x.t("running","olsrv2");
x.t("value","description");
x.t("2001::2","2000::1");
x.t("2001::2","v6-tunnel");
x.t("similar","network");
x.t("(dual-ip)","routers");
x.t("autoconfiguration","thomson");
x.t("compatibility","large");
x.t("compatibility","ipv4");
x.t("compatibility","mechanisms");
x.t("compatibility","tunnel-start-address");
x.t("implementation","addition");
x.t("implementation","starting");
x.t("implementation","multicast");
x.t("send","receive");
x.t("declaration","global");
x.t("specific","interface");
x.t("specific","wired");
x.t("specific","wireless");
x.t("specific","node");
x.t("specific","point-to-point");
x.t("figure","3-11");
x.t("figure","3-12");
x.t("end-point","3.5.6");
x.t("end-point","packets");
x.t("end-point","multicast");
x.t("end-point","broadcast");
x.t("end-point","unicast");
x.t("several","sample");
x.t("haskin","september");
x.t("maintaining","compatibility");
x.t("native","ipv6");
x.t("broadcast","packets");
x.t("models","3.5");
x.t("routers","enabled");
x.t("routers","interconnected");
x.t("routers","tunnel");
x.t("routers","connected");
x.t("routers","effectively");
x.t("routers","maintaining");
x.t("routers","along");
x.t("routers","nordmark");
x.t("routers","using");
x.t("takes","host-to-router");
x.t("olsrv2","eigrp");
x.t("subnets","configured");
x.t("tunnel-bandwidth","maximum");
x.t("tunnel-bandwidth","propagation-delay");
x.t("distribution","includes");
x.t("6to4","mechanism");
x.t("6to4","address");
x.t("6to4","automatic");
x.t("6to4","tunnel");
x.t("6to4","enable");
x.t("6to4","tunneling");
x.t("6to4","multihome");
x.t("6to4","routers");
x.t("6to4","subnets");
x.t("6to4","subnet");
x.t("nodes","support");
x.t("nodes","usually");
x.t("nodes","ipv4");
x.t("nodes","ipv6");
x.t("nodes","ip4/ipv6");
x.t("nodes","tunnel");
x.t("nodes","communicating");
x.t("nodes","dual");
x.t("along","route");
x.t("tunnel-type","tunnel-id");
x.t("tunnel-type","tunnel");
x.t("show","configure");
x.t("output","statistics");
x.t("callon","haskin");
x.t("dual","layer");
x.t("dual","ability");
x.t("dual","network");
x.t("dual","operation");
x.t("dual","3.5");
x.t("dual","parameters");
x.t("dual","stack");
x.t("dual","tunnel");
x.t("dual","scenarios");
x.t("dual","qualnet");
x.t("dual","include");
x.t("dual","configuration");
x.t("dual","model");
x.t("dual","statistics");
x.t("attached","ipv4");
x.t("information","encapsulating");
x.t("information","end");
x.t("host","tunnel");
x.t("host","dual-ip");
x.t("host","3.5.2");
x.t("clouds","uses");
x.t("clouds","carpenter");
x.t("optional","start");
x.t("optional","unless");
x.t("optional","address");
x.t("optional","outgoing");
x.t("optional","propagation-delay");
x.t("optional","scope");
x.t("optional","end");
x.t("optional","note");
x.t("optional","bandwidth");
x.t("configure","dual-ip");
x.t("configure","6to4");
x.t("n64-2002:c0a8:6301:0001","thru");
x.t("3-11","setting");
x.t("nordmark","gilligan");
x.t("nordmark","simpson");
x.t("eigrp","igrp");
x.t("n64-2002:c0a8:6301:0002","note");
x.t("examples","following");
x.t("3-12","enabling");
x.t("appropriate","properties");
x.t("received","type");
x.t("september","1997");
x.t("successful","ipv4/ipv6");
x.t("routing","protocols");
x.t("routing","table");
x.t("routing","aspects");
x.t("routing","tunnels");
x.t("routing","information");
x.t("routing","application");
x.t("routing","protocol");
x.t("application","ipv6");
x.t("themselves","case");
x.t("case","single");
x.t("case","tunnel");
x.t("ripng","limitation");
x.t("ripng","remains");
x.t("values","zero");
x.t("tunnel-start-address","optional-start-address");
x.t("tunnel-start-address","start");
x.t("propagation","delay");
x.t("global","unique");
x.t("global","node");
x.t("structure","6to4");
x.t("colon-hexadecimal","representation");
x.t("(w.x.y.z)","assigned");
x.t("described","table");
x.t("described","section");
x.t("above","subnet");
x.t("deprecated","backward");
x.t("specification","ipv4");
x.t("specification","ipv6");
x.t("specification","deering");
x.t("protocol","properties");
x.t("protocol","version");
x.t("protocol","[=dual-ip]");
x.t("protocol","dual-ip");
x.t("protocol","dual");
x.t("protocol","using");
x.t("done","via");
x.t("note","parameter");
x.t("note","tunnels");
x.t("note","different");
x.t("note","nodes");
x.t("note","6to4");
x.t("integer","uniquely");
x.t("two","ipv6");
x.t("november","1990");
x.t("based","rfc");
x.t("treats","wide");
x.t("router-to-router","ipv6/ipv4");
x.t("sending/learning","route");
x.t("cases","running");
x.t("connectivity","ipv6");
x.t("routers/hosts","carry");
x.t("routers/hosts","maintain");
x.t("routers/hosts","facilitates");
x.t("packet","terminating");
x.t("packet","ipv4");
x.t("packet","router-to-host");
x.t("packet","takes");
x.t("order","6to4");
x.t("sla","field");
x.t("network-layer-statistics","3.5.5");
x.t("network-layer-statistics","optional");
x.t("multicast/all-dual-stack","shows");
x.t("model","dual-stack");
x.t("model","communication");
x.t("model","3.5.2.1");
x.t("model","scenarios");
x.t("model","tunneling");
x.t("model","6to4");
x.t("model","based");
x.t("router","tunneled");
x.t("router","reachable");
x.t("router","infrastructure");
x.t("router","using");
x.t("ending","node");
x.t("ending","nodes");
x.t("used","parameter");
x.t("used","variety");
x.t("used","subnet");
x.t("host-to-host","ipv6/ipv4");
x.t("special","ipv6");
x.t("following","example");
x.t("following","parameter");
x.t("following","locations");
x.t("following","format");
x.t("following","steps");
x.t("following","cases");
x.t("subnet","properties");
x.t("subnet","interface");
x.t("subnet","wired");
x.t("subnet","link");
x.t("subnet","prefix");
x.t("subnet","network");
x.t("subnet","wireless");
x.t("subnet","host");
x.t("subnet","n64-2002:c0a8:6301:0001");
x.t("subnet","without");
x.t("neighbors","connected");
x.t("simulation","table");
x.t("using","multiple");
x.t("using","default");
x.t("using","ipv4");
x.t("using","ipv6");
x.t("using","configured");
x.t("bi-directional","hence");
x.t("bi-directional","trafficking");
x.t("routes","enabled");
x.t("routes","tunnel");
x.t("qualifier","network-protocol");
x.t("qualifier","scope");
x.t("duration","fragments");
x.t("general","properties");
x.t("setting","parameters");
x.t("setting","dual-ip");
x.t("dropped","type");
x.t("dropped","due");
x.t("ipv4/ipv6","node's");
x.t("ipv4/ipv6","datagram");
x.t("ipv4/ipv6","node");
x.t("ipv4/ipv6","(dual-ip)");
x.t("ipv4/ipv6","routers/hosts");
x.t("route","file");
x.t("route","ipv6");
x.t("route","optional");
x.t("route","packet");
x.t("manually","configured");
x.t("thru","link");
x.t("statistics","table");
x.t("statistics","parameters");
x.t("statistics","collection");
x.t("statistics","statistic");
x.t("statistics","collected");
x.t("statistics","dual-ip");
x.t("statistics","output");
x.t("statistics","(.stat)");
x.t("levels","section");
x.t("(.stat)","file");
x.t("3-30","lists");
x.t("3-30","dual");
x.t("2001","rfc");
x.t("infrastructures","encapsulating");
x.t("without","tunnel");
x.t("without","explicit");
x.t("associated","tunnel-ending");
x.t("associated","ipv4");
x.t("pure","ipv4");
x.t("pure","ipv6");
x.t("tunnel/v4-tunnel/host-router-host","shows");
x.t("2460","internet");
x.t("3.5.1","description");
x.t("point-to-point","link");
x.t("(.config)","file");
x.t("released","tunnel-config-file");
x.t("bandwidth","tunnel");
x.t("bandwidth","tunnel-bandwidth");
x.t("including","dual-ip");
x.t("labeled","network");
x.t("2461","neighbor");
x.t("utilize","ipv4");
x.t("3.5.2","features");
x.t("one-hop","virtual-link");
x.t("assumed","connection");
x.t("assumed","direct");
x.t("3.5.3.1","enabling");
x.t("3.5.3.1","ipv6-enable-6to4-tunneling");
x.t("3.5.3.1","format");
x.t("sent","type");
x.t("2462","ipv6");
x.t("unicast","packets");
x.t("unicast","point-to-point");
x.t("tunnel-connecting","interface");
x.t("remains","disabled");
x.t("distinguish","multiple");
x.t("specify","tunnel");
x.t("specify","optional");
x.t("3.5.3","command");
x.t("contains","description");
x.t("user\u2019s","guide");
x.t("2005","rfc");
}
