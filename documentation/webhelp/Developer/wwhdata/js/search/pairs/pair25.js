function FileData_Pairs(x)
{
x.t("root","agency");
x.t("root","node");
x.t("root","level");
x.t("root","class");
x.t("root","consist");
x.t("equal","maximum");
x.t("interfaces","interface");
x.t("interfaces","node");
x.t("descendants","described");
x.t("provide","assured");
x.t("available","6.1.2.2");
x.t("below","root");
x.t("below","non-leaf");
x.t("parameter","table");
x.t("parameter","cbq");
x.t("parameter","link");
x.t("parameter","command");
x.t("parameter","determines");
x.t("parameter","input");
x.t("parameter","scenario");
x.t("parameter","scope");
x.t("parameter","declaration");
x.t("parameter","values");
x.t("properties","editors");
x.t("properties","wireless");
x.t("properties","editor");
x.t("properties","specific");
x.t("transactions","networking");
x.t("allocation","resources");
x.t("shares","allocated");
x.t("just","below");
x.t("priorities","link");
x.t("under-limit","ancestors");
x.t("under-limit","cbq-top-level");
x.t("under-limit","immediate");
x.t("under-limit","least");
x.t("under-limit","bandwidth");
x.t("editors","similar");
x.t("2008","2012");
x.t("lists","cbq");
x.t("scalable","network");
x.t("description","cbq");
x.t("description","packets");
x.t("description","format");
x.t("description","link-sharing-structure-file");
x.t("description","qualifier");
x.t("describes","implemented");
x.t("leaf","agency");
x.t("leaf","classes");
x.t("table","table");
x.t("table","6.1.3.1");
x.t("table","6-1");
x.t("table","6-2");
x.t("table","6-3");
x.t("table","6-4");
x.t("table","6-5");
x.t("enqueued","interface");
x.t("impose","specific");
x.t("required","fields");
x.t("required","scope");
x.t("weighted","round");
x.t("regulated","link");
x.t("layer","schedulers");
x.t("queued","total");
x.t("cbq","scheduler");
x.t("cbq","uses");
x.t("cbq","top");
x.t("cbq","parameters");
x.t("cbq","gui");
x.t("cbq","scope");
x.t("cbq","configuration");
x.t("cbq","link-sharing");
x.t("cbq","controls");
x.t("cbq","model");
x.t("cbq","statistics");
x.t("ancestors","cbq-top-level");
x.t("ancestors","top-level");
x.t("scheduler","cbq");
x.t("scheduler","check");
x.t("scheduler","parameters");
x.t("scheduler","node");
x.t("scheduler","collected");
x.t("scheduler","include");
x.t("scheduler","forced");
x.t("scheduler","models");
x.t("scheduler","appropriate");
x.t("scheduler","link-sharing");
x.t("scheduler","global");
x.t("scheduler","class");
x.t("scheduler","bandwidth");
x.t("per-hop","end-to-end");
x.t("per-hop","basis");
x.t("user","parameters");
x.t("implemented","features");
x.t("line","parameter");
x.t("line","link");
x.t("line","equivalent");
x.t("line","configuration");
x.t("shows","cbq");
x.t("uses","manage");
x.t("weight","weight");
x.t("weight","borrow");
x.t("weight","agency");
x.t("locations","interface");
x.t("locations","wireless");
x.t("ieee/acm","transactions");
x.t("physical","link");
x.t("labelled","top-level");
x.t("interface","properties");
x.t("interface","packets");
x.t("interface","network");
x.t("interface","input-scheduler-statistics");
x.t("interface","cbq-top-level");
x.t("interface","cbq-link-sharing-guideline");
x.t("interface","address");
x.t("interface","number");
x.t("interface","agency");
x.t("interface","section");
x.t("interface","node");
x.t("interface","cbq-general-scheduler");
x.t("interface","scheduler-statistics");
x.t("interface","link-sharing-structure-file");
x.t("interface","specification");
x.t("interface","levels");
x.t("descendant","non-leaf");
x.t("descendant","specification");
x.t("aug","1995");
x.t("times","packets");
x.t("times","punished");
x.t("wrr","weighted");
x.t("wrr","packet");
x.t("descendant-i","descendant");
x.t("hence","agency");
x.t("packets","enqueued");
x.t("packets","queued");
x.t("packets","punished/suspended");
x.t("packets","punished");
x.t("packets","selected");
x.t("packets","number");
x.t("packets","dequeued");
x.t("suspended","max");
x.t("total","number");
x.t("limitations","root");
x.t("limitations","cbq");
x.t("queue","scheduler");
x.t("queue","particular");
x.t("queue","assigned");
x.t("automatically","search");
x.t("default","indicates");
x.t("default","device");
x.t("default","value");
x.t("default","values");
x.t("listed","table");
x.t("networks","ieee/acm");
x.t("among","different");
x.t("link","provide");
x.t("link","sharing");
x.t("link","bandwidth");
x.t("details","configuring");
x.t("punished/suspended","(seconds)");
x.t("command","line");
x.t("top","level");
x.t("file","line");
x.t("file","link");
x.t("file","name");
x.t("file","format");
x.t("file","node");
x.t("file","end");
x.t("file","described");
x.t("file","following");
x.t("file","qualifier");
x.t("file","containing");
x.t("file","contains");
x.t("list","default");
x.t("list","prr");
x.t("list","ancestor-only");
x.t("determines","maximum");
x.t("determines","whether");
x.t("indicates","whether");
x.t("descendant-n","node");
x.t("1995","2008");
x.t("sum","bandwidth");
x.t("assign","values");
x.t("robin","scheduling");
x.t("network","interfaces");
x.t("network","layer");
x.t("network","technologies");
x.t("network","interface");
x.t("guide","details");
x.t("check","box");
x.t("due","packets");
x.t("end-to-end","per");
x.t("features","none");
x.t("features","omitted");
x.t("features","assumptions");
x.t("features","class");
x.t("ip-queue-scheduler","cbq");
x.t("traffic","under-limit");
x.t("descendant-1","descendant-n");
x.t("false","default");
x.t("false","efficient");
x.t("configuring","statistics");
x.t("queues","properties");
x.t("queues","scheduler");
x.t("queues","default");
x.t("queues","prr");
x.t("queues","section");
x.t("specified","file");
x.t("specified","greater");
x.t("specified","using");
x.t("input-scheduler-statistics","output");
x.t("input-scheduler-statistics","optional");
x.t("true","false");
x.t("name","root");
x.t("name","cbq");
x.t("name","link");
x.t("name","agency");
x.t("6.1.3.1","cbq");
x.t("6.1.3.1","format");
x.t("6.1.3.1","cbq-general-scheduler");
x.t("range","parameter");
x.t("definition","required");
x.t("box","labeled");
x.t("wireless","subnet");
x.t("references","sally");
x.t("borrow","specifies");
x.t("borrow","value");
x.t("borrow","efficient");
x.t("borrow","bandwidth");
x.t("ancestor","under-limit");
x.t("ancestor","link");
x.t("cbq-top-level","required");
x.t("cbq-top-level","configuring");
x.t("cbq-top-level","generations");
x.t("perform","following");
x.t("dependent","parameters");
x.t("average","value");
x.t("none","6.1.2.3");
x.t("parameters","root");
x.t("parameters","parameter");
x.t("parameters","properties");
x.t("parameters","table");
x.t("parameters","listed");
x.t("parameters","link");
x.t("parameters","gui");
x.t("parameters","cannot");
x.t("parameters","section");
x.t("parameters","enable");
x.t("parameters","specific");
x.t("parameters","statistics");
x.t("punished","suspended");
x.t("punished","total");
x.t("networking","vol");
x.t("cbq-link-sharing-guideline","required");
x.t("cbq-link-sharing-guideline","setting");
x.t("basis","end-to-end");
x.t("basis","6.1.2");
x.t("basis","general");
x.t("search","root");
x.t("search","under-limit");
x.t("address","network");
x.t("dequeue","packets");
x.t("dequeue","requests");
x.t("selection","number");
x.t("weights","priorities");
x.t("immediate","ancestor");
x.t("fields","6.1.4");
x.t("resource","manager");
x.t("resource","management");
x.t("sharing","allocation");
x.t("sharing","scheduler");
x.t("sharing","physical");
x.t("sharing","agencies");
x.t("sharing","structure");
x.t("sharing","guideline");
x.t("flow","link");
x.t("flow","basis");
x.t("prr","wrr");
x.t("prr","prioritized");
x.t("round","robin");
x.t("input","user");
x.t("input","scheduler");
x.t("input","queue");
x.t("input","schedulers");
x.t("device","properties");
x.t("6.1","class-based");
x.t("selected","basis");
x.t("equivalent","cbq");
x.t("equivalent","link");
x.t("equivalent","statistics");
x.t("1.0","borrow");
x.t("delay","occurred");
x.t("long","excess");
x.t("top-level","determines");
x.t("top-level","specified");
x.t("top-level","case");
x.t("select","cbq");
x.t("allowed","borrow");
x.t("collection","input");
x.t("collection","output");
x.t("number","times");
x.t("number","packets");
x.t("number","default");
x.t("number","dequeue");
x.t("number","generations");
x.t("gui","parameter");
x.t("gui","perform");
x.t("gui","configuration");
x.t("sally","floyd");
x.t("2012","scalable");
x.t("parent","class");
x.t("maximum","number");
x.t("maximum","level");
x.t("maximum","value");
x.t("max","extradelay");
x.t("different","types");
x.t("different","agencies");
x.t("share","bandwidth");
x.t("particular","priority");
x.t("hop","end-to-end");
x.t("whether","agency");
x.t("whether","statistics");
x.t("whether","bandwidth");
x.t("agency","leaf");
x.t("agency","weight");
x.t("agency","descendant-i");
x.t("agency","descendant-1");
x.t("agency","specified");
x.t("agency","name");
x.t("agency","definition");
x.t("agency","allowed");
x.t("agency","value");
x.t("agency","application");
x.t("agency","efficient");
x.t("agency","priority");
x.t("specifies","whether");
x.t("cannot","omitted");
x.t("editor","interfaces");
x.t("editor","table");
x.t("editor","network");
x.t("editor","parameters");
x.t("editor","node");
x.t("editor","enable");
x.t("non-leaf","agency");
x.t("non-leaf","agencies");
x.t("non-leaf","class");
x.t("scenario","configuration");
x.t("requests","total");
x.t("requests","received");
x.t("section","describes");
x.t("section","6.1.3.1");
x.t("section","1.2.1.1");
x.t("section","1.2.1.3");
x.t("section","4.2.9");
x.t("section","show");
x.t("allocated","100");
x.t("allocated","class");
x.t("allocated","child");
x.t("format","cbq");
x.t("format","link");
x.t("format","agency");
x.t("format","node");
x.t("format","specifying");
x.t("format","priority");
x.t("format","used");
x.t("filename","name");
x.t("types","descendants");
x.t("omitted","hence");
x.t("omitted","features");
x.t("assigned","share");
x.t("scope","parameter");
x.t("scope","cbq");
x.t("scope","list");
x.t("scope","gui");
x.t("scope","filename");
x.t("scope","integer");
x.t("node","properties");
x.t("node","interface");
x.t("node","node");
x.t("node","configuration");
x.t("node","(s)");
x.t("node","values");
x.t("node","specification");
x.t("node","subnet");
x.t("node","following");
x.t("node","using");
x.t("ancestor-only","top-level");
x.t("ancestor-only","case");
x.t("dequeued","interface");
x.t("dequeued","total");
x.t("agencies","just");
x.t("agencies","per-hop");
x.t("agencies","labelled");
x.t("agencies","queue");
x.t("agencies","sharing");
x.t("agencies","per");
x.t("excess","bandwidth");
x.t("1.2.1.1","description");
x.t("steps","following");
x.t("enable","statistics");
x.t("end","simulation");
x.t("level","link");
x.t("level","input-scheduler-statistics");
x.t("level","dependent");
x.t("level","node");
x.t("level","6.1.3");
x.t("level","link-sharing");
x.t("level","otherwise");
x.t("statistic","description");
x.t("100","link");
x.t("1.2.1.3","description");
x.t("cbq-general-scheduler","required");
x.t("cbq-general-scheduler","link");
x.t("least","ancestors");
x.t("assumptions","limitations");
x.t("assumptions","section");
x.t("greater","equal");
x.t("greater","maximum");
x.t("qualnet","user\u2019s");
x.t("rules","distribution");
x.t("collected","input");
x.t("collected","output");
x.t("collected","global");
x.t("scheduler-statistics","6.1.5");
x.t("scheduler-statistics","optional");
x.t("4.2.9","qualnet");
x.t("extradelay","average");
x.t("extradelay","maximum");
x.t("occurred","due");
x.t("6.1.1","description");
x.t("configuration","file");
x.t("configuration","network");
x.t("configuration","select");
x.t("configuration","information");
x.t("configuration","configure");
x.t("configuration","(.config)");
x.t("include","following");
x.t("(seconds)","avg");
x.t("(seconds)","6.1.6");
x.t("6.1.2","features");
x.t("value","leaf");
x.t("value","weight");
x.t("value","false");
x.t("value","true");
x.t("value","1.0");
x.t("value","delay");
x.t("value","integer");
x.t("value","real");
x.t("similar","output");
x.t("specific","interface");
x.t("specific","node");
x.t("specific","rules");
x.t("6.1.3","command");
x.t("declaration","global");
x.t("figure","6-1");
x.t("figure","6-2");
x.t("avg","extradelay");
x.t("(cbq)","queues");
x.t("(cbq)","6.1");
x.t("(cbq)","6.1.1");
x.t("manager","used");
x.t("6.1.4","gui");
x.t("forced","packets");
x.t("models","6.1");
x.t("models","packet");
x.t("distribution","bandwidth");
x.t("valid","network");
x.t("valid","nodes");
x.t("(s)","agency");
x.t("6.1.5","statistics");
x.t("output","scheduler");
x.t("output","queue");
x.t("output","schedulers");
x.t("output","statistics");
x.t("nodes","interface");
x.t("nodes","input");
x.t("specifying","different");
x.t("show","configure");
x.t("6.1.6","references");
x.t("class-based","queuing");
x.t("link-sharing-structure-file","required");
x.t("link-sharing-structure-file","general");
x.t("information","weights");
x.t("optional","scope");
x.t("configure","cbq");
x.t("link-sharing","scheduler");
x.t("link-sharing","resource");
x.t("link-sharing","structure");
x.t("equals","bandwidth");
x.t("appropriate","properties");
x.t("received","selection");
x.t("values","description");
x.t("values","parameters");
x.t("values","nodes");
x.t("values","used");
x.t("case","class");
x.t("application","specified");
x.t("application","format");
x.t("structure","automatically");
x.t("structure","file");
x.t("structure","search");
x.t("global","node");
x.t("described","below");
x.t("described","table");
x.t("described","section");
x.t("prioritized","round");
x.t("above","under-limit");
x.t("specification","descendant");
x.t("specification","valid");
x.t("efficient","leaf");
x.t("efficient","agency");
x.t("efficient","specifies");
x.t("efficient","value");
x.t("queuing","dependent");
x.t("queuing","(cbq)");
x.t("classes","agencies");
x.t("classes","equals");
x.t("priority","weight");
x.t("priority","agency");
x.t("priority","value");
x.t("priority","priority");
x.t("protocol","wrr");
x.t("protocol","cbq-link-sharing-guideline");
x.t("integer","default");
x.t("integer","range");
x.t("schedulers","queues");
x.t("schedulers","6.1.3.1");
x.t("schedulers","scheduler-statistics");
x.t("otherwise","link");
x.t("itself","agencies");
x.t("generations","search");
x.t("generations","above");
x.t("based","queuing");
x.t("jacobson","link-sharing");
x.t("controls","allocation");
x.t("6-1","cbq");
x.t("6-1","shows");
x.t("6-1","setting");
x.t("packet","scheduler");
x.t("packet","networks");
x.t("unregulated","top-level");
x.t("unregulated","ancestor-only");
x.t("real","number");
x.t("used","parameter");
x.t("used","impose");
x.t("used","assign");
x.t("service","cbq");
x.t("model","6.1.2.1");
x.t("following","parameter");
x.t("following","locations");
x.t("following","format");
x.t("following","steps");
x.t("subnet","properties");
x.t("subnet","interface");
x.t("manage","queues");
x.t("6-2","command");
x.t("6-2","figure");
x.t("6-2","specify");
x.t("simulation","table");
x.t("van","jacobson");
x.t("management","models");
x.t("class","queue");
x.t("class","sum");
x.t("class","traffic");
x.t("class","borrow");
x.t("class","long");
x.t("class","allocated");
x.t("class","itself");
x.t("class","based");
x.t("qualifier","ip-queue-scheduler");
x.t("qualifier","scope");
x.t("containing","configuration");
x.t("scheduling","protocol");
x.t("using","default");
x.t("using","following");
x.t("setting","cbq");
x.t("setting","parameters");
x.t("general","scheduler");
x.t("guideline","table");
x.t("guideline","top");
x.t("guideline","ancestor");
x.t("guideline","parameters");
x.t("guideline","node");
x.t("6-3","command");
x.t("6-3","figure");
x.t("floyd","van");
x.t("assured","bandwidth");
x.t("per","flow");
x.t("per","hop");
x.t("statistics","table");
x.t("statistics","cbq");
x.t("statistics","parameters");
x.t("statistics","collection");
x.t("statistics","statistic");
x.t("statistics","collected");
x.t("statistics","output");
x.t("statistics","(.stat)");
x.t("levels","section");
x.t("6-4","command");
x.t("(.stat)","file");
x.t("6.1.2.1","implemented");
x.t("child","classes");
x.t("child","class");
x.t("6-5","lists");
x.t("6-5","cbq");
x.t("bandwidth","available");
x.t("bandwidth","shares");
x.t("bandwidth","regulated");
x.t("bandwidth","among");
x.t("bandwidth","parent");
x.t("bandwidth","non-leaf");
x.t("bandwidth","allocated");
x.t("bandwidth","service");
x.t("bandwidth","child");
x.t("bandwidth","remains");
x.t("6.1.2.2","omitted");
x.t("(.config)","file");
x.t("labeled","input");
x.t("labeled","output");
x.t("vol","aug");
x.t("6.1.2.3","assumptions");
x.t("resources","per-hop");
x.t("resources","specified");
x.t("consist","non-leaf");
x.t("remains","unregulated");
x.t("contains","configuration");
x.t("specify","link");
x.t("user\u2019s","guide");
}
