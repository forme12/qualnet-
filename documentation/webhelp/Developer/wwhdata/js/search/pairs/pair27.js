function FileData_Pairs(x)
{
x.t("equal","minimum");
x.t("equal","larger");
x.t("included","parameter");
x.t("included","qualnet");
x.t("interfaces","interface");
x.t("transactions","networking");
x.t("else","dropped");
x.t("parameter","table");
x.t("parameter","queue");
x.t("parameter","command");
x.t("parameter","input");
x.t("parameter","scenario");
x.t("parameter","scope");
x.t("parameter","value");
x.t("parameter","declaration");
x.t("properties","editors");
x.t("properties","wireless");
x.t("properties","editor");
x.t("properties","specific");
x.t("below","average");
x.t("rather","subsequent");
x.t("editors","similar");
x.t("right","panel");
x.t("ever","reached");
x.t("2008","2012");
x.t("incipient","congestion");
x.t("lists","sub-directory");
x.t("lists","red");
x.t("lists","configuration");
x.t("full","average");
x.t("full","next");
x.t("forcefully","total");
x.t("forcefully","due");
x.t("scalable","network");
x.t("description","ip-queue-priority-queue-size");
x.t("description","total");
x.t("description","random");
x.t("description","format");
x.t("description","queue/red");
x.t("description","qualifier");
x.t("estimate","queue");
x.t("describes","implemented");
x.t("describes","configure");
x.t("table","table");
x.t("table","6-11");
x.t("table","6-12");
x.t("table","6-13");
x.t("table","6-14");
x.t("table","6-15");
x.t("august","1993");
x.t("source","tcp");
x.t("instance","included");
x.t("instance","specification");
x.t("red-small-packet-transmission-time","configuring");
x.t("red-small-packet-transmission-time","optional");
x.t("layer","schedulers");
x.t("queued","total");
x.t("weighted","packet");
x.t("synchronization","maintaining");
x.t("0.0","1.0");
x.t("scheduler","models");
x.t("current","router");
x.t("enabled","packets");
x.t("ieee/acm","transactions");
x.t("drops","packets");
x.t("drops","begins");
x.t("weight","determines");
x.t("weight","node");
x.t("weight","used");
x.t("uses","time");
x.t("implemented","features");
x.t("line","parameter");
x.t("line","equivalent");
x.t("line","configuration");
x.t("locations","interface");
x.t("locations","wireless");
x.t("shows","packets");
x.t("shows","behavior");
x.t("handled","red");
x.t("early","drops");
x.t("early","detection");
x.t("throttles","back");
x.t("calculates","average");
x.t("interface","properties");
x.t("interface","instance");
x.t("interface","red-small-packet-transmission-time");
x.t("interface","ip-queue-priority-queue-size");
x.t("interface","network");
x.t("interface","red-min-threshold");
x.t("interface","queue-satistics");
x.t("interface","red-max-threshold");
x.t("interface","section");
x.t("interface","scope");
x.t("interface","node");
x.t("interface","input-queue-satistics");
x.t("interface","red-queue-weight");
x.t("interface","levels");
x.t("interface","red-max-probability");
x.t("6-11","lists");
x.t("6-11","red");
x.t("open","array");
x.t("type","red");
x.t("6-12","command");
x.t("6-12","figure");
x.t("sample","scenarios");
x.t("packets","queued");
x.t("packets","current");
x.t("packets","handled");
x.t("packets","queue");
x.t("packets","marked");
x.t("packets","minimum");
x.t("packets","maximum");
x.t("packets","dequeued");
x.t("packets","randomly");
x.t("packets","simulation");
x.t("packets","dropped");
x.t("time","queue");
x.t("time","range");
x.t("time","node");
x.t("time","spent");
x.t("time","transmit");
x.t("time","seconds");
x.t("left","panel");
x.t("6-13","command");
x.t("(red)","queue");
x.t("i.e","number");
x.t("ip-queue-priority-queue-size","minimum");
x.t("ip-queue-priority-queue-size","optional");
x.t("6-14","lists");
x.t("6-14","red");
x.t("total","packets");
x.t("total","number");
x.t("arrives","ecn/red/red-with-ecn");
x.t("queue","full");
x.t("queue","drops");
x.t("queue","weight");
x.t("queue","type");
x.t("queue","size");
x.t("queue","longest");
x.t("queue","queues");
x.t("queue","average");
x.t("queue","parameters");
x.t("queue","queue-statistics");
x.t("queue","lengths");
x.t("queue","sizes");
x.t("queue","configured");
x.t("queue","6.3");
x.t("queue","6.3.4");
x.t("queue","length");
x.t("queue","discipline");
x.t("queue","index");
x.t("queue","(bytes)");
x.t("queue","scenarios");
x.t("queue","qualnet");
x.t("queue","greater");
x.t("queue","(seconds)");
x.t("queue","bottleneck");
x.t("queue","averaging");
x.t("queue","appropriate");
x.t("queue","global");
x.t("queue","packet");
x.t("queue","model");
x.t("queue","statistics");
x.t("queue","completely");
x.t("queue","seconds");
x.t("probabilities","rather");
x.t("default","0.02");
x.t("default","indicates");
x.t("default","ecn");
x.t("default","device");
x.t("default","unit");
x.t("default","150000");
x.t("default","10ms");
x.t("default","0.002");
x.t("back","based");
x.t("limitations","none");
x.t("limitations","red");
x.t("listed","table");
x.t("6-15","lists");
x.t("6-15","red");
x.t("1993","2008");
x.t("1993","6.3.1");
x.t("details","configuring");
x.t("size","equal");
x.t("size","ever");
x.t("size","i.e");
x.t("size","red-min-threshold");
x.t("size","bytes");
x.t("size","(bytes)");
x.t("size","node");
x.t("size","less");
x.t("size","above");
x.t("size","algorithm");
x.t("size","packet");
x.t("command","line");
x.t("includes","several");
x.t("determines","bias");
x.t("determines","average");
x.t("file","end");
x.t("file","qualifier");
x.t("0.02","maximum");
x.t("list","default");
x.t("indicates","whether");
x.t("longest","time");
x.t("longest","delay");
x.t("bursty","flows");
x.t("during","idle");
x.t("sum","weighted");
x.t("red-min-threshold","maximum");
x.t("red-min-threshold","optional");
x.t("input-queue-statistics","optional");
x.t("network","layer");
x.t("network","technologies");
x.t("network","longest");
x.t("guide","details");
x.t("check","box");
x.t("due","queue");
x.t("due","reasons");
x.t("(ecn)","ecn");
x.t("tcp","traffic");
x.t("traffic","throttles");
x.t("bias","against");
x.t("bias","towards");
x.t("possibility","random");
x.t("features","average");
x.t("features","none");
x.t("features","omitted");
x.t("features","assumptions");
x.t("configuring","red");
x.t("configuring","statistics");
x.t("reasons","queue");
x.t("reachable","packets");
x.t("queues","properties");
x.t("queues","red-small-packet-transmission-time");
x.t("queues","scheduler");
x.t("queues","interface");
x.t("queues","default");
x.t("queues","check");
x.t("queues","desired");
x.t("queues","section");
x.t("queues","click");
x.t("desired","value");
x.t("enclosed","square");
x.t("range","0.0");
x.t("range","default");
x.t("range","number");
x.t("box","labeled");
x.t("avoidance","ieee/acm");
x.t("wireless","subnet");
x.t("follows","average");
x.t("references","sally");
x.t("average","time");
x.t("average","queue");
x.t("average","during");
x.t("average","larger");
x.t("brackets","range");
x.t("bytes","time");
x.t("bytes","queue");
x.t("perform","following");
x.t("dependent","parameters");
x.t("networking","august");
x.t("none","6.3.2.3");
x.t("none","6.3.3");
x.t("parameters","parameter");
x.t("parameters","properties");
x.t("parameters","table");
x.t("parameters","listed");
x.t("parameters","perform");
x.t("parameters","red");
x.t("parameters","gui");
x.t("parameters","enable");
x.t("parameters","specific");
x.t("parameters","configure");
x.t("parameters","statistics");
x.t("determine","bias");
x.t("queue-statistics","optional");
x.t("ecn","enabled");
x.t("ecn","packets");
x.t("ecn","total");
x.t("ecn","default");
x.t("ecn","6.3.7");
x.t("ecn","ecn/red/red-without-ecn");
x.t("ecn","capable");
x.t("address","incipient");
x.t("address","global");
x.t("attempts","address");
x.t("empty","6.3.2");
x.t("array","editor");
x.t("/scenarios/developer","table");
x.t("marked","ecn");
x.t("marked","instead");
x.t("input","queue");
x.t("input","queues");
x.t("device","properties");
x.t("sub-directory","scenario");
x.t("random","early");
x.t("congestion","avoidance");
x.t("congestion","notification");
x.t("congestion","algorithm");
x.t("recent","queue");
x.t("recent","queues");
x.t("recent","historical");
x.t("lengths","calculating");
x.t("small","packet");
x.t("6.3.1","description");
x.t("sizes","packets");
x.t("sizes","order");
x.t("6.3.2.1","implemented");
x.t("configured","right");
x.t("equivalent","red");
x.t("equivalent","statistics");
x.t("6.3","random");
x.t("red","queue");
x.t("red","dependent");
x.t("red","parameters");
x.t("red","ecn");
x.t("red","gui");
x.t("red","index");
x.t("red","scenarios");
x.t("red","collected");
x.t("red","congestion-avoidance");
x.t("red","statistics");
x.t("red","without");
x.t("calculating","average");
x.t("6.3.2","features");
x.t("6.3.2.2","omitted");
x.t("1.0","default");
x.t("next","hop");
x.t("delay","suffered");
x.t("minimum","threshold");
x.t("6.3.2.3","assumptions");
x.t("6.3.3","command");
x.t("unit","packets");
x.t("unit","bytes");
x.t("button","value");
x.t("select","index");
x.t("collection","input");
x.t("collection","output");
x.t("sally","floyd");
x.t("number","packets");
x.t("number","queues");
x.t("number","output");
x.t("number","priority");
x.t("6.3.4","gui");
x.t("gui","parameter");
x.t("gui","configuring");
x.t("gui","configuration");
x.t("queue-satistics","6.3.5");
x.t("2012","scalable");
x.t("maximum","threshold");
x.t("maximum","probability");
x.t("6.3.5","statistics");
x.t("length","sum");
x.t("length","(bytes)");
x.t("length","calculated");
x.t("against","bursty");
x.t("whether","statistics");
x.t("editor","interfaces");
x.t("editor","table");
x.t("editor","left");
x.t("editor","network");
x.t("editor","parameters");
x.t("editor","button");
x.t("editor","select");
x.t("editor","node");
x.t("editor","enable");
x.t("hop","reachable");
x.t("6.3.6","scenarios");
x.t("congested","router");
x.t("instead","dropped");
x.t("begins","red");
x.t("discipline","include");
x.t("scenario","description");
x.t("scenario","located");
x.t("scenario","configuration");
x.t("index","parameter");
x.t("index","time");
x.t("index","queue");
x.t("index","red");
x.t("index","integer");
x.t("index","real");
x.t("red-max-threshold","maximum");
x.t("red-max-threshold","optional");
x.t("(bytes)","total");
x.t("(bytes)","average");
x.t("(bytes)","largest");
x.t("(bytes)","note");
x.t("6.3.7","references");
x.t("section","describes");
x.t("section","1.2.1.1");
x.t("section","1.2.1.3");
x.t("section","4.2.9");
x.t("section","show");
x.t("format","used");
x.t("opens","array");
x.t("directory","qualnet_home");
x.t("explicit","congestion");
x.t("omitted","features");
x.t("ip-queue-type","index");
x.t("scope","parameter");
x.t("scope","list");
x.t("scope","red");
x.t("scope","gui");
x.t("scope","instances");
x.t("node","properties");
x.t("node","node");
x.t("node","configuration");
x.t("node","subnet");
x.t("node","following");
x.t("node","using");
x.t("transmission","time");
x.t("input-queue-satistics","output");
x.t("dequeued","total");
x.t("qualnet_home","/scenarios/developer");
x.t("ecn/red/red-without-ecn","shows");
x.t("notification","(ecn)");
x.t("notification","red");
x.t("1.2.1.1","description");
x.t("steps","following");
x.t("enable","statistics");
x.t("end","simulation");
x.t("scenarios","included");
x.t("scenarios","red");
x.t("scenarios","located");
x.t("paper","sally");
x.t("statistic","description");
x.t("suffered","packet");
x.t("located","table");
x.t("located","directory");
x.t("threshold","packets");
x.t("threshold","queue");
x.t("threshold","node");
x.t("threshold","less");
x.t("square","brackets");
x.t("1.2.1.3","description");
x.t("qualnet","red");
x.t("qualnet","scenario");
x.t("qualnet","qualnet");
x.t("qualnet","distribution");
x.t("qualnet","user\u2019s");
x.t("greater","equal");
x.t("greater","bias");
x.t("historical","queue");
x.t("idle","periods");
x.t("assumptions","limitations");
x.t("assumptions","section");
x.t("150000","unit");
x.t("randomly","dropped");
x.t("click","open");
x.t("spent","packets");
x.t("spent","queue");
x.t("spent","packet");
x.t("fairness","across");
x.t("less","number");
x.t("less","maximum");
x.t("collected","input");
x.t("collected","output");
x.t("collected","global");
x.t("4.2.9","qualnet");
x.t("congestion-avoidance","algorithm");
x.t("configuration","network");
x.t("configuration","parameters");
x.t("configuration","section");
x.t("configuration","(.config)");
x.t("configuration","specify");
x.t("include","following");
x.t("instances","queue");
x.t("(seconds)","longest");
x.t("(seconds)","note");
x.t("(seconds)","peak");
x.t("value","description");
x.t("value","greater");
x.t("value","figure");
x.t("value","column");
x.t("similar","number");
x.t("periods","queue");
x.t("periods","input-queue-statistics");
x.t("declaration","applicable");
x.t("declaration","global");
x.t("red-queue-weight","small");
x.t("red-queue-weight","optional");
x.t("specific","interface");
x.t("specific","node");
x.t("figure","6\u20115");
x.t("figure","6-6");
x.t("largest","size");
x.t("several","sample");
x.t("maintaining","fairness");
x.t("queue/red","shows");
x.t("bottleneck","condition");
x.t("condition","arrives");
x.t("models","6.3");
x.t("averaging","algorithm");
x.t("6\u20115","setting");
x.t("panel","queue");
x.t("panel","array");
x.t("capable","network");
x.t("distribution","includes");
x.t("drop","probabilities");
x.t("applicable","queues");
x.t("applicable","enclosed");
x.t("larger","number");
x.t("larger","value");
x.t("10ms","typical");
x.t("output","queue");
x.t("output","queues");
x.t("output","statistics");
x.t("show","configure");
x.t("data","flows");
x.t("typical","time");
x.t("typical","small");
x.t("optional","instance");
x.t("optional","scope");
x.t("configure","red");
x.t("detection","(red)");
x.t("detection","congestion");
x.t("appropriate","properties");
x.t("global","synchronization");
x.t("global","node");
x.t("above","maximum");
x.t("specification","optional");
x.t("transmit","small");
x.t("transmit","typical");
x.t("priority","queues");
x.t("integer","range");
x.t("schedulers","queues");
x.t("column","opens");
x.t("note","below");
x.t("note","average");
x.t("based","notification");
x.t("based","drop");
x.t("based","following");
x.t("jacobson","random");
x.t("algorithm","uses");
x.t("algorithm","calculates");
x.t("algorithm","determines");
x.t("algorithm","attempts");
x.t("order","address");
x.t("packet","estimate");
x.t("packet","queue");
x.t("packet","size");
x.t("packet","sizes");
x.t("packet","transmission");
x.t("packet","(seconds)");
x.t("packet","used");
x.t("packet","dropped");
x.t("real","range");
x.t("0.002","queue");
x.t("reached","queue");
x.t("model","6.3.2.1");
x.t("model","section");
x.t("model","based");
x.t("following","parameter");
x.t("following","locations");
x.t("following","steps");
x.t("following","paper");
x.t("van","jacobson");
x.t("router","explicit");
x.t("router","based");
x.t("subnet","properties");
x.t("subnet","interface");
x.t("used","parameter");
x.t("used","estimate");
x.t("used","determine");
x.t("probability","node");
x.t("probability","packet");
x.t("simulation","table");
x.t("simulation","time");
x.t("floyd","van");
x.t("dropped","else");
x.t("dropped","forcefully");
x.t("dropped","source");
x.t("dropped","total");
x.t("dropped","due");
x.t("dropped","ecn");
x.t("dropped","6.3.2.2");
x.t("dropped","red-max-threshold");
x.t("dropped","red-queue-weight");
x.t("dropped","red-max-probability");
x.t("qualifier","ip-queue-type");
x.t("qualifier","scope");
x.t("using","default");
x.t("setting","red");
x.t("setting","number");
x.t("calculated","follows");
x.t("subsequent","congested");
x.t("across","data");
x.t("statistics","table");
x.t("statistics","parameters");
x.t("statistics","red");
x.t("statistics","collection");
x.t("statistics","statistic");
x.t("statistics","collected");
x.t("statistics","output");
x.t("statistics","(.stat)");
x.t("levels","section");
x.t("(.stat)","file");
x.t("without","bias");
x.t("without","ecn");
x.t("towards","recent");
x.t("red-max-probability","red");
x.t("red-max-probability","optional");
x.t("behavior","red");
x.t("(.config)","file");
x.t("6-6","setting");
x.t("labeled","input");
x.t("labeled","output");
x.t("peak","queue");
x.t("completely","empty");
x.t("ecn/red/red-with-ecn","shows");
x.t("flows","possibility");
x.t("flows","without");
x.t("specify","red");
x.t("user\u2019s","guide");
x.t("seconds","weighted");
x.t("seconds","6.3.6");
}
