function FileData_Pairs(x)
{
x.t("equal","slots");
x.t("timers","node");
x.t("interfaces","properties");
x.t("passed","upper");
x.t("below","packet");
x.t("senses","channel");
x.t("parameter","table");
x.t("parameter","channel");
x.t("parameter","mac");
x.t("parameter","command");
x.t("parameter","slot");
x.t("parameter","scenario");
x.t("parameter","scope");
x.t("parameter","value");
x.t("parameter","declaration");
x.t("parameter","used");
x.t("protocols","including");
x.t("properties","editors");
x.t("properties","wireless");
x.t("properties","editor");
x.t("properties","specific");
x.t("editors","similar");
x.t("2008","2012");
x.t("within","collision");
x.t("clear","channel");
x.t("lists","generic");
x.t("shown","figure");
x.t("scalable","network");
x.t("description","packets");
x.t("description","channel-access");
x.t("description","generic");
x.t("description","format");
x.t("description","qualifier");
x.t("sending","data");
x.t("sending","unicast");
x.t("mac-protocol","genericmac");
x.t("table","table");
x.t("table","4-68");
x.t("table","4-69");
x.t("table","4-70");
x.t("table","4-71");
x.t("table","4-72");
x.t("rts-cts","transmission");
x.t("rts-cts","enable");
x.t("rts-cts","optional");
x.t("describes","configure");
x.t("layer","protocols");
x.t("layer","properties");
x.t("layer","packets");
x.t("layer","section");
x.t("layer","models");
x.t("until","data");
x.t("line","parameter");
x.t("line","divided");
x.t("line","equivalent");
x.t("line","configuration");
x.t("transmitting","packet");
x.t("locations","wireless");
x.t("shows","generic");
x.t("configurable","mac");
x.t("timer","within");
x.t("timer","slotted");
x.t("timer","works");
x.t("timer","expires");
x.t("timer","repeated");
x.t("timer","resumed");
x.t("timer","backoff");
x.t("timer","paused");
x.t("interface","rts-cts");
x.t("interface","channel-access");
x.t("interface","mac");
x.t("interface","slot");
x.t("interface","retry-limit");
x.t("interface","section");
x.t("interface","node");
x.t("interface","ack");
x.t("interface","using");
x.t("interface","levels");
x.t("interface","mac-layer-statistics");
x.t("mode","list");
x.t("mode","parameters");
x.t("mode","node");
x.t("mode","slot-csma");
x.t("retry","time");
x.t("retry","limit");
x.t("time","2008");
x.t("time","line");
x.t("time","slot");
x.t("time","range");
x.t("time","randomly");
x.t("time","interval");
x.t("time","future");
x.t("time","duration");
x.t("packets","passed");
x.t("packets","network");
x.t("packets","lost");
x.t("packets","dropped");
x.t("multiple","access");
x.t("channel-access","enable");
x.t("channel-access","slot-csma");
x.t("channel-access","optional");
x.t("acknowledgement","frame");
x.t("mac","layer");
x.t("mac","mac");
x.t("mac","check");
x.t("mac","dependent");
x.t("mac","parameters");
x.t("mac","4.7.3");
x.t("mac","appropriate");
x.t("mac","global");
x.t("mac","protocol");
x.t("mac","model");
x.t("mac","statistics");
x.t("channel","sending");
x.t("channel","channel");
x.t("channel","psma");
x.t("channel","access");
x.t("channel","again");
x.t("channel","found");
x.t("channel","during");
x.t("channel","availability");
x.t("channel","busy");
x.t("channel","4.7.2");
x.t("channel","idle");
x.t("channel","randomly");
x.t("channel","becomes");
x.t("channel","sensing");
x.t("channel","carrier");
x.t("increases","exponentially");
x.t("slots","pre-determined");
x.t("slots","policy");
x.t("psma","csma");
x.t("psma","specifies");
x.t("psma","slot-csma");
x.t("psma","packet");
x.t("default","psma");
x.t("default","indicates");
x.t("default","enables");
x.t("default","device");
x.t("default","specifies");
x.t("default","10ms");
x.t("listed","table");
x.t("access","mode");
x.t("access","channel");
x.t("access","policies");
x.t("access","(psma)");
x.t("access","csma");
x.t("access","(csma)");
x.t("access","csma-ca");
x.t("access","collision");
x.t("access","rts/cts");
x.t("start","new");
x.t("new","time");
x.t("details","configuring");
x.t("command","line");
x.t("4-68","lists");
x.t("4-68","generic");
x.t("frame","frame");
x.t("frame","ack");
x.t("frame","dropped");
x.t("frame","sent");
x.t("policies","described");
x.t("again","channel");
x.t("again","backoff");
x.t("restarts","backoff");
x.t("exponentially","retransmission");
x.t("found","idle");
x.t("file","section");
x.t("file","end");
x.t("file","qualifier");
x.t("list","psma");
x.t("list","default");
x.t("list","csma");
x.t("indicates","whether");
x.t("4-69","command");
x.t("4-69","figure");
x.t("upper","layer");
x.t("during","collision");
x.t("during","periods");
x.t("beginning","slot");
x.t("(psma)","channel");
x.t("slot","channel");
x.t("slot","start");
x.t("slot","configuring");
x.t("slot","optional");
x.t("slot","duration");
x.t("guide","details");
x.t("check","box");
x.t("network","technologies");
x.t("network","number");
x.t("due","retry");
x.t("availability","checked");
x.t("configuring","generic");
x.t("configuring","statistics");
x.t("csma","time");
x.t("csma","csma-ca");
x.t("csma","slotted");
x.t("csma","collision");
x.t("csma","exception");
x.t("csma","slot-csma-ca");
x.t("csma","carrier");
x.t("csma","except");
x.t("rescheduled","randomly");
x.t("specified","scenario");
x.t("(csma)","policy");
x.t("range","default");
x.t("box","labeled");
x.t("protocol\u2019s","channel");
x.t("avoidance","rts-cts");
x.t("avoidance","period");
x.t("avoidance","slot-csma");
x.t("avoidance","(csma-ca)");
x.t("avoidance","policy");
x.t("enables","rts-cts");
x.t("enables","acknowledgement");
x.t("wireless","subnet");
x.t("limit","frame");
x.t("limit","node");
x.t("perform","following");
x.t("dependent","parameters");
x.t("parameters","parameter");
x.t("parameters","properties");
x.t("parameters","table");
x.t("parameters","listed");
x.t("parameters","channel");
x.t("parameters","specified");
x.t("parameters","perform");
x.t("parameters","gui");
x.t("parameters","enable");
x.t("parameters","specific");
x.t("parameters","figure");
x.t("parameters","configure");
x.t("parameters","statistics");
x.t("generic","mac");
x.t("sends","data");
x.t("csma-ca","psma");
x.t("csma-ca","csma");
x.t("csma-ca","slot-csma");
x.t("csma-ca","except");
x.t("pre-determined","based");
x.t("allows","choose");
x.t("attempt","maximum");
x.t("attempt","transmit");
x.t("slotted","csma");
x.t("retransmissions","reached");
x.t("chosen","time");
x.t("device","properties");
x.t("selected","time");
x.t("divided","equal");
x.t("equivalent","channel");
x.t("equivalent","generic");
x.t("equivalent","statistics");
x.t("busy","data");
x.t("busy","backoff");
x.t("period","transmitting");
x.t("period","data");
x.t("4.7.1","description");
x.t("long","enough");
x.t("options","dependent");
x.t("collection","generic");
x.t("number","retransmissions");
x.t("number","data");
x.t("4.7.2","command");
x.t("gui","parameter");
x.t("gui","configuring");
x.t("gui","configuration");
x.t("2012","scalable");
x.t("implements","several");
x.t("maximum","number");
x.t("genericmac","scope");
x.t("retry-limit","optional");
x.t("retry-limit","setting");
x.t("enough","packet");
x.t("4.7.3","gui");
x.t("specifies","retry");
x.t("specifies","time");
x.t("specifies","policy");
x.t("whether","statistics");
x.t("editor","table");
x.t("editor","interface");
x.t("editor","mac");
x.t("editor","parameters");
x.t("4.7.4","statistics");
x.t("scenario","configuration");
x.t("verify","clear");
x.t("section","describes");
x.t("section","1.2.1.1");
x.t("section","1.2.1.3");
x.t("section","4.2.9");
x.t("section","show");
x.t("format","used");
x.t("node","interfaces");
x.t("node","senses");
x.t("node","restarts");
x.t("node","sends");
x.t("node","attempt");
x.t("node","node");
x.t("node","starts");
x.t("node","wants");
x.t("node","subnet");
x.t("works","during");
x.t("scope","parameter");
x.t("scope","time");
x.t("scope","list");
x.t("scope","generic");
x.t("scope","gui");
x.t("scope","instances");
x.t("transmission","sending");
x.t("lost","number");
x.t("1.2.1.1","description");
x.t("steps","following");
x.t("enable","ack");
x.t("enable","statistics");
x.t("enable","rts/cts");
x.t("end","simulation");
x.t("expires","node");
x.t("collision","avoidance");
x.t("statistic","description");
x.t("successfully","transmitted");
x.t("1.2.1.3","description");
x.t("idle","again");
x.t("idle","node");
x.t("idle","data");
x.t("repeated","until");
x.t("randomly","chosen");
x.t("randomly","selected");
x.t("randomly","using");
x.t("qualnet","user\u2019s");
x.t("slot-csma","slotted");
x.t("slot-csma","slot-csma-ca");
x.t("collected","mac");
x.t("collected","global");
x.t("4.2.9","qualnet");
x.t("configuration","section");
x.t("configuration","(.config)");
x.t("configuration","specify");
x.t("include","following");
x.t("instances","integer");
x.t("4-70","command");
x.t("interval","increases");
x.t("similar","mac");
x.t("similar","csma");
x.t("similar","csma-ca");
x.t("value","description");
x.t("4-71","command");
x.t("several","channel");
x.t("(csma-ca)","policy");
x.t("periods","slotted");
x.t("declaration","global");
x.t("specific","interface");
x.t("figure","4-41");
x.t("figure","4-42");
x.t("4-72","shows");
x.t("4-72","generic");
x.t("transmitted","parameter");
x.t("transmitted","channel");
x.t("transmitted","maximum");
x.t("exception","backoff");
x.t("models","4.7");
x.t("4.7","generic");
x.t("resumed","channel");
x.t("10ms","specifies");
x.t("show","configure");
x.t("output","statistics");
x.t("capabilities","protocol");
x.t("data","senses");
x.t("data","packets");
x.t("data","channel");
x.t("data","rescheduled");
x.t("data","successfully");
x.t("data","transmitted");
x.t("data","sent");
x.t("becomes","busy");
x.t("becomes","idle");
x.t("optional","scope");
x.t("configure","generic");
x.t("ack","retry");
x.t("ack","channel");
x.t("ack","node");
x.t("ack","enable");
x.t("ack","capabilities");
x.t("ack","optional");
x.t("ack","otherwise");
x.t("future","using");
x.t("appropriate","properties");
x.t("policy","node");
x.t("policy","similar");
x.t("policy","used");
x.t("backoff","timers");
x.t("backoff","timer");
x.t("backoff","time");
x.t("slot-csma-ca","default");
x.t("slot-csma-ca","slotted");
x.t("slot-csma-ca","rts/cts");
x.t("slot-csma-ca","mac-layer-statistics");
x.t("slot-csma-ca","specify");
x.t("choose","protocol\u2019s");
x.t("described","below");
x.t("retransmission","attempt");
x.t("global","node");
x.t("protocol","configurable");
x.t("protocol","mac");
x.t("protocol","parameters");
x.t("protocol","generic");
x.t("protocol","4.7.1");
x.t("protocol","gui");
x.t("protocol","include");
x.t("protocol","4.7");
x.t("protocol","model");
x.t("sense","multiple");
x.t("otherwise","node");
x.t("otherwise","enable");
x.t("transmit","beginning");
x.t("transmit","data");
x.t("done","channel");
x.t("integer","range");
x.t("sensing","done");
x.t("based","backoff");
x.t("packet","verify");
x.t("packet","transmitted");
x.t("packet","sense");
x.t("packet","dropped");
x.t("carrier","sense");
x.t("immediately","otherwise");
x.t("reached","backoff");
x.t("reached","packet");
x.t("model","allows");
x.t("model","implements");
x.t("model","collected");
x.t("starts","backoff");
x.t("except","slots");
x.t("except","node");
x.t("wants","transmit");
x.t("following","parameter");
x.t("following","locations");
x.t("following","steps");
x.t("subnet","properties");
x.t("subnet","interface");
x.t("used","parameter");
x.t("used","channel-access");
x.t("used","access");
x.t("simulation","table");
x.t("dropped","slot");
x.t("dropped","due");
x.t("dropped","carrier");
x.t("paused","channel");
x.t("using","default");
x.t("using","backoff");
x.t("qualifier","mac-protocol");
x.t("qualifier","scope");
x.t("duration","shown");
x.t("duration","table");
x.t("duration","slot");
x.t("duration","long");
x.t("duration","subnet");
x.t("setting","slot");
x.t("setting","parameters");
x.t("setting","generic");
x.t("statistics","table");
x.t("statistics","parameters");
x.t("statistics","generic");
x.t("statistics","collection");
x.t("statistics","statistic");
x.t("statistics","collected");
x.t("statistics","output");
x.t("statistics","(.stat)");
x.t("levels","section");
x.t("(.stat)","file");
x.t("(.config)","file");
x.t("including","generic");
x.t("labeled","mac");
x.t("rts/cts","node");
x.t("rts/cts","enable");
x.t("rts/cts","ack");
x.t("rts/cts","otherwise");
x.t("sent","retry-limit");
x.t("sent","immediately");
x.t("4-41","setting");
x.t("checked","sending");
x.t("specify","slot");
x.t("specify","generic");
x.t("unicast","frame");
x.t("mac-layer-statistics","4.7.4");
x.t("mac-layer-statistics","optional");
x.t("4-42","options");
x.t("4-42","setting");
x.t("user\u2019s","guide");
}
