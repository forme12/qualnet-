# Copyright (c) 2001-2009, Scalable Network Technologies, Inc.  All Rights Reserved.
#                          6100 Center Drive
#                          Suite 1250
#                          Los Angeles, CA 90045
#                          sales@scalable-networks.com
#
# This source code is licensed, not sold, and is subject to a written
# license agreement.  Among other things, no portion of this source
# code may be copied, transmitted, disclosed, displayed, distributed,
# translated, used as the basis for a derivative work, or used, in
# whole or in part, for any program or purpose other than its intended
# use in compliance with the license agreement as part of the QualNet
# software.  This source code and certain of the algorithms contained
# within it are confidential trade secrets of Scalable Network
# Technologies, Inc. and may not be used as the basis for any other
# software, hardware, product or service.

#
# Configuration file version.  Use converter in the bin/ directory to
# make old configuration files work with new versions of QualNet.
#

VERSION 6.1

###############################################################################
# General simulation properties                                               #
###############################################################################

#
# Name of experiment.  Results are written to EXPERIMENT-NAME.stat.
#

 EXPERIMENT-NAME default

#
# Simulation time.  Units:
#
# 100NS   - 100 nanoseconds     100     - 100 seconds (default case)
# 100US   - 100 microseconds    100M    - 100 minutes
# 100MS   - 100 milliseconds    100H    - 100 hours
# 100S    - 100 seconds         100D    - 100 days
#

  SIMULATION-TIME   4M

#
# Value used to seed the random number generator.  The random number
# generator is used in several models, such as the UNIFORM and RANDOM
# node-placement models.
#

SEED   1

#
# Cartesian xy terrain dimensions in meters.
#
# The default NODE-PLACEMENT setting, UNIFORM, will space nodes evenly
# across the terrain.  If you have a small number of nodes uniformly
# placed on a large terrain, nodes may be too far away to transmit to
# each other.  The default 802.11b radio has an effective range up to
# 376 meters using the free-space propagation model, and a shorter range
# with other models.
#

COORDINATE-SYSTEM    CARTESIAN

TERRAIN-DIMENSIONS   (1500, 1500)

#
# Latitude-longitude-altitude terrain dimensions.
#
# COORDINATE-SYSTEM    LATLONALT
#
# TERRAIN-SOUTH-WEST-CORNER  (34.99, -120.00)
# TERRAIN-NORTH-EAST-CORNER  (35.00, -119.99)
#
# TERRAIN-DATA-TYPE DEM
# TERRAIN-DATA-TYPE CTDB
#
# DEM-FILENAME ../data/terrain/los_angeles-w.dem
# CTDB-FILENAME  nebosnia_mes
#
# MOBILITY-GROUND-NODE YES
#

###############################################################################
# Topology                                                                    #
###############################################################################

#
# Nodes in QualNet are uniquely identified by a nodeId.  A nodeId can
# range from 1 to 4,294,967,295.
#
# Terminology:  "node 4" means the node with nodeId equal to 4.
# See the notes further below for how IP addresses are assigned.
#

#
# Create a wireless or Ethernet/802.3 network consisting of nodes 1
# through 30.  The MAC-PROTOCOL and PHY-MODEL parameters control the
# type of device specific to the network.  QualNet creates a network
# interface for each node in the network, and IP addresses are auto-
# assigned.
#

   SUBNET N16-0 { 1 thru 7 }

#
# Create three links with this topology:  1 --- 2 --- 3 --- 4.
# Each link is a point-to-point (serial) link between two nodes.  These
# links are dedicated, error-free, and support the maximum bandwidth in
# both directions simultaneously.  QualNet creates two network
# interfaces for each end of a link, and IP addresses are auto-assigned.
#
# Warning:
# If you enable these lines, comment out the SUBNET statement, change
# ROUTING-PROTOCOL to a wired routing protocol, and remove/fix extra
# lines in the applications file (default.app).  You CAN have both
# SUBNET and LINK statements in the same scenario, but you'll have to be
# careful about assigning routing protocols to each network -- see the
# section on "Node qualifiers" later below.
#
# LINK N2-1.0 { 1, 2 }
# LINK N2-2.0 { 2, 3 }
# LINK N2-3.0 { 3, 4 }
#

#
# Link bandwidth in bits per second (bps).
# Link propagation delay.
# (See the "Node qualifiers" section for defining properties for
# specific links.)
#

#LINK-BANDWIDTH           112000
#LINK-PROPAGATION-DELAY   50MS

#
# The N syntax specifies an IPv4 network address and subnet mask.
# N syntax examples:
#
# N syntax        Network address  Subnet mask      Slash notation
# N16-0           0.0.0.0          255.255.0.0      0.0.0.0/16
# N2-1.0          0.0.1.0          255.255.255.252  0.0.1.0/30
# N8-192.168.0.0  192.168.0.0      255.255.255.0    192.168/24
# N24-10.0.0.0    10.0.0.0         255.0.0.0        10/8
#
# IPv4 addresses and subnet masks are assigned automatically starting
# with the first IP address after the network address, e.g.,
#
# N16-0 { 1 thru 30 }
# nodeId        IP address      Subnet mask
# 1             0.0.0.1         255.255.0.0
# 2             0.0.0.2         255.255.0.0
# ...
#
# N8-2.0 { 5, 3, 1 }
# nodeId        IP address      Subnet mask
# 5             0.0.2.1         255.255.255.0
# 3             0.0.2.2         255.255.255.0
# 1             0.0.2.3         255.255.255.0
#
# Restrictions:
# Network addresses must be unique. (different masks don't help!)
# Only one IP address is assigned per interface, and this IP address
# must be unique.  (Multiple 192.168/24 private networks and secondary
# IP addresses are not supported.)
# Nodes possessing multiple interfaces are supported, but care must be
# taken in selecting routing protocols.
#
# N syntax long explanation:
# The number after N is the number of bits used for the hostid;
# 32 minus this number is the number of bits used for the networkid.
# The string following the hyphen is the right-most part of the network
# address, implicitly preceded by zeroes as necessary.
#

#
# Node qualifiers
#
# You can also use the N syntax to restrict parameters to certain
# networks, e.g.,
#
# [N2-2.0] LINK-BANDWIDTH           300
# [N2-2.0] LINK-PROPAGATION-DELAY   500MS
#
# tells QualNet that any links in the N2-2.0 network operate at 300 bps
# with 500 ms propagation delay.  You can use these qualifiers to
# restrict routing protocols to certain networks, and so on.  Within the
# brackets, you can also specify nodeIds and IP addresses; multiple
# values should be separated by spaces.
#
# Instance qualifiers
#
# These qualifiers appear after the parameter name, e.g.,
#
# PROPAGATION-CHANNEL-FREQUENCY[0]  2.4e9
#
# The instance qualifier has a meaning specific to the parameter
# (it's usually NOT a network, nodeId, or IP address).
#

#
# Interface and link faults.
  FAULT-CONFIG-FILE         ./default.fault
#

#
# The following parameter represents the node placement strategy.
# - UNIFORM:  Based on the number of nodes in the simulation, the physical
#   terrain is divided into a number of cells.  Within each cell, a node is
#   placed randomly.
# - RANDOM:  Nodes are placed randomly within the physical terrain.
# - GRID:  Node placement starts at (0, 0) and are placed in grid format with
#   each node GRID-UNIT away from its neighbors.  The number of nodes has to
#   be a square of an integer.
# - FILE:  Position of nodes is read from NODE-POSITION-FILE.  On each line of
#   the file, the x and y position of a single node is separated by a space.
#

# NODE-PLACEMENT   UNIFORM
# NODE-PLACEMENT   RANDOM

# NODE-PLACEMENT   GRID
# GRID-UNIT        30

  NODE-PLACEMENT        FILE
  NODE-POSITION-FILE   ./default.nodes

#
# The following represent parameters for mobility.  If MOBILITY is set to
# NONE, then there is no movement of nodes in the model.
#
# For random waypoint, a node randomly selects a destination from the
# physical terrain.  It moves to the destination at constant speed, chosen
# between MOBILITY-WP-MIN-SPEED and MOBILITY-WP-MAX-SPEED (meters/sec).
# After it reaches its destination, the node stays there for
# MOBILITY-WP-PAUSE time, and the process is repeated (selecting another
# destination and speed).
#

# MOBILITY   NONE
MOBILITY    FILE

# MOBILITY                RANDOM-WAYPOINT
# MOBILITY-WP-PAUSE       30S
# MOBILITY-WP-MIN-SPEED   0
# MOBILITY-WP-MAX-SPEED   10


# MOBILITY   PATHLOSS-MATRIX

# not completely implemented yet
#
# MOBILITY-TRACE-DUMP ./test
#

#
# The following parameters are necessary for all mobility models.
#

# MOBILITY-POSITION-GRANULARITY   1.0

###############################################################################
# Channel properties                                                          #
###############################################################################

PROPAGATION-CHANNEL-FREQUENCY 2.4e9 # required
#PROPAGATION-CHANNEL-FREQUENCY[0] 2.4e9 # multi channel example
#PROPAGATION-CHANNEL-FREQUENCY[1] 2.5e9

# this is the only option now
PROPAGATION-MODEL           STATISTICAL
#PROPAGATION-MODEL[1]           STATISTICAL

#
# PROPAGATION-LIMIT:
#   Signals with power below PROPAGATION-LIMIT (in dB)
#   (before the antenna gain at the receiver) will not be
#   delivered to nodes. Lower value should make the
#   simulation more precise, but it also make the execution
#   time longer.
#

PROPAGATION-LIMIT   -111.0
#PROPAGATION-LIMIT[1]   -111.0

#
# PROPAGATION-PATHLOSS: pathloss model
#   FREE-SPACE:
#     Friss free space model.
#     (path loss exponent, sigma) = (2.0, 0.0)
#   TWO-RAY:
#     Two ray model.  It uses free space path loss
#     (2.0, 0.0) for near sight and plane earth
#     path loss (4.0, 0.0) for far sight. The antenna
#     height is hard-coded in the model (1.5m).
#   ITM:
#     Irregular Terrain Model (also known as Longley-Rice)
#     This model is based on terrain data and therefore
#     requires a terrain data file.
#

PROPAGATION-PATHLOSS-MODEL  TWO-RAY
# PROPAGATION-PATHLOSS-MODEL[1]  TWO-RAY
# PROPAGATION-PATHLOSS-MODEL  FREE-SPACE
# PROPAGATION-PATHLOSS-MODEL  ITM
#
# temporary disabled
#
# PROPAGATION-PATHLOSS-MODEL  PATHLOSS-MATRIX

#
# PROPAGATION-SHADOWING-SIGMA (in dB)
#
PROPAGATION-SHADOWING-SIGMA 0.0

# PROPAGATION-FADING-MODEL:
#   NONE:     no fading
#   RAYLEIGH: Rayleigh fading
#   RICEAN:   Ricean fading (requires PROPAGATION-RICEAN-K-FACTOR)
#
PROPAGATION-FADING-MODEL NONE
# PROPAGATION-FADING-MODEL RAYLEIGH
# PROPAGATION-FADING-MODEL RICEAN
# PROPAGATION-RICEAN-K-FACTOR 0.0

###############################################################################
# Phy layer                                                                   #
###############################################################################

#########################################
#
# PHY-MODEL: phy model to transmit and receive packets
#   PHY802.11b:     IEEE 802.11b PHY
#   FCSC-PROTOTYPE: FCSC Comms prototype PHY
#
PHY-MODEL                   PHY802.11b
# PHY-MODEL                   FCSC-PROTOTYPE

PHY-LISTENABLE-CHANNEL-MASK 1
PHY-LISTENING-CHANNEL-MASK  1

#
# PHY-TEMPERATURE: temperature of the phy model (in K)
#
PHY-TEMPERATURE             290

#
# PHY-NOISE-FACTOR: noise factor used to calculate thermal noise level
#                   of the phy model
#
PHY-NOISE-FACTOR            10.0

#
# PHY-RX-MODEL: packet reception model
#   SNR-THRESHOLD-BASED:
#     If the Signal to Noise Ratio (SNR) is more than
#     PHY-RX-SNR-THRESHOLD (in dB), it receives the signal
#     without error.  Otherwise the packet is dropped.
#     PHY-RX-SNR-THRESHOLD needs to be specified.
#   BER-BASED:
#     It looks up Bit Error Rate (BER) in the SNR - BER table
#     specified by PHY-RX-BER-TABLE-FILE.
#
# DPSK gives lower performance than BPSK, but is commonly used due to ease
# of implementation.  DPSK is used in 802.11 WaveLAN radios
#
# PHY-RX-MODEL                BER-BASED
# PHY-RX-BER-TABLE-FILE          ./dpsk.ber
# PHY-RX-BER-TABLE-FILE          ./bpsk.ber
# PHY-RX-MODEL                SNR-THRESHOLD-BASED
# PHY-RX-SNR-THRESHOLD        10.0

#
# PHY802.11b-DATA-RATE: phy data rate (in bps)
#
# PHY802.11b-DATA-RATE          2000000

PHY-RX-MODEL                PHY802.11b
PHY802.11-AUTO-RATE-FALLBACK NO

PHY802.11-DATA-RATE          2000000



#
# PHY802.11b-TX-POWER: phy transmission power (in dBm)
#
PHY802.11b-TX-POWER           15.0

#
# PHY802.11b-RX-SENSITIVITY: sensitivity of the phy (in dBm)
#
PHY802.11b-RX-SENSITIVITY     -91.0

#
# PHY802.11b-RX-THRESHOLD: Minimum power for received packet
# (in dBm)
#
PHY802.11b-RX-THRESHOLD       -81.0

#
# ANTENNA-GAIN: antenna gain (in dBi)
#
ANTENNA-GAIN    0.0

#
# ANTENNA-HEIGHT: antenna height (in meters)
#
ANTENNA-HEIGHT  1.5

# ANTENNA-MODEL:
#
ANTENNA-MODEL   OMNIDIRECTIONAL
# ANTENNA-MODEL   SWITCHED-BEAM
# ANTENNA-MODEL   STEERABLE
# ANTENNA-AZIMUTH-PATTERN-FILE ./default.antenna-azimuth
# ANTENNA-ELEVATION-PATTERN-FILE ./default.antenna-elevation


###############################################################################
# MPLS Configuration                                                          #
###############################################################################

#
# "MPLS-PROTOCOL YES" enables MPLS label switching.  Label switching requires
# one or both of the following: a label distribution protocol,
# or a static label assignment file.
#

# MPLS-PROTOCOL YES

#
# Label Distribution Protocols:
#      LDP: RFC 3036
#      RSVP-TE: Internet Draft "RSVP-TE: Extensions to RSVP for LSP Tunnels"
#

# MPLS-LABEL-DISTRIBUTION-PROTOCOL LDP
# MPLS-LABEL-DISTRIBUTION-PROTOCOL RSVP-TE

#
# RSVP-TE requires the following parameters to be set
#

#
# RSVP-TE-RECORD-ROUTE determines whether or not the total path
# of the LSP will # be recorded along the path of establishing RSVP
# messages.  The three possible settings are:
#
#      OFF:     No recording of the path during LSP creation,
#               no loop detection
#      NORMAL:  Path will be recorded along the path of establishing
#               RSVP messages
#      LABELED: The label ID of the RSVP messages will also be considered
#
# RSVP-TE-RECORD-ROUTE OFF
# RSVP-TE-RECORD-ROUTE LABELED
# RSVP-TE-RECORD-ROUTE NORMAL

#
# RSVP-RESERVATION-STYLE determines the reservation style for RSVP-TE.
# The available reservation styles are:
#      FF: The "Fixed Filter" reservation style creates a distinct
#          reservation for traffic from each sender that is not shared by
#          other senders.
#      SE: The "Shared Explicit" reservation style allows a receiver to
#          explicitly specify the senders to be included in a reservation.
#          There is a single reservation on a link for all the senders listed.
#
# RSVP-RESERVATION-STYLE FF
# RSVP-RESERVATION-STYLE SE

#
# RSVP-TE-EXPLICIT-ROUTE-FILE entries allow configuration of explicit paths.
#

# RSVP-TE-EXPLICIT-ROUTE-FILE ./rsvpte.routes-explicit


#
# LDP requires the following parameters to be set
#

# MPLS-LABEL-DISTRIBUTION-CONTROL-MODE  INDEPENDENT
# MPLS-LABEL-DISTRIBUTION-CONTROL-MODE  ORDERED

# MPLS-LDP-LABEL-ADVERTISEMENT-MODE UNSOLICITED
# MPLS-LDP-LABEL-ADVERTISEMENT-MODE ON-DEMAND

# MPLS-LABEL-RETENTION-MODE LIBERAL
# MPLS-LABEL-RETENTION-MODE CONSERVATIVE

# CONFIGURED-FOR-LABEL-RELEASE-MESSAGE-PROPAGATE YES
# CONFIGURED-FOR-LABEL-RELEASE-MESSAGE-PROPAGATE NO

# MPLS-LDP-LOOP-DETECTION  YES
# MPLS-LDP-LOOP-DETECTION  NO


#
# Static Label Assignment File:
#

# MPLS-STATIC-ROUTE-FILE mpls.routes


###############################################################################
# MAC layer                                                                   #
###############################################################################

#
# The following specifies the MAC protocol used for wireless network
# interfaces.  (Point-to-point links do not require, and ignore this setting.)
#

MAC-PROTOCOL   MACDOT11
# MAC-PROTOCOL   CSMA
# MAC-PROTOCOL   MACA
# MAC-PROTOCOL   FCSC-CSMA
# MAC-PROTOCOL   TDMA

#
# The Switched Ethernet model requires the data-rate and
# propagation delay parameters to be specified.
#
# MAC-PROTOCOL                SWITCHED-ETHERNET
# SUBNET-DATA-RATE            100000000
# SUBNET-PROPAGATION-DELAY    1MS
#

#
# The 802.3 Ethernet model requires the data-rate and propagation
# delay parameters to be specified.  When specifying 802.3, only
# 10Mbps (10BaseT) or 100Mbps (100BaseT) data rates are allowed.
# 1Gbps (1000BaseT) is in the works.  For 10BaseT, the propagation
# delay must be less than half of 51.2 microseconds for collision
# detection to work correctly.  Likewise, for 100BaseT, the propagation
# delay must be less than half of 5.12 microseconds.
#
# MAC-PROTOCOL                 MAC802.3
# SUBNET-DATA-RATE             10000000
# SUBNET-PROPAGATION-DELAY     1US
#

#
# MAC-PROPAGATION-DELAY specifies an additional delay for messages
# sent by the MAC layer to the phy layer.  Some MAC protocols use
# a multiple of this value.  The default value is 1 microsecond,
# kept in the MAC_PROPAGATION_DELAY macro in include/mac.h.
#
# MAC-PROPAGATION-DELAY   1500NS
#

#
# This is an abstract model of a satellite network.  Each satellite
# network is group into subnets.  Each satellite subnet has
# exactly one satellite node and many ground nodes.  The
# ground nodes associated with a subnet always transmit to the
# designated subnet satellite node.  Thus, no handoffs are
# involved.  Also, satellite nodes are bent-pipe satellites
# (relay data only).  When the satellite node receives data
# from the ground nodes, it broadcasts the data to all other ground
# nodes in the subnet, but not to the ground node originating the data.
# Finally, the satellite node must not be generating any packets.
# Thus, the satellite node cannot run an application or routing protocol.
#
# Note: SATCOM-PROPAGATION-DELAY specifies ground-to-ground propagation delay.
#
# MAC-PROTOCOL SATCOM
# SATCOM-SATELLITE-NODE  <node ID>
# SATCOM-TYPE BENT-PIPE (only type supported)
# SATCOM-BANDWIDTH <bandwidth>
# SATCOM-PROPAGATION-DELAY <delay>
#
# Below is an example of a satellite network where node 3 is designated
# the satellite node for subnet N8-1.0, with bandwidth of 100Mbps and
# ground-to-ground propagation delay of 200MS:
#
# [N8-1.0] MAC-PROTOCOL SATCOM
# [N8-1.0] SATCOM-SATELLITE-NODE  3
# [N8-1.0] SATCOM-TYPE BENT-PIPE
# SATCOM-BANDWIDTH 100000000
# SATCOM-PROPAGATION-DELAY 200MS
#

#
# PROMISCUOUS-MODE defaults to YES and is necessary if nodes want
# to overhear packets destined to neighboring nodes.
# Currently this option needs to be set to YES only if DSR is selected
# as the routing protocol.  Setting it to "NO" may save a trivial amount
# of time for other protocols.
#

PROMISCUOUS-MODE   YES

# The TDMA model also permits the following parameters. If not parameters
# are specified, TDMA will allocate 1 slot per node in round-robin
# fashion by address.
# TDMA slot duration must be be greater than or equal to 1MS and less
# than or equal to 1S. The default value is 10MS. This duration should
# be longer enough so that a packet can be transmitted.
#TDMA-SLOT-DURATION 7.8MS

# The TDMA schedule is a "|" delimited list that specifies slots and
# nodes permitted to transmit in each slot. A slot is delimited by "|"
# with no "|" starting or ending the schedule. A range of nodes permitted
# to transmit in a slot is denoted by the end nodes separated by a "-"
# The first endpoint must be smaller than the last. No commas are permitted
# in node numbers.

#TDMA-SCHEDULE 1|10-15|16-20|1-9|2|21-30

# TDMA slots per frame. By default, if no TDMA schedule is given, this is
# set to the number of nodes in the network. If a schedule is given, by
# default, this is set to the number of slots necessary for the schedule.
# If this parameter value is given, it must be at least as large as the
# aforementioned default values or an error will be produced. In addition,
# the number of slots per frame must be greater than 0 and less than or
# equal to 2000.
#TDMA-SLOTS-PER-FRAME 10


###############################################################################
# Network layer                                                               #
###############################################################################

#
# File containing vendor router models
#
#ROUTER-MODEL-CONFIG-FILE    default.router-models

#
# Below are examples of how to specify vendor router models described
# in ROUTER-MODEL-CONFIG-FILE.  By default, the vendor router model is GENERIC,
# which means the the backplane has infinite throughput and therefore the
# backplane delay is not considered.
#
# NOTE: IP-QUEUE-PRIORITY-QUEUE-SIZE below must be commented out in order
#       not to overwrite the queue size defined for the router models.
#
# ROUTER-MODEL   GENERIC
# ROUTER-MODEL   CISCO-2500
# ROUTER-MODEL   CISCO-CATALYST-6509
#

#
# IP is currently the only choice for network-layer protocol.
#

NETWORK-PROTOCOL   IP

#
# The number of separate priority queues is specified below, QualNet
# currently generates three types, CONTROL, REAL_TIME, and NON_REAL_TIME,
# so "3" is a good minimum value.  If you specify less than "3", the
# lower priority packets will be placed in the lowest-priority queue that
# exists.  Specifying less than "1" is an error condition due to the
# inability of that node to store any packets at the IP layer.
#

IP-QUEUE-NUM-PRIORITIES   3

#
# The following parameter specifies the size of each of the
# "priority queues", the number of which is specified by
# IP-QUEUE-NUM-PRIORITIES.  If there are 3 "priority queues", each
# will have a byte-capacity equal to the value of
# IP-QUEUE-PRIORITY-QUEUE-SIZE specified below.
#
# You can also specify each priority queue's size separately, using the
# Instance ID [] after the parameter name, as in an example below.  Make sure
# that you use Instance ID's numbering from
# { 0, ..., (IP-QUEUE-NUM-PRIORITIES-1) }
#
# You can also use Node and Network Specific Parameterization with brackets
# before the parameter name.
#
# 50000 bytes == 1500 "DEFAULT_ETHERNET_MTU * 33.333 packets
#
# Example: NodeId 1 has a 25000 byte queue for priority 2
#
#          [1] IP-QUEUE-PRIORITY-QUEUE-SIZE[2] 25000
#

IP-QUEUE-PRIORITY-QUEUE-SIZE   50000

#
# The IP-QUEUE-TYPE parameter specifies the type of queueing mechanism to use
# for the particular priority queue.  It can be specified as a global
# default, per node or network, per priority queue, or any valid combination
# of these.
#
# Example: All nodes have a FIFO queue for priority 2
#          IP-QUEUE-TYPE[2] FIFO
#

#
# FIFO represents "First In, First Out" IP packet queueing.
#

IP-QUEUE-TYPE   FIFO

#
# RED represents Random Early Detection(Drop) as presented in
#      Sally Floyd and Van Jacobson,
#      "Random Early Detection For Congestion Avoidance",
#      IEEE/ACM Transactions on Networking, August 1993.
#      This implementation drops packets, it does not mark them.
#
# RED requires the following additional parameters:
#
#      RED-MIN-THRESHOLD : the number of packets in the queue that represents
#                          the lower bound at which packets can be randomly
#                          dropped.
#      RED-MAX-THRESHOLD : the number of packets in the queue that represents
#                          the upper bound at which packets can be randomly
#                          dropped.
#      RED-MAX-PROBABILITY : the maximum probability (0...1) at which a
#                            packet can be dropped (before the queue is
#                            completely full, of course).
#      RED-QUEUE-WEIGHT : the queue weight determines bias towards recent
#                         or historical queue lengths in calculating the
#                         average.
#      RED-SMALL-PACKET-TRANSMISSION-TIME : a sample amount of time that it
#                                           would take to transmit a small
#                                           packet - used to estimate the
#                                           queue average during idle periods.
#
# IP-QUEUE-TYPE         RED
# RED-MIN-THRESHOLD     5
# RED-MAX-THRESHOLD     15
# RED-MAX-PROBABILITY   0.02
# RED-QUEUE-WEIGHT      0.002
# RED-SMALL-PACKET-TRANSMISSION-TIME   10MS
#

# RIO represents Random Early Detection(Drop)with In/Out Bit
# It is a variant of RED and uses twin RED algorithm
# - one for the IN profile packets and
# - one for the OUT of profile packets
#
# RIO specific parameters:
#
# IP-QUEUE-TYPE         RIO
# RIO-IN-MIN-THRESHOLD     10
# RIO-IN-MAX-THRESHOLD     20
# RIO-IN-MAX-PROBABILITY   0.02
# RIO-OUT-MIN-THRESHOLD     5
# RIO-OUT-MAX-THRESHOLD     10
# RIO-OUT-MAX-PROBABILITY   0.02


# WRED represents Weighted Random Early Detection(Drop)
# It is a variant of RED and uses three RED algorithms
# - the first for the Green profile packets and
# - the second for Yellow profile packets and
# - the third for Red profile packets.
#
# Use the GREEN- YELLOW- and RED- THRESHOLD and PROBABILITY parameters
# to specify thresholds and probabilities for each queue.

# IP-QUEUE-TYPE         WRED


# G-RIO represents the Generalized RIO algorithm.
#
# GRIO is a variant of RED and uses three RED algorithms
# - the first for the Green profile packets and
# - the second for Yellow profile packets and
# - the third for Red profile packets.
#
# It operates either in coupled or decoupled mode.
# Coupled mode counts Green profile packets towards the drop calculation
# for Yellow profile packets, while Decoupled mode counts them separately.
#
# Use the GREEN- YELLOW- and RED- THRESHOLD and PROBABILITY parameters
# to specify thresholds and probabilities for each queue.
#
# G-RIO specific parameters:
#
# IP-QUEUE-TYPE         G-RIO
# G-RIO-TYPE            COUPLED
# G-RIO-TYPE            DECOUPLED


# The following parameters are useful for setting probabilities and
# thresholds for WRED and G-RIO (COUPLED or DECOUPLED).
#
# GREEN-MIN-THRESHOLD        12
# GREEN-MAX-THRESHOLD        20
# GREEN-MAX-PROBABILITY      0.02
# YELLOW-MIN-THRESHOLD       8
# YELLOW-MAX-THRESHOLD       13
# YELLOW-MAX-PROBABILITY     0.02
# RED-MIN-THRESHOLD          5
# RED-MAX-THRESHOLD          10
# RED-MAX-PROBABILITY        0.02

#
# ECN represents Explicit Congestion Notification as presented in
# Sally Floyd and K. Ramakrishnan, RFC 2481,
# "A Proposal to add Explicit Congestion Notification (ECN) to IP."
# ECN marks the IP header instead of dropping packets when the network
# queue gets congested.
#
# ECN requires one of the IP-QUEUE-TYPE (RED, RIO, or WRED).
# Furthermore, the source and destination nodes must be ECN
# enabled; intermediate routes may or may not be ECN enabled.
# By default, ECN is disabled.  Only TCP is able to interpret
# the ECN-marked packets.
#
# Example: To enable ECN, do the following:
# ECN         YES
#

#
# The "STRICT-PRIORITY" scheduler for IP indicates that all packets of
# a higher priority are sent before any packets for a lower priority.
#
# The "WEIGHTED-FAIR" scheduler implements Weighted Fair Queueing with
# the highest priority queue getting a weight which is higher than that
# of all the other queues by default.  Users can also specify the queue
# weight for each of the priority queues (but must specify the weight for
# all of them) by specifying "QUEUE-WEIGHT[priority] <value>" where value
# is the desired weight for that priority queue.
#
# The "SELF-CLOCKED-FAIR" scheduler implements Self Clocked Fair Queueing.
# It is a variant "WEIGHTED-FAIR" scheduler.  To specify the queue weights
# manually, use the QUEUE-WEIGHT[priority] parameter as above.
#
# The "ROUND-ROBIN" scheduler cycles from the first priority queue to
# the last, pulling a single packet from each
#
# The "WEIGHTED-ROUND-ROBIN" scheduler accepts weights for each priority
# queue, and services packets in round-robin fashion, giving more "turns"
# to queues with higher weights.  To specify the queue weights manually,
# use the QUEUE-WEIGHT[priority] parameter as above.
#
# The "CBQ" (Class-Based Queueing) Scheduler is configured via three
# parameters:
#     "LINK-SHARING-STRUCTURE-FILE"
#         The Link Sharing Structure File contains configuration
#         information about weights, priorities, and link sharing
#         between agencies.
#     "CBQ-GENERAL-SCHEDULER" specifies the packet scheduler that CBQ
#         uses to manage the queues.
#     "CBQ-LINK-SHARING-GUIDELINE" determines whether or not bandwidth
#         is regulated by the link sharing scheduler.  Bandwidth remains
#         unregulated in the "Ancestor-Only" case when the class of
#         traffic is under-limit, or its immediate ancestor is under-limit.
#         Bandwidth remains unregulated in the "Top-Level" case when the
#         class of traffic is under-limit, or at least one of its ancestors
#         up to CBQ-TOP-LEVEL generations above, are under-limit.
#     "CBQ-TOP-LEVEL" determines the maximum number of generations to
#         search, for under-limit ancestors.
#
# The highest priority is numbered "0", and the lowest priority is "n-1",
# where n = IP-QUEUE-NUM-PRIORITIES
#

IP-QUEUE-SCHEDULER   STRICT-PRIORITY
# IP-QUEUE-SCHEDULER   WEIGHTED-FAIR
# IP-QUEUE-SCHEDULER   SELF-CLOCKED-FAIR
# IP-QUEUE-SCHEDULER ROUND-ROBIN
# IP-QUEUE-SCHEDULER WEIGHTED-ROUND-ROBIN

# IP-QUEUE-SCHEDULER CBQ
# CBQ-GENERAL-SCHEDULER PRR
# CBQ-GENERAL-SCHEDULER WRR
# CBQ-LINK-SHARING-GUIDELINE ANCESTOR-ONLY
# CBQ-LINK-SHARING-GUIDELINE TOP-LEVEL
# CBQ-TOP-LEVEL 3

# QUEUE-WEIGHT[0] 0.5
# QUEUE-WEIGHT[1] 0.3
# QUEUE-WEIGHT[2] 0.2

#
# The DiffServ Multi-Field Traffic Conditioner is activated by specifying
# a TRAFFIC-CONDITIONER-FILE, and placing entries in it that characterize
# classes of traffic, desired data rate and burstiness characteristics, and
# action to take with Out-Profile packets.
#

# TRAFFIC-CONDITIONER-FILE   ./default.traffic_conditioner

###############################################################################
# Routing - forwarding, static, default routes                                #
###############################################################################

#
# The following determines whether or not a node will forward packets.
# Hosts, for example personal computers connected to a company LAN, generally
# do not forward packets, while routers generally do.  By default, all nodes
# forward packets (in wireless ad-hoc networks, all nodes tend to be both
# hosts and routers).  To change the default, specify the global default to
# be "NO".  You can then specify which nodes should forward packets using
# node/network specific parameterization.
#

IP-FORWARDING YES
# IP-FORWARDING NO

#
# The following specifies static and default routes.  Static routes
# have priority over routes discovered through routing protocols while
# default routes have the lowest priority.
#

# STATIC-ROUTE        YES
# STATIC-ROUTE-FILE   ./default.routes-static

# DEFAULT-ROUTE       YES
# DEFAULT-ROUTE-FILE  ./default.routes-default

###############################################################################
# Unicast routing - wireless ad hoc                                           #
###############################################################################

#
# The following specifies the routing protocol.
# Models which work for wireless ad hoc networks are listed.
#

# AODV follows draft-ietf-manet-aodv-09.txt
#ROUTING-PROTOCOL   AODV

# The maximum possible number of hops between two nodes in the network.
# Default Value: 35
#
# AODV-NET-DIAMETER

# Conservative estimate of the average one-hop traversal
# time for packets and should include queuing, transmission,
# propagation and other delays.
# Default Value: 40ms
#
# AODV-NODE-TRAVERSAL-TIME

# Timeout time for an active route; each time a data packet
# is sent, the lifetime of that route is updated to this value
# Note: a default value of 10 seconds is suggested for error detection
# through MAC layer message (like what 802.11 does).
# Default Value: 3000ms
#
# AODV-ACTIVE-ROUTE-TIMEOUT

# The destination of a RREQ replies with AODV-MY-ROUTE-TIMEOUT
# as the lifetime of the route.
# Default Value: 2 * AODV-ACTIVE-ROUTE-TIMEOUT
#
# AODV-MY-ROUTE-TIMEOUT

# Lifetime of a hello message is determined by
# AODV-ALLOWED_HELLO_LOSS * AODV-HELLO_INTERVAL.
# Default Value: 1000ms
#
# AODV-HELLO-INTERVAL

# Specifies the number of times AODV will repeat expanded ring
# search for a destination if no Route Reply is received
# within specified amount of time.
# Default Value: 2
#
# AODV-RREQ-RETRIES

# A constant use for calculating the time after which an
# active route should be deleted.  After timeout of an active
# route, the route is finally deleted from the routing table
# after a time period of "K * max (AODV-ACTIVE_ROUTE_TIMEOUT,
# AODV-ALLOWED_HELLO_LOSS * AODV-HELLO_INTERVAL)." Here K is
# AODV-ROUTE-DELETION-CONSTANT.
# Default Value: 5
#
# AODV-ROUTE-DELETION-CONSTANT

# If the value is set to YES, a node will send a hello
# message if there is no broadcast within the last hello interval.
# Note: Simulation time will increase depending on the frequency of
# the hello updates.
# Default Value: NO
#
# AODV-PROCESS-HELLO

# Lifetime of a hello message is determined by
# AODV-ALLOWED_HELLO_LOSS * AODV-HELLO_INTERVAL.
# Default Value: 2
#
# AODV-ALLOWED-HELLO-LOSS

# If this value is set to YES, the node will try to locally
# repair a broken route, if possible.
# Default Value: NO
#
# AODV-LOCAL-REPAIR

# If the source node of a route gets a route error message,
# it will initiate a new Route Request for the destination if the
# value is set to YES.
# Default Value: NO
#
# AODV-SEARCH-BETTER-ROUTE

# Maximum number of packets the message buffer of AODV can
# hold. If the buffer fills up, incoming packets for the
# buffer will be dropped.
# Default Value: 100
#
# AODV-BUFFER-MAX-PACKET

# If nothing is specified, buffer overflow will be
# checked by number of packets in the buffer. If some value is
# specified here, incoming packets will be dropped
# if the incoming packet size + current size of the buffer
# exceeds this value.
# Default Value: 0 (meaning not used)
#
# AODV-BUFFER-MAX-BYTE


# ROUTING-PROTOCOL   LAR1
# ROUTING-PROTOCOL   DSR
# ROUTING-PROTOCOL   BELLMANFORD
# ROUTING-PROTOCOL   RIPv2
# ROUTING-PROTOCOL   OSPFv2

#
# The STAR Routing Protocol requires the following NEIGHBOR-PROTOCOL parameters
# and a choice between STAR-ROUTING-MODE ORA or LORA.
#

# ROUTING-PROTOCOL STAR
# STAR-ROUTING-MODE LORA
# STAR-ROUTING-MODE ORA
# NEIGHBOR-PROTOCOL-SEND-FREQUENCY 2S
# NEIGHBOR-PROTOCOL-ENTRY-TTL 4S

#
# Fisheye routing is currently disabled in QualNet.
#
# ROUTING-PROTOCOL   FISHEYE
#

  ROUTING-PROTOCOL   DSR

###############################################################################
# Unicast routing - wired                                                     #
###############################################################################

#
# The following specifies the routing protocol.
# Models which work for wired networks are listed.
#

# ROUTING-PROTOCOL   BELLMANFORD

#
# OSPFv2 is compliant with RFC 2328.
#
# ROUTING-PROTOCOL   OSPFv2
#

#
# RIPv2 attempts to match the Cisco implementation from publicly
# available materials, and follows RFC 2453 otherwise.  Please see
# application/ripv2.c for more information.
#
# ROUTING-PROTOCOL   RIPv2
#


###############################################################################
# Unicast routing - mixed networks                                            #
###############################################################################

#
# The following routing protocols support mixed networks
# (i.e., switch ethernet, point-to-point, and wireless
# ad hoc networks connected together).  Currently,
# only one of these routing protocols can be specified
# for the entire mixed network.  Different routing protocols
# running on different networks cannot communicate with each other.
#

# ROUTING-PROTOCOL   BELLMANFORD
# ROUTING-PROTOCOL   RIPv2
# ROUTING-PROTOCOL   OSPFv2


###############################################################################
# Multicast Routing - wireless                                                #
###############################################################################

#
# The following specifies the multicast routing protocol.
# Models which work for wireless ad hoc networks are listed.
#

#
# ODMRP follows draft-ietf-manet-odmrp-02.txt.
# To use ODMRP, multicast group members must be specified using
# MULTICAST-GROUP-FILE.  Also, only MCBR application traffic
# supports multicast address destination.
#
# MULTICAST-PROTOCOL         ODMRP
#

#
# To join/leave a multicast group, use MULTICAST-GROUP-FILE.
# The format is:
#
#    <node id> <group to join> <join time> <leave time>
#
# MULTICAST-GROUP-FILE            ./default.member
#


###############################################################################
# Multicast Routing - wired                                                   #
###############################################################################

#
# The following specifies the multicast routing protocol.
# Models which work for wired networks are listed.
#
# To use the below multicast routing protocols, the group
# management protocol IGMP must be running on the host network.
# Furthermore, multicast group members must be specified using
# MULTICAST-GROUP-FILE.  Finally, only MCBR application traffic
# supports multicast address destination.
#

#
# DVMRP follows draft-ietf-idmr-dvmrp-v3-10.
#
# MULTICAST-PROTOCOL         DVMRP
#

#
# MOSPF is a multicast extension to OSPFv2 and follows RFC 1584.
# Note: Enabling MOSPF automatically enables OSPFv2 as well.
#
# MULTICAST-PROTOCOL         MOSPF
#

#
# PIM-DM follows draft-ietf-pim-v2-dm-03.txt.
#
# MULTICAST-PROTOCOL         PIM-DM
#

#
# IGMP follows RFC 2236.  IGMP must be specified at the host network
# for DVMRP to run correctly.  Specify the IGMP routers using
# IGMP-ROUTER-LIST.
#
# GROUP-MANAGEMENT-PROTOCOL  IGMP
# IGMP-ROUTER-LIST           {<list of node id>}
#

#
# To join/leave a multicast group, use MULTICAST-GROUP-FILE.
# The format is:
#
#    <node id> <group to join> <join time> <leave time>
#
# MULTICAST-GROUP-FILE            ./default.member
#


###############################################################################
# Routing - Quality Of Service                                                #
###############################################################################
#
# Q-OSPF is a Quality of Service extension to OSPFv2 and follows
# RFC 2676.  To use Q-OSPF, OSPFv2 must be selected as the
# ROUTING-PROTOCOL.  To activate Q-OSPF extensions, select
# QUALITY-OF-SERVICE Q-OSPF
#

# QUALITY-OF-SERVICE      Q-OSPF

#
# QOSPF-COMPUTATION-ALGORITHM specifies the path calculation
# algorithm.  The Extended Breadth First Search Algorithm for
# single path must be selected for Q-OSPF, below.
#

# QOSPF-COMPUTATION-ALGORITHM     EXTENDED_BREADTH_FIRST_SEARCH_SINGLE_PATH

#
# QOSPF-FLOODING-INTERVAL specifies the interval of the flooding
# of LSAs for Q-OSPF.  The default value is 2 seconds.
#

# QOSPF-FLOODING-INTERVAL      2S

#
# QUEUEING-DELAY-FOR-QOS-PATH-CALCULATION specifies whether or not
# queue delay will be considered during path calculation.
#

# QUEUEING-DELAY-FOR-QOS-PATH-CALCULATION   YES
# QUEUEING-DELAY-FOR-QOS-PATH-CALCULATION   NO


###############################################################################
# Routing - exterior gateway protocol                                         #
###############################################################################

#
# BGPv4 is an exterior gateway protocol used to route packets between
# autonomous systems.  BGPv4 follows RFC 1771.
#
# EXTERIOR-GATEWAY-PROTOCOL BGPv4
#
#
# The following timer-related parameters are available for controlling
# BGP timer-related operations.
#
# How much time a speaker will wait to listen for activities from a peer.
# Default is 90 seconds.
# BGP-HOLD-TIME-INTERVAL
#
# Hold time in active state.  Default is 4 minutes.
# BGP-LARGE-HOLD-TIME-INTERVAL
#
# Interval between two subsequent update message for external peers.
# Default is 30 seconds.
# BGP-MIN-RT-ADVERTISEMENT-INTERVAL
#
# Interval between two subsequent update message for internal peers.
# Default is 15 seconds.
# BGP-MIN-AS-ORIGINATION-INTERVAL
#
# Interval between two successive keep alive messages.
# Default is 30 seconds.
# BGP-KEEPALIVE-INTERVAL
#
# Time to wait for re-opening a tcp connection.
# Default is 120 seconds.
# BGP-CONNECT-RETRY-INTERVAL
#
# Time to wait to determine if a neighbor is not reachable.
# Default is 15 seconds.
# BGP-ROUTE-WAITING-INTERVAL
#
#
# Parameters for configuring individual BGP routers are read from
# BGP-CONFIG-FILE.
#
# BGP-CONFIG-FILE         ./default.bgp
#


###############################################################################
# Transport layer                                                             #
###############################################################################

#
# The following describes the various TCP variants that QualNet supports.
# TCP code is ported from FreeBSD 2.2.2.
# By default, if TCP is not specified, LITE is used.
#

#
# TAHOE:   Consists of Slow Start, Congestion Avoidance, and Fast Retransmit.
#          Note: TCP-USE-RFC1323 is disabled.
#
# RENO:    Consists of TAHOE plus Fast Recovery
#          Note: TCP-USE-RFC1323 is disabled.
#
# LITE:    Consists of RENO plus Big Window and
#          Protection Against Wrapped Sequence Numbers options.
#          Note: TCP-USE-RFC1323 must be set to "YES".
#                If not, revert to RENO behavior.
#
# NEWRENO: Consists of RENO with modification to Fast Recovery,
#          (i.e., must receive an ACK for highest sequence number sent
#          to exit Fast Recovery).
#
# SACK:    Consists of Selective Acknowledgement combined with RENO congestion
#          algorithm.
#          Note: When peer does not respond with the Sack Permitted option,
#                SACK reverts to LITE behavior.
#
# TCP    TAHOE | RENO | LITE | NEWRENO | SACK
#

#
# Value of maximum segment size.
# If not specified, default is 512
# TCP-MSS                                512
#

#
# Value of send buffer space.
# If not specified, default is 16384 bytes
# TCP-SEND-BUFFER                        16384
#

#
# Value of receive buffer space.
# If not specified, default is 16384 bytes
# TCP-RECEIVE-BUFFER                     16384
#

#
# Whether to send window scale and timestamps in TCP header options.
# Without window scaling, the maximum reported window size is
# is 65,535 bytes.  With window scaling, the maximum reported window
# size is 1,073,725,440 bytes.
# If not specified, default is NO
# TCP-USE-RFC1323                        YES | NO
#

#
# Whether ACKs for received segments are delayed.
# If not specified, default is YES
# TCP-DELAY-ACKS                         YES | NO
#

#
# Whether to use the Nagle algorithm to coalesce short packets.
# If not specified, default is YES
# TCP-USE-NAGLE-ALGORITHM                YES | NO
#

#
# Whether keep-alive probes are to be used.
# If not specified, default is YES
# TCP-USE-KEEPALIVE-PROBES               YES | NO
#

#
# Whether the Push bit in TCP header is set (except for FIN segments)
# when the send buffer is full.
# If not specified, default is YES
# TCP-USE-PUSH                           YES | NO
#


#
# QualNet supports the following TCP traces.  Only one trace
# type can be used at a time during the entire simulation.
#
# TCPDUMP:  A tcpdump compatible binary format.
#           Trace output file is tcptrace.dmp.  This trace file can
#           be used with the tcptrace (http://www.tcptrace.org/index.html)
#           Unix utility program.
#
#           Note: The machine type (big or little endian)
#                 must also be specified in tcp.c with the default being
#                 little endian.  To specify big endian, comment out
#                 "#define LITTLE_ENDIAN" in tcp.c and recompile QualNet.
#
# TCPDUMP-ASCII:  A tcpdump compatible ascii format.
#                 Trace output file is tcptrace.asc
#
# By default, QualNet does not generate a TCP trace file.
# To generate one, use the following:
#
# TCP-TRACE TCPDUMP | TCPDUMP-ASCII
#

#
# Additionally, the direction of the trace can be specified with the following:
#
# BOTH:   Trace both input and output packets.
# OUTPUT: Trace only packets output to the network.
# INPUT:  Trace only packets received from the network.
#
# By default, the direction is set to BOTH.
#
# Note: The user should note that while there is flexibility
#       in specifying any combination of directions, it may not
#       satisfy the needs of tcptrace analysis.
#       The graphical output, especially the rtt plot, may not
#       show up in some combinations.  An example is input from
#       one node and output from the node across the connnection.
#       In most instances, specifying the direction as BOTH is suitable.
#
#
# TCP-TRACE-DIRECTION  BOTH | OUTPUT | INPUT
#

#
# Example: To get a TCPDUMP trace for node 1, do the following:
#
# [1] TCP-TRACE                 TCPDUMP
# [1] TCP-TRACE-DIRECTION       BOTH
#
# Next, use 'tcptrace -G tcptrace.dmp' to get all the xplot files.
# Then, use 'xplot <file>' to view the xplot files.
#


###############################################################################
# Application layer                                                           #
###############################################################################

#
# The following is used to set up applications such as FTP and Telnet.
# The file will need to contain parameters that will be used to
# determine connections and other characteristics of the particular
# application.
#

  APP-CONFIG-FILE   ./default.app

###############################################################################
# Statistics                                                                  #
###############################################################################

#
# The following parameters determine if you are interested in the
# statistics of a single or multiple layer.  By specifying the following
# parameters as YES, the simulation will provide you with statistics for
# that particular layer.  All the statistics are compiled together into
# a file called "qualnet.stat" that is produced at the end of the simulation.
# If you need the statistics for a particular node or particular protocol,
# it is easy to do the filtering.  Every single line in the file is of
# the following format:
#
# Node:      9, Layer:  PhyNoCapture, Total number of collisions is 0
#

APPLICATION-STATISTICS                  YES
TCP-STATISTICS                          NO
UDP-STATISTICS                          NO
RSVP-STATISTICS                         NO
ROUTING-STATISTICS                      YES
IGMP-STATISTICS                         NO
EXTERIOR-GATEWAY-PROTOCOL-STATISTICS    NO
NETWORK-LAYER-STATISTICS                NO
QUEUE-STATISTICS                        NO
MAC-LAYER-STATISTICS                    NO
PHY-LAYER-STATISTICS                    NO



###############################################################################
# Tracer                                                                      #
###############################################################################

#
# The following allows packets to be traced up and down the protocol
# stack and between nodes.  The packet headers are printed as the packet
# travels up and down the protocol stack.  The trace output is printed to
# <EXPERIMENT-NAME>.trace.  The trace file can then be viewed with
# the Tracer GUI by using <QUALNET_HOME>/gui/bin/RunTracer
#
# By default, packet tracing is turned off.  To use packet tracing:
#
# PACKET-TRACE              YES | NO
#

#
# By default, when packet tracing is turned on, all layers of the
# protocol stack are traced.  The following are the currently layers
# being supported for packet tracing:
#
# TRACE-TRANSPORT-LAYER     YES | NO
# TRACE-NETWORK-LAYER       YES | NO
#

#
# By default, TRACE-DIRECTION is set to BOTH.  INPUT means that only
# packets received by a node are traced.  OUTPUT means that only
# packets sent by a node are traced.  BOTH means packets that are
# sent or received by a node are traced.
#
# TRACE-DIRECTION          INPUT | OUTPUT | BOTH
#

#
# By default, all protocols are traced.  To selectively trace particular
# protocols, either use "TRACE-ALL NO" and selectively turn on the
# particular protocols to be traced or use "TRACE-ALL YES" and selectively
# turn off protocols that are not to be traced.
#
# TRACE-ALL                YES | NO
#
# Protocols that supports packet tracing are:
#
# TRACE-TCP                YES | NO
# TRACE-UDP                YES | NO
# TRACE-IP                 YES | NO
# TRACE-OSPFv2             YES | NO
#
# For instance, the following two examples will only show IP header
# information as the packet traverses up and down the protocol stack:
#
# TRACE-ALL                NO
# TRACE-IP                 YES
#
# or
#
# TRACE-DSR                NO
# TRACE-TCP                NO
# TRACE-UDP                NO
# TRACE-OSPFv2             NO
#


###############################################################################
# GUI Options                                                                 #
###############################################################################
#
# The Animator GUI recognizes several options.  Animation may be
# enabled and stored to a trace file by using the command line -animate
# flag.  The following variables may be used to configure the
# runtime appearance of the Animator
#
# The COMPONENT flag specifies a hierarchical organization of the
# network.  This variable should only be generated by the Animator
# itself.
#
# NODE-NAME specifies a string to use as a label, typically for
# a specific node.  The special value "Default" indicates that the
# node should be labeled with its node ID.
#
# NODE-ICON specifies the path to an icon file (a GIF or JPG) to use
# for one or more nodes.
